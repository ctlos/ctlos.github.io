var suggestions=document.getElementById('suggestions'),search=document.getElementById('search');search!==null&&document.addEventListener('keydown',inputFocus);function inputFocus(a){a.ctrlKey&&a.key==='/'&&(a.preventDefault(),search.focus()),a.key==='Escape'&&(search.blur(),suggestions.classList.add('d-none'))}document.addEventListener('click',function(a){var b=suggestions.contains(a.target);b||suggestions.classList.add('d-none')}),document.addEventListener('keydown',suggestionFocus);function suggestionFocus(c){const d=suggestions.classList.contains('d-none');if(d)return;const a=[...suggestions.querySelectorAll('a')];if(a.length===0)return;const b=a.indexOf(document.activeElement);if(c.key==="ArrowUp"){c.preventDefault();const d=b>0?b-1:0;a[d].focus()}else if(c.key==="ArrowDown"){c.preventDefault();const d=b+1<a.length?b+1:b;a[d].focus()}}(function(){var a=new FlexSearch.Document({encode:!1,split:/\s+/,tokenize:"forward",cache:50,document:{id:'id',store:["href","title","description"],index:["title","description","content"]}}),d=[{id:0,href:"https://ctlos.github.io/wiki/install/",title:"Начало",description:"Prologue Doks.",content:""},{id:1,href:"https://ctlos.github.io/wiki/btrfs/btrfs-part1/",title:"Btrfs установка и использование",description:null,content:'\u003ch2 id="btrfs-установка"\u003eBtrfs установка \u003ca href="#btrfs-%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eУстановите пакет пользовательских утилит.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman -S btrfs-progs arch-install-scripts\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003elsblk\u003c/code\u003e - подсветить все разделы чтобы определиться, что монтировать.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# разбить диск, -z говорит обнулить таблицу разделов\ncfdisk -z /dev/sda\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eТак как Btrfs не может содержать swap-файл, необходимо заранее позаботиться о разделе с подкачкой, если он вам нужен.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkswap /dev/sda2\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздаём файловую систему на разделе. Для разделов от 1ГБ и меньше, чтобы более эффективно использовать пространство, рекомендуется передать ключ -M к параметрам \u003ccode\u003emkfs.btrfs\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eПри желании можно задать лэйбл ключом -L.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkfs.btrfs /dev/sda\u0026lt;цифра\u0026gt;\nmkfs.btrfs -L \u0026quot;root\u0026quot; /dev/sda\u0026lt;цифра\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eТеперь монтируем.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount /dev/sdb1 /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЗатем создадим два подтома под корень и домашние каталоги пользователей.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs subvolume create /mnt/@\nbtrfs subvolume create /mnt/@home\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПросмотр субволумов.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs subvolume list /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОтмонтируем корень ФС.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eumount /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДля того, чтобы монтировать подтом подобно обычному разделу диска, команде mount нужно указывать опцию subvol.\u003c/p\u003e\n\u003cp\u003eМонтируем корень. Сжатие zstd, или lzo.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount -o subvol=@,compress=zstd /dev/sdb1 /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздаём директорию и монтируем в неё наш будущий каталог пользователей.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkdir /mnt/home\nmount -o subvol=@home,compress=zstd /dev/sdb1 /mnt/home\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДальше действуем по вики, т.е. выбираем зеркала и ставим базовую систему. При генерации initramfs mkinitcpio будет ругаться на отсутствие fsck.btrfs - это нормальное явление. Уберём этот хук \u003ccode\u003efsck\u003c/code\u003e из конфига, т.к. для Btrfs он не требуется.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enano /etc/mkinitcpio.conf\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eВот данная строка в файле.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eHOOKS=\u0026quot;base udev autodetect modconf block filesystems keyboard\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИ пересоздадим initramfs.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkinitcpio -p linux\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИ ещё момент по поводу загрузчика, не знаю как другие, а grub точно умеет грузиться с Btrfs, так что выбрать лучше именно его. Так же не забудьте установить пакет btrfs-progs и позаботиться о бэкапах.\u003c/p\u003e\n\u003ch2 id="использование-btrfs"\u003eИспользование btrfs \u003ca href="#%d0%b8%d1%81%d0%bf%d0%be%d0%bb%d1%8c%d0%b7%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5-btrfs" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eМонтируем корень ФС.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount /dev/sdb1 /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздавать снапшоты.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs subvolume snapshot /mnt/@ /mnt/@_bac\nbtrfs subvolume snapshot /mnt/@home /mnt/@home_bac\n\nbtrfs subvolume list /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eКаталоги абсолютно идентичны, и пока мы не начнём изменять файлы, снимки места не занимают.\u003c/p\u003e\n\u003cp\u003eУдаление.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs subvolume delete /mnt/@\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОткат: грузимся с live CD, монтируем корень ФС и переименовываем подтома. Так же подтома можно переименовать прямо в рабочей системе, если загрузка удачна.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount /dev/sdb1 /mnt\nmv /mnt/@ /mnt/@_bad\nmv /mnt/@_bac /mnt/@\n\nmv /mnt/@home /mnt/@home_bad\nmv /mnt/@home_bac /mnt/@home\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЛибо грузимся как обычно, а в меню grub указываем подтом с бэкапом \u003ccode\u003erootflags=subvol=backup\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eКопирование при записи (CoW). Если использовать команду \u003ccode\u003ecp\u003c/code\u003e с ключом \u003ccode\u003e--reflink=auto\u003c/code\u003e, то копия файла не будет занимать место на диске. И впоследствии, допустим, при изменении скопированного файла, записываться на диск будут только изменённые блоки.\u003c/p\u003e\n\u003cp\u003e\u0026ldquo;Онлайн\u0026rdquo; - проверка ФС. При которой осуществляется чтение всех данных/метаданных с перепроверкой контрольных сумм, при наличии ошибок обнаружение их и исправление по возможности.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs scrub start -B /\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЕсли опустить ключ \u003ccode\u003e-B\u003c/code\u003e, процесс уйдёт в фон, и о ходе выполнения можно будет узнать командой.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs scrub status /\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПример вывода.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003escrub status for 56edc366-a153-4eee-b2a6-471b7066b93d\nscrub started at Sat Dec 14 06:37:19 2013 and finished after 3242 seconds\ntotal bytes scrubbed: 222.45GB with 0 errors\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eРекомендуется проводить проверку регулярно (еженедельно). \u0026ldquo;Оффлайн\u0026rdquo; - проверка ФС (на отмонтированном разделе). При отсутствии ошибок утилита возвратит 0.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs check /dev/sda\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="установка-из-существующей-системы-или-с-live-usb"\u003eУстановка из существующей системы или с live usb \u003ca href="#%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0-%d0%b8%d0%b7-%d1%81%d1%83%d1%89%d0%b5%d1%81%d1%82%d0%b2%d1%83%d1%8e%d1%89%d0%b5%d0%b9-%d1%81%d0%b8%d1%81%d1%82%d0%b5%d0%bc%d1%8b-%d0%b8%d0%bb%d0%b8-%d1%81-live-usb" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman -S btrfs-progs arch-install-scripts\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003elsblk\u003c/code\u003e - подсветить все разделы что бы определиться что монтировать.\u003c/p\u003e\n\u003cp\u003eТак как Btrfs не может содержать swap-файл, необходимо заранее позаботиться о разделе с подкачкой, если он вам нужен.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkswap /dev/sda2\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eВнимание! это отформатирует весь ваш диск, с потерей данных! В данном примере установка идет на весь диск, а не разделы, если вам нужен swap учтите этот момент.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkfs.btrfs -f -L WD /dev/sdb\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eМонтируем.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount /dev/sdb /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздадим два подтома под root \u003ccode\u003e@\u003c/code\u003e и домашний каталог пользователя \u003ccode\u003e@home\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs subvolume create /mnt/@\nbtrfs subvolume create /mnt/@home\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИ отмонтируем корень ФС.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eumount /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eМонтируем корень.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount -o subvol=@,compress=zstd /dev/sdb /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздаём директорию и монтируем в неё наш будущий каталог пользователей.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkdir /mnt/home\nmount -o subvol=@home,compress=zstd /dev/sdb /mnt/home\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eУстанавливаем базовые пакеты.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacstrap /mnt base base-devel linux linux-headers xorg-xinit xorg-server grub zsh mc nano netctl wpa_supplicant dialog dhcpcd btrfs-progs\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздаём fstab.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egenfstab -pU /mnt \u0026gt;\u0026gt; /mnt/etc/fstab\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПроверяем.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecat /mnt/etc/fstab\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздаем директорию и монтируем boot, если нужно.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount -t proc none /mnt/proc\nmount -t sysfs none /mnt/sys\nmount -o bind /dev /mnt/dev\n\ncp -L /etc/resolv.conf /mnt/etc\n\nswapon /dev/sda2\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eНачиная с ядра 5.0 можно создать swap-файл, swap-файл должен располагаться целиком на одном устройстве, создаваться с отключенным COW и сжатием.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003etruncate -s 0 /swapfile\nchattr +C /swapfile\nbtrfs property set /swapfile compression none\nfallocate /swapfile -l4g\nchmod 600 /swapfile\nmkswap /swapfile\nlsattr /swapfile\nswapon /swapfile\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПроверим.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs subvolume list /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eВходим в систему.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003echroot /mnt /bin/zsh\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eНазначаем хост.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eecho ctlos \u0026gt; /etc/hostname\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eВыбор часового пояса.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eln -sf /usr/share/zoneinfo/UTC /etc/localtime\nhwclock --systohc --utc\ntimedatectl set-ntp true\n# или\ntimedatectl set-timezone Europe/Moscow\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eВыберем локаль для системы.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esed -i \u0026quot;s/#\\(en_US\\.UTF-8\\)/\\1/\u0026quot; /etc/locale.gen\nsed -i \u0026quot;s/#\\(ru_RU\\.UTF-8\\)/\\1/\u0026quot; /etc/locale.gen\n\nlocale-gen         # Сгенерировать локали\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПрописать в \u003ccode\u003e/etc/locale.conf\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eecho \u0026quot;LANG=ru_RU.UTF-8\u0026quot; \u0026gt; /etc/locale.conf\necho \u0026quot;LC_COLLATE=C\u0026quot; \u0026gt;\u0026gt; /etc/locale.conf\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eРусский шрифт в консоли.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eecho \u0026quot;KEYMAP=ru\u0026quot; \u0026gt; /etc/vconsole.conf\necho \u0026quot;FONT=cyr-sun16\u0026quot; \u0026gt;\u0026gt; /etc/vconsole.conf\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздаём рам-диск mkinitcpio.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enano /etc/mkinitcpio.conf\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eВ \u003ccode\u003e/etc/mkinitcpio.conf\u003c/code\u003e, в разделе \u003cstrong\u003eHOOKS\u003c/strong\u003e, должен быть прописан хук \u003ccode\u003ekeyboard\u003c/code\u003e \u003ccode\u003ekeymap\u003c/code\u003e, убрать \u003ccode\u003efsck\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eВ разделе \u003cstrong\u003eMODULES\u003c/strong\u003e нужно прописать свой драйвер видеокарты: i915 для Intel, radeon для AMD, nouveau для Nvidia.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eHOOKS=(base udev autodetect modconf block filesystems keyboard keymap)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkinitcpio -p linux\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЗадать пароль root.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epasswd\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздать пользователя.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003euseradd -m -g users -G wheel,audio,video,storage -s /bin/zsh st\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИ задать ему пароль.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epasswd st\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eРасскомментировать в \u003ccode\u003e/etc/pacman.conf\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e[multilib]\nInclude = /etc/pacman.d/mirrorlist\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЗатем выполнить.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman-key --init\npacman-key --populate\npacman -Syy\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eУстановка boot loaderа.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egrub-install /dev/sdb\ngrub-mkconfig -o /boot/grub/grub.cfg\n\u003c/code\u003e\u003c/pre\u003e\n'},{id:2,href:"https://ctlos.github.io/wiki/other/ctlosiso/",title:"Ctlos iso",description:null,content:'\u003ch2 id="создание-iso-образа"\u003eСоздание iso образа \u003ca href="#%d1%81%d0%be%d0%b7%d0%b4%d0%b0%d0%bd%d0%b8%d0%b5-iso-%d0%be%d0%b1%d1%80%d0%b0%d0%b7%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href="https://www.youtube.com/watch?list=PLwdYMSK64DT6CCheHMbaqlOzpqfk2FTvT\u0026amp;v=XNpAXthDbrI" target="_blank" rel="noopener"\u003eYouTube link\u003c/a\u003e Старое видео, но многое объясняет.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="https://github.com/ctlos/ctlosiso/blob/master/README.md" target="_blank" rel="noopener"\u003eGithub README\u003c/a\u003e — быстрый способ.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="подготовка"\u003eПодготовка \u003ca href="#%d0%bf%d0%be%d0%b4%d0%b3%d0%be%d1%82%d0%be%d0%b2%d0%ba%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eУстановить пакеты для сборки.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eyay -S git archiso mkinitcpio-archiso --noconfirm --needed\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003eДля сборки необходимо подключить локально \u003ca href="https://ctlos.github.io/wiki/install/ctlos-repo/" target="_blank" rel="noopener"\u003ectlos_repo\u003c/a\u003e, или изменить под себя pacman.conf и пакеты.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eЗадействован \u003ca href="https://aur.chaotic.cx/" target="_blank" rel="noopener"\u003echaotic\u003c/a\u003e репозиторий, проще всего его установить, через yay из aur.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eyay -S chaotic-keyring chaotic-mirrorlist --noconfirm --needed\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="локальный-репозиторий"\u003eЛокальный репозиторий \u003ca href="#%d0%bb%d0%be%d0%ba%d0%b0%d0%bb%d1%8c%d0%bd%d1%8b%d0%b9-%d1%80%d0%b5%d0%bf%d0%be%d0%b7%d0%b8%d1%82%d0%be%d1%80%d0%b8%d0%b9" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003eНужен в том случае, если вы хотите, что-то собрать и добавить из aur.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eСоздание директории и клонирование репозитория ctlos. Еще немного о \u003ca href="https://wiki.archlinux.org/index.php/Archiso#Custom_local_repository" target="_blank" rel="noopener"\u003eлакальном репо\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkdir ~/ctlos\ncd ~/ctlos\ngit clone https://github.com/ctlos/ctlos_repo\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИли ssh.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone git@github.com:ctlos/ctlo_repo.git\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="сборка-aur-пакетов"\u003eСборка aur пакетов \u003ca href="#%d1%81%d0%b1%d0%be%d1%80%d0%ba%d0%b0-aur-%d0%bf%d0%b0%d0%ba%d0%b5%d1%82%d0%be%d0%b2" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eНайти нужный пакет на сайте аур \u003ca href="https://aur.archlinux.org" target="_blank" rel="noopener"\u003eaur.archlinux.org\u003c/a\u003e и загрузить snapshot вида \u003ccode\u003e*.tar.gz\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eСобираем пакеты в \u003ccode\u003ebuild\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkdir ~/ctlos/ctlos_repo/build\ncd ~/ctlos/ctlos_repo/build\nwget https://aur.archlinux.org/cgit/aur.git/snapshot/gtk3-mushrooms.tar.gz\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eРаспаковываем и собираем пакет.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003etar -xvzf gtk3-mushrooms.tar.gz\ncd gtk3-mushrooms\nmakepkg -s\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eКопируем собраные пакеты в \u003ccode\u003e~/ctlos/ctlos_repo/x86_64\u003c/code\u003e, инициализируем репозиторий. Пакеты в формате \u003ccode\u003e*.pkg.tar.xz\u003c/code\u003e, или \u003ccode\u003ezst\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd ~/ctlos/ctlos_repo/x86_64\nrepo-add ctlos_repo.db.tar.zst *.tar.zst\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИли.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e./update.sh --add\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПосле добавления новых пакетов из aur необходимо переинициализировать репозиторий.(Удалить файлы баз данных), или запустить скрипт \u003ccode\u003eupdate.sh\u003c/code\u003e он сам все пересоздаст.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003erepo-add ctlos_repo.db.tar.zst *.tar.xz\n\nrepo-add ctlos_repo.db.tar.zst *.pkg.tar.zst\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИли.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e./update.sh --add\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="репозиторий-iso"\u003eРепозиторий iso \u003ca href="#%d1%80%d0%b5%d0%bf%d0%be%d0%b7%d0%b8%d1%82%d0%be%d1%80%d0%b8%d0%b9-iso" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eКлонируем репозиторий. Ветка master по умолчанию.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd ~/ctlos\ngit clone --depth=1 https://github.com/ctlos/ctlosiso\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003eДобавляем пользовательский репозиторий для aur пакетов. В \u003ccode\u003e/ctlos/ctlosiso/pacman.conf\u003c/code\u003e. Замнените \u003ccode\u003euser_name\u003c/code\u003e на имя пользователя от которого работаете.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e[ctlos_repo]\nSigLevel = Optional TrustAll\nServer = file:///home/user_name/ctlos/ctlos_repo/$arch\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЗакоментировать репозиторий ctlos, если нужно.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e#[ctlos_repo]\n#SigLevel = Never\n#Server = https://raw.github.com/ctlos/ctlos_repo/dev/repo/$arch\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="сборка-образа"\u003eСборка образа \u003ca href="#%d1%81%d0%b1%d0%be%d1%80%d0%ba%d0%b0-%d0%be%d0%b1%d1%80%d0%b0%d0%b7%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eСделать скрипты исполняемыми.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd ctlosiso\nchmod +x {autobuild.sh,chroot.sh,mkarchiso.sh}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003eПакеты: \u003ccode\u003epackages.x86_64\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eСкрипту \u003ccode\u003eautobuild.sh\u003c/code\u003e обязательно нужно передать аргумент, любой. Я обычно отправляю \u003ccode\u003exfce_1.7.0\u003c/code\u003e de/wm и версию.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo ./autobuild.sh xfce_1.7.0\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eГотовый образ и хэши создаются в данной директории \u003ccode\u003e~/ctlos/ctlosiso/out\u003c/code\u003e.\u003c/p\u003e\n\u003ch3 id="пересборка"\u003eПересборка \u003ca href="#%d0%bf%d0%b5%d1%80%d0%b5%d1%81%d0%b1%d0%be%d1%80%d0%ba%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eУдалить каталоги и запустить скрипт сначала.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo rm -rf {out,work}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИли отредактировать.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo nano /bin/pacstrap\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИзменить строку, для пропуска установленных пакетов.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman_args+=(--noconfirm)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eНа.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman_args+=(--noconfirm --needed)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eУдалить файлы блокировки.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo rm -v work/build.make_*\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="списки-пакетов"\u003eСписки пакетов \u003ca href="#%d1%81%d0%bf%d0%b8%d1%81%d0%ba%d0%b8-%d0%bf%d0%b0%d0%ba%d0%b5%d1%82%d0%be%d0%b2" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eСписок установленных пакетов в системе. Подробно.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eLANG=C pacman -Sl | awk \'/\\[installed\\]$/ {print $1 \u0026quot;/\u0026quot; $2 \u0026quot;-\u0026quot; $3}\' \u0026gt; ~/pkglist.txt\n\nLANG=C pacman -Sl | awk \'/\\[installed\\]$/ {print $2}\' \u0026gt; ~/.pkglist.txt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eКратко.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman -Qqe \u0026gt; ~/pkglist.txt\n\npacman -Qqm \u0026gt; ~/aurlist.txt\n\u003c/code\u003e\u003c/pre\u003e\n'},{id:3,href:"https://ctlos.github.io/wiki/wm/bspwm/",title:"Ctlos Linux Bspwm",description:"Описание конфигурации Ctlos Linux Bspwm, горячие клавиши, утилиты.",content:'\u003cp\u003e\u003cspan role="figure" class="figure"\u003e\n      \u003cimg class="figure-img img-fluid lazyload blur-up" data-sizes="auto" src="https://ctlos.github.io/wiki/wm/bspwm/bspwm010_hu679d220f61bed8a275da1e42e3902f5e_169189_20x0_resize_box_3.png" data-srcset="https://ctlos.github.io/wiki/wm/bspwm/bspwm010_hu679d220f61bed8a275da1e42e3902f5e_169189_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/wm/bspwm/bspwm010_hu679d220f61bed8a275da1e42e3902f5e_169189_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/wm/bspwm/bspwm010_hu679d220f61bed8a275da1e42e3902f5e_169189_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/wm/bspwm/bspwm010_hu679d220f61bed8a275da1e42e3902f5e_169189_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/wm/bspwm/bspwm010_hu679d220f61bed8a275da1e42e3902f5e_169189_500x0_resize_box_3.png 500w" width="1366" height="768" alt="Bspwm"\u003e\n      \u003cnoscript\u003e\u003cimg class="figure-img img-fluid" sizes="100vw" srcset="https://ctlos.github.io/wiki/wm/bspwm/bspwm010_hu679d220f61bed8a275da1e42e3902f5e_169189_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/wm/bspwm/bspwm010_hu679d220f61bed8a275da1e42e3902f5e_169189_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/wm/bspwm/bspwm010_hu679d220f61bed8a275da1e42e3902f5e_169189_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/wm/bspwm/bspwm010_hu679d220f61bed8a275da1e42e3902f5e_169189_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/wm/bspwm/bspwm010_hu679d220f61bed8a275da1e42e3902f5e_169189_500x0_resize_box_3.png 500w" src="https://ctlos.github.io/wiki/wm/bspwm/bspwm010.png" width="1366" height="768" alt="Bspwm"\u003e\u003c/noscript\u003e\n      \u003c/span\u003e\n  \u003c/p\u003e\n\u003cp\u003e\u003ca href="https://www.youtube.com/watch?v=INOtQJ_yZE4" target="_blank" rel="noopener"\u003eDemo Video\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="скачать-iso-образ"\u003eСкачать iso образ \u003ca href="#%d1%81%d0%ba%d0%b0%d1%87%d0%b0%d1%82%d1%8c-iso-%d0%be%d0%b1%d1%80%d0%b0%d0%b7" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eДанный оконный менеджер доступен в \u003ccode\u003exfce iso\u003c/code\u003e, метод online установки.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="/get"\u003eСкачать\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eРекомендации после установки \u003ca href="/wiki/install/next-install"\u003enext-install\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id="оформление"\u003eОформление \u003ca href="#%d0%be%d1%84%d0%be%d1%80%d0%bc%d0%bb%d0%b5%d0%bd%d0%b8%d0%b5" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eТема gtk: модификация Qogir.\u003c/li\u003e\n\u003cli\u003eИконки: Qogir-dark.\u003c/li\u003e\n\u003cli\u003eКурсор: capitaine-cursors.\u003c/li\u003e\n\u003cli\u003eШрифт: Clear Sans Medium \u003ccode\u003ettf-clear-sans\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eШрифт терминала: uw-ttyp0(\u003ccode\u003eotb-uw_ttyp0\u003c/code\u003e), Hack Nerd Font Mono,9 \u003ccode\u003enerd-fonts-hack\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="панели"\u003eПанели \u003ca href="#%d0%bf%d0%b0%d0%bd%d0%b5%d0%bb%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003ch3 id="верхний-бар--polybar"\u003eВерхний бар — polybar \u003ca href="#%d0%b2%d0%b5%d1%80%d1%85%d0%bd%d0%b8%d0%b9-%d0%b1%d0%b0%d1%80--polybar" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eЭлементы:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eЗапуск меню: левый клик - rofi.\u003c/li\u003e\n\u003cli\u003eUrxvt с сессией tmux. Сессия сохраняется, при закрытии и восстанавливается, при следующем нажатии.\u003c/li\u003e\n\u003cli\u003eNewsboat - rss читалка.\u003c/li\u003e\n\u003cli\u003eМонитор cpu и ram.\u003c/li\u003e\n\u003cli\u003eДоступные обновления, клик: pacui - псевдо графический менеджер пакетов.\u003c/li\u003e\n\u003cli\u003eРабочие столы (теги).\u003c/li\u003e\n\u003cli\u003eСервис tor. Включить левый клик, выключить правый.\u003c/li\u003e\n\u003cli\u003eMusic контроллер mpd.\u003c/li\u003e\n\u003cli\u003eЗвук по скроллу, клик - выкл.\u003c/li\u003e\n\u003cli\u003eДата. Лклик - подробней, Пклик - календарь.\u003c/li\u003e\n\u003cli\u003eРаскладка.\u003c/li\u003e\n\u003cli\u003eМеню выхода.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="нижний-бар--tint2"\u003eНижний бар — tint2 \u003ca href="#%d0%bd%d0%b8%d0%b6%d0%bd%d0%b8%d0%b9-%d0%b1%d0%b0%d1%80--tint2" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eName\u003c/th\u003e\n\u003cth\u003eОписание\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eudiskie\u003c/td\u003e\n\u003ctd\u003eмонтирование usb.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eredshift-gtk\u003c/td\u003e\n\u003ctd\u003eцветовой тон экрана.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003exfce4-power-manager\u003c/td\u003e\n\u003ctd\u003eменеджер питания.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eparcellite\u003c/td\u003e\n\u003ctd\u003eменеджер буфера обмена. \u003ccode\u003ectrl+alt+h\u003c/code\u003e открыть историю.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id="горячие-клавиши"\u003eГорячие клавиши \u003ca href="#%d0%b3%d0%be%d1%80%d1%8f%d1%87%d0%b8%d0%b5-%d0%ba%d0%bb%d0%b0%d0%b2%d0%b8%d1%88%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eОчень многое переопределено, но никто не мешает использовать дефолт, \u003ca href="https://github.com/baskerville/bspwm/blob/master/examples/sxhkdrc" target="_blank" rel="noopener"\u003esxhkdrc\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eДобавлен дефолтный конфиг \u003ccode\u003e~/.config/bspwm/sxhkd/sxhkdrc.example\u003c/code\u003e, если хотите просто переименуйте исходный, но создайте копию.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emv ~/.config/bspwm/sxhkd/sxhkdrc ~/.config/bspwm/sxhkd/sxhkdrc.bak\nmv ~/.config/bspwm/sxhkd/sxhkdrc.example ~/.config/bspwm/sxhkd/sxhkdrc\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="режимы-и-управление-окнами"\u003eРежимы и управление окнами \u003ca href="#%d1%80%d0%b5%d0%b6%d0%b8%d0%bc%d1%8b-%d0%b8-%d1%83%d0%bf%d1%80%d0%b0%d0%b2%d0%bb%d0%b5%d0%bd%d0%b8%d0%b5-%d0%be%d0%ba%d0%bd%d0%b0%d0%bc%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eРежим тайлинга tiled, плитка.\u003c/li\u003e\n\u003cli\u003eРежим pseudo_tiled, псевдо тайлинг. Нечто среднее между floating и tiled.\u003c/li\u003e\n\u003cli\u003eРежим floating, плавающий режим.\u003c/li\u003e\n\u003cli\u003eРежим fullscreen, Весь экран.\u003c/li\u003e\n\u003cli\u003eРежим monocle, окно занимает всё доступное пространство.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eЗажатая \u003ccode\u003eSuper(win)\u003c/code\u003e и клавиши мыши манипулируют окнами: резмер, положение.\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eКлюч\u003c/th\u003e\n\u003cth\u003eОписание\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + F1\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eСправка по горячим клавишам на us.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + a\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПсевдо тайлинг.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + s\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003efloating, плавающий режим.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + d\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eтайлинг.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + f\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003efullscreen.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + m\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПереключение режима monocle.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ealt + space\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПереключение режима тайлинг/floating.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + g\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПриклеить окно.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + z\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eЗакрыть окно.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + -\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eСкрыть/показать окно.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + c\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПереход в режим monocle, отключение рамок и отступов.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + v\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eОтключение отступов.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + alt + {↑,↓}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eУменьшение/увеличение отступов, \u003ccode\u003esuper + c\u003c/code\u003e в исходное состояние.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + scroll\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eУменьшение/увеличение отступов, \u003ccode\u003esuper + c\u003c/code\u003e в исходное состояние.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + {←,→,↑,↓}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПеремещение окна в режиме floating.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + {h,j,k,l}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eперемещение по окнам в режиме tiled.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + alt + {h,j,k,l}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eизменение размера в режиме tiled.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + shift + {h,j,k,l}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eперетаскивание в режиме tiled.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ealt + tab\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПереключение окна на текущем теге.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + tab\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПереключение на предыдущий тег.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + {1-9,0}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПереход на тег.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + {q...o,0}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПереход на тег.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + alt + {←,→}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПеремещение по тегам.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + alt + {1-9,0}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eОтправка окна на номер тега.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + ctrl + p\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eСкрыть/показать polybar.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id="запуск-утилит"\u003eЗапуск утилит \u003ca href="#%d0%b7%d0%b0%d0%bf%d1%83%d1%81%d0%ba-%d1%83%d1%82%d0%b8%d0%bb%d0%b8%d1%82" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eКлюч\u003c/th\u003e\n\u003cth\u003eОписание\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ealt + shift\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПереключение раскладки.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + alt + r\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eРестарт bspwm.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + alt + q\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eВыход из bspwm.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + Escape\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eРелоад конфига горячих клавиш sxhkd.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ealt + Return\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eТерминал драйвинг, задаем координаты старта, зажатым ЛКМ.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + Return\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eТерминал на первом теге, в режиме тайлинга, monocle.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ealt + t\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eТерминал в режиме floating.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ealt + r\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eRanger - консольный менеджер файлов.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ealt + d\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eRofi - меню.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ealt + w\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eFirefox.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ealt + f\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eThunar.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + Delete\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eБлокировка экрана.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + alt + Delete\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eМеню выхода.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ePrint\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eскрин с отправкой в \u003ccode\u003e~/Pictures/screen\u003c/code\u003e(директория должна быть). Копируется в буфер.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + Print\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eскрин в режиме выделения.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + alt + Print\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eскрин с задержкой 5 сек. и отправкой в \u003ccode\u003e~/Pictures/screen\u003c/code\u003e(директория должна быть). Копируется в буфер.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper + alt + m\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eТекущий трек в ncmpcpp.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ectrl + alt + {c,v}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eКопировать/вставить в терминале.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id="конфигурационные-файлы"\u003eКонфигурационные файлы \u003ca href="#%d0%ba%d0%be%d0%bd%d1%84%d0%b8%d0%b3%d1%83%d1%80%d0%b0%d1%86%d0%b8%d0%be%d0%bd%d0%bd%d1%8b%d0%b5-%d1%84%d0%b0%d0%b9%d0%bb%d1%8b" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eПуть\u003c/th\u003e\n\u003cth\u003eОписание\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/bspwm/bspwmrc\u003c/td\u003e\n\u003ctd\u003eОсновной конфиг.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/bspwm\u003c/td\u003e\n\u003ctd\u003eСкрипты.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/bspwm/autostart.sh\u003c/td\u003e\n\u003ctd\u003eСкрипт автостарта. Он вызывается в \u003ccode\u003e~/.config/bspwm/bspwmrc\u003c/code\u003e. Функция \u003ccode\u003erun\u003c/code\u003e нужна для рестарта bspwm, избегает дублей.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/bspwm/sxhkd/sxhkdrc\u003c/td\u003e\n\u003ctd\u003eКонфиг горячих клавиш.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e/etc/sddm.conf\u003c/td\u003e\n\u003ctd\u003eКонфиг менеджера входа SDDM.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/bspwm/polybar\u003c/td\u003e\n\u003ctd\u003eСкрипты и конфиг polybar.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/tint2/tray.tint2rc\u003c/td\u003e\n\u003ctd\u003eКонфиг tint2 трей. В меню есть gui-конфигуратор (Настройки tint).\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/picom.conf\u003c/td\u003e\n\u003ctd\u003eДекоратор окон, композитный менеджер.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.Xresources\u003c/td\u003e\n\u003ctd\u003eКонфиг Urxvt терминала. После изменения файла выполнить \u003ccode\u003exrdb -merge $HOME/.Xresources\u003c/code\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.colors\u003c/td\u003e\n\u003ctd\u003eПалитры терминала, указывать в \u003ccode\u003e~/.Xresources\u003c/code\u003e строка \u003ccode\u003e#include \u0026quot;.colors/sn\u0026quot;\u003c/code\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.zshrc\u003c/td\u003e\n\u003ctd\u003eКонфиг оболочки $SHELL.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.alias_zsh\u003c/td\u003e\n\u003ctd\u003eАлиасы и функции zsh, сокращения команд терминала.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eЭто основа, все остальное в \u003ccode\u003e~/\u003c/code\u003e и \u003ccode\u003e~/.config\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id="утилиты"\u003eУтилиты \u003ca href="#%d1%83%d1%82%d0%b8%d0%bb%d0%b8%d1%82%d1%8b" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eName\u003c/th\u003e\n\u003cth\u003eОписание\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eneofetch, fetch\u003c/td\u003e\n\u003ctd\u003eинформация о системе. \u003ccode\u003e~/.bin/fetch\u003c/code\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003elxappearance, qt5ct\u003c/td\u003e\n\u003ctd\u003eнастройка внешнего вида.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003elxrandr\u003c/td\u003e\n\u003ctd\u003eразрешение экрана.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003egotop\u003c/td\u003e\n\u003ctd\u003eКонсольный системный монитор.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003egufw\u003c/td\u003e\n\u003ctd\u003eмежсетевой экран.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eranger, thunar\u003c/td\u003e\n\u003ctd\u003eфайловые менеджеры.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003efzf\u003c/td\u003e\n\u003ctd\u003eинкрементальный поиск, \u003ccode\u003ezz\u003c/code\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003enano, micro\u003c/td\u003e\n\u003ctd\u003eконсольный текстовый редактор, привычные клавиши:) ctrl+s - сохранить, ctrl+q - выход и т.д.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eleafpad\u003c/td\u003e\n\u003ctd\u003eGui текстовый редактор.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003exreader\u003c/td\u003e\n\u003ctd\u003eпросмотр pdf.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eviewnior\u003c/td\u003e\n\u003ctd\u003eпросмотр изображений.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003encmpcpp, audacious\u003c/td\u003e\n\u003ctd\u003eмузыкальный плеер.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ecava\u003c/td\u003e\n\u003ctd\u003eвизуализатор.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003empv, smplayer\u003c/td\u003e\n\u003ctd\u003eвидео плеер.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eyoutube-dl, straw-viewer, streamlink\u003c/td\u003e\n\u003ctd\u003eскачивание, просмотр, просмотр стриминга.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003esimplescreenrecorder\u003c/td\u003e\n\u003ctd\u003eЗапись экрана.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eflameshot\u003c/td\u003e\n\u003ctd\u003eскриншоты.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ekeepassxc\u003c/td\u003e\n\u003ctd\u003eменеджер паролей.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003everacrypt\u003c/td\u003e\n\u003ctd\u003eшифрование файлов.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003epavucontrol\u003c/td\u003e\n\u003ctd\u003eуправление звуком.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003efile-roller\u003c/td\u003e\n\u003ctd\u003eменеджер архивов.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003etimeshift\u003c/td\u003e\n\u003ctd\u003eрезервное копирование.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003etmux\u003c/td\u003e\n\u003ctd\u003eтерминальный мультиплексор.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003etmrun.sh\u003c/td\u003e\n\u003ctd\u003eTmux с 3 табами. \u003ccode\u003e~/.bin/tmrun.sh\u003c/code\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eЕще скрипты: \u003ccode\u003e~/.bin\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eКомментарии приветствуются. Вступай в telegram чат: \u003ca href="https://telegram.me/ctlos" target="_blank" rel="noopener"\u003et.me/ctlos\u003c/a\u003e.\u003c/p\u003e\n'},{id:4,href:"https://ctlos.github.io/wiki/config/videocfg/",title:"Видео драйвера",description:null,content:'\u003ch2 id="информация"\u003eИнформация \u003ca href="#%d0%b8%d0%bd%d1%84%d0%be%d1%80%d0%bc%d0%b0%d1%86%d0%b8%d1%8f" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eУзнать информацию о видео карте.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003elspci -k | grep -A 2 -E \u0026quot;(VGA|3D)\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003exf86-video-amdgpu\u003c/code\u003e — новый, свободный драйвер для видеокарт AMD.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003exf86-video-ati\u003c/code\u003e — старый свободный драйвер для AMD.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003exf86-video-intel\u003c/code\u003e — драйвер для встроенной графики Intel.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003exf86-video-nouveau\u003c/code\u003e — свободный драйвер для карт NVIDIA.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003exf86-video-vesa\u003c/code\u003e — свободный драйвер, поддерживающий все карты, но с очень ограниченной функциональностью. Для виртуальной машины.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003envidia\u003c/code\u003e — проприетарный драйвер для NVIDIA.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eПроприетарные драйвера обычно увеличивают производительность.\u003c/p\u003e\n\u003cp\u003eРаскомментировать репозиторий multilib в \u003ccode\u003e/etc/pacman.conf\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://wiki.archlinux.org/index.php/Hardware_video_acceleration" target="_blank" rel="noopener"\u003eАппаратное ускорение видео\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="intel"\u003eIntel \u003ca href="#intel" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S xf86-video-intel intel-media-driver lib32-mesa\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003eДля поддержки 32-битных приложений \u003ccode\u003elib32-mesa\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eДля intel все не однозначно, в случае проблем обращайтесь к \u003ca href="https://wiki.archlinux.org/index.php/intel_graphics" target="_blank" rel="noopener"\u003eArch Wiki\u003c/a\u003e, если зависания и разрывы попробуйте создать файл \u003ccode\u003esudo nano /etc/X11/xorg.conf.d/20-intel.conf\u003c/code\u003e с таким содержимым.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eSection \u0026quot;Device\u0026quot;\n  Identifier \u0026quot;Intel Graphics\u0026quot;\n  Driver \u0026quot;intel\u0026quot;\n  Option \u0026quot;AccelMethod\u0026quot; \u0026quot;uxa\u0026quot;\n  Option \u0026quot;NoAccel\u0026quot; \u0026quot;True\u0026quot;\n  Option \u0026quot;DRI\u0026quot; \u0026quot;False\u0026quot;\n  Option \u0026quot;TearFree\u0026quot; \u0026quot;true\u0026quot;\nEndSection\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="nvidia"\u003eNvidia \u003ca href="#nvidia" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eyay -S nvidia nvidia-utils nvidia-settings opencl-nvidia opencl-headers lib32-nvidia-utils lib32-opencl-nvidia\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДрайвер nvidia может иметь префикс nvidia-390xx, конкретно для вашей карты, уточняйте на сайте производителя и в \u003ca href="https://wiki.archlinux.org/index.php/NVIDIA" target="_blank" rel="noopener"\u003eАрч-вики\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eyay -S nvidia-390xx-dkms nvidia-390xx-utils nvidia-390xx-settings opencl-nvidia-390xx lib32-opencl-nvidia-390xx lib32-nvidia-390xx-utils\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздание xorg файла \u003ccode\u003e/etc/X11/xorg.conf\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo nvidia-xconfig\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="убираем-тиринг"\u003eУбираем тиринг \u003ca href="#%d1%83%d0%b1%d0%b8%d1%80%d0%b0%d0%b5%d0%bc-%d1%82%d0%b8%d1%80%d0%b8%d0%bd%d0%b3" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo nvidia-settings\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПереходим.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eX Server Display Configuration\u003c/li\u003e\n\u003cli\u003eAdvanced\u003c/li\u003e\n\u003cli\u003eForce Full Composition Pipeline\u003c/li\u003e\n\u003cli\u003eSave to X Configuration File\u003c/li\u003e\n\u003cli\u003eExit\u003c/li\u003e\n\u003cli\u003eReboot\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id="amd"\u003eAMD \u003ca href="#amd" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="https://wiki.archlinux.org/index.php/ATI" target="_blank" rel="noopener"\u003eATI\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://wiki.archlinux.org/index.php/AMDGPU" target="_blank" rel="noopener"\u003eAMDGPU\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S xf86-video-ati\n# или\nsudo pacman -S xf86-video-amdgpu\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="убираем-тиринг-1"\u003eУбираем тиринг \u003ca href="#%d1%83%d0%b1%d0%b8%d1%80%d0%b0%d0%b5%d0%bc-%d1%82%d0%b8%d1%80%d0%b8%d0%bd%d0%b3-1" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eЕсли \u003cstrong\u003eATI\u003c/strong\u003e \u003ccode\u003exf86-video-ati\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo nano /etc/X11/xorg.conf.d/20-radeon.conf\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eSection \u0026quot;Device\u0026quot;\n    Identifier \u0026quot;Radeon\u0026quot;\n    Driver \u0026quot;radeon\u0026quot;\n    Option \u0026quot;TearFree\u0026quot; \u0026quot;true\u0026quot;\nEndSection\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЕсли \u003cstrong\u003eAMDGPU\u003c/strong\u003e \u003ccode\u003exf86-video-amdgpu\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo nano /etc/X11/xorg.conf.d/20-amdgpu.conf\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eSection \u0026quot;Device\u0026quot;\n    Identifier \u0026quot;AMD\u0026quot;\n    Driver \u0026quot;amdgpu\u0026quot;\n    Option \u0026quot;TearFree\u0026quot; \u0026quot;true\u0026quot;\nEndSection\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="для-виртуальной-машины"\u003eДля виртуальной машины \u003ca href="#%d0%b4%d0%bb%d1%8f-%d0%b2%d0%b8%d1%80%d1%82%d1%83%d0%b0%d0%bb%d1%8c%d0%bd%d0%be%d0%b9-%d0%bc%d0%b0%d1%88%d0%b8%d0%bd%d1%8b" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S xf86-video-vesa\n\u003c/code\u003e\u003c/pre\u003e\n'},{id:5,href:"https://ctlos.github.io/wiki/backup/timeshift-rsync/",title:"Резервное копирование",description:null,content:'\u003ch2 id="timeshift"\u003eTimeshift \u003ca href="#timeshift" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eОтличная программа для создания backup-ов и восстановления системы: \u003cstrong\u003eTimeshift\u003c/strong\u003e. Данная утилита создает мгновенны снимки btrfs, а со стандартами ext работает через \u003cstrong\u003ersync\u003c/strong\u003e. Установка.\u003c/p\u003e\n\u003cp\u003e\u003cspan role="figure" class="figure"\u003e\n      \u003cimg class="figure-img img-fluid lazyload blur-up" data-sizes="auto" src="https://ctlos.github.io/wiki/backup/timeshift-rsync/timeshift_hu17827c37b5005d7829e7f8c6821a3a43_31714_20x0_resize_box_3.png" data-srcset="https://ctlos.github.io/wiki/backup/timeshift-rsync/timeshift_hu17827c37b5005d7829e7f8c6821a3a43_31714_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/backup/timeshift-rsync/timeshift_hu17827c37b5005d7829e7f8c6821a3a43_31714_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/backup/timeshift-rsync/timeshift_hu17827c37b5005d7829e7f8c6821a3a43_31714_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/backup/timeshift-rsync/timeshift_hu17827c37b5005d7829e7f8c6821a3a43_31714_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/backup/timeshift-rsync/timeshift_hu17827c37b5005d7829e7f8c6821a3a43_31714_500x0_resize_box_3.png 500w" width="832" height="630" alt="Timeshift"\u003e\n      \u003cnoscript\u003e\u003cimg class="figure-img img-fluid" sizes="100vw" srcset="https://ctlos.github.io/wiki/backup/timeshift-rsync/timeshift_hu17827c37b5005d7829e7f8c6821a3a43_31714_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/backup/timeshift-rsync/timeshift_hu17827c37b5005d7829e7f8c6821a3a43_31714_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/backup/timeshift-rsync/timeshift_hu17827c37b5005d7829e7f8c6821a3a43_31714_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/backup/timeshift-rsync/timeshift_hu17827c37b5005d7829e7f8c6821a3a43_31714_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/backup/timeshift-rsync/timeshift_hu17827c37b5005d7829e7f8c6821a3a43_31714_500x0_resize_box_3.png 500w" src="https://ctlos.github.io/wiki/backup/timeshift-rsync/timeshift.png" width="832" height="630" alt="Timeshift"\u003e\u003c/noscript\u003e\n      \u003c/span\u003e\n  \u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eyay -S timeshift\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИнтерфейс очень простой, главное правильно настроить исключения.\u003c/p\u003e\n\u003cp\u003eЭто нужно для того, чтобы вы не дампили большие и не нужные каталоги вашей системы, т.к. это экономит время и место на диске, а работоспособность сохраняется. В пример могу привести каталог virtualbox, мне например он в копии системы не нужен, в том числе и смонтированный диск \u003ccode\u003e/home/st/files\u003c/code\u003e, думаю вы поняли.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eВот мой список правил. Правила исключений должны быть выше домашней директории, измените путем перетаскивания.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cspan role="figure" class="figure"\u003e\n      \u003cimg class="figure-img img-fluid lazyload blur-up" data-sizes="auto" src="https://ctlos.github.io/wiki/backup/timeshift-rsync/exclude-timeshift_hu2a218586ff039f5d7ad981a01663bced_43488_20x0_resize_box_3.png" data-srcset="https://ctlos.github.io/wiki/backup/timeshift-rsync/exclude-timeshift_hu2a218586ff039f5d7ad981a01663bced_43488_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/backup/timeshift-rsync/exclude-timeshift_hu2a218586ff039f5d7ad981a01663bced_43488_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/backup/timeshift-rsync/exclude-timeshift_hu2a218586ff039f5d7ad981a01663bced_43488_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/backup/timeshift-rsync/exclude-timeshift_hu2a218586ff039f5d7ad981a01663bced_43488_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/backup/timeshift-rsync/exclude-timeshift_hu2a218586ff039f5d7ad981a01663bced_43488_500x0_resize_box_3.png 500w" width="702" height="609" alt="Timeshift exclude"\u003e\n      \u003cnoscript\u003e\u003cimg class="figure-img img-fluid" sizes="100vw" srcset="https://ctlos.github.io/wiki/backup/timeshift-rsync/exclude-timeshift_hu2a218586ff039f5d7ad981a01663bced_43488_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/backup/timeshift-rsync/exclude-timeshift_hu2a218586ff039f5d7ad981a01663bced_43488_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/backup/timeshift-rsync/exclude-timeshift_hu2a218586ff039f5d7ad981a01663bced_43488_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/backup/timeshift-rsync/exclude-timeshift_hu2a218586ff039f5d7ad981a01663bced_43488_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/backup/timeshift-rsync/exclude-timeshift_hu2a218586ff039f5d7ad981a01663bced_43488_500x0_resize_box_3.png 500w" src="https://ctlos.github.io/wiki/backup/timeshift-rsync/exclude-timeshift.png" width="702" height="609" alt="Timeshift exclude"\u003e\u003c/noscript\u003e\n      \u003c/span\u003e\n  \u003c/p\u003e\n\u003cp\u003eСуществует и консольный вариант timeshift, вы можете сделать \u003ccode\u003echroot\u003c/code\u003e в вашу систему, смонтировать разделы и откатить версию. В help есть примеры, все просто \u003ccode\u003etimeshift -h\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id="rsync"\u003eRsync \u003ca href="#rsync" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e\u003cimg class="img-fluid lazyload blur-up" sizes="100vw" src="https://thumbs.gfycat.com/ComplexNeighboringBoilweevil-size_restricted.gif" data-src="https://thumbs.gfycat.com/ComplexNeighboringBoilweevil-size_restricted.gif" alt="Terminal"\u003e\n\u003c/p\u003e\n\u003cp\u003eМонтируем раздел для резервной копии, предварительно создайте каталог.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount /dev/sdb1 /dump\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eКопируем \u003ccode\u003e/\u003c/code\u003e в \u003ccode\u003e/dump\u003c/code\u003e с исключением, но с созданием нужных директорий.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ersync -cauvP --delete --delete-excluded --exclude={\u0026quot;/dev/*\u0026quot;,\u0026quot;/proc/*\u0026quot;,\u0026quot;/sys/*\u0026quot;,\u0026quot;/tmp/*\u0026quot;,\u0026quot;/run/*\u0026quot;,\u0026quot;/mnt/*\u0026quot;,\u0026quot;/media/*\u0026quot;,\u0026quot;/lost+found\u0026quot;,\u0026quot;/var/lib/pacman/sync/*\u0026quot;,\u0026quot;/var/cache/*\u0026quot;,\u0026quot;/var/tmp/*\u0026quot;,\u0026quot;/boot/*\u0026quot;,\u0026quot;/home/*\u0026quot;} /* /dump/\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСкопировать систему полностью.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ersync -cauvP --delete --delete-excluded --exclude={\u0026quot;/dev/*\u0026quot;,\u0026quot;/proc/*\u0026quot;,\u0026quot;/sys/*\u0026quot;,\u0026quot;/tmp/*\u0026quot;,\u0026quot;/run/*\u0026quot;,\u0026quot;/mnt/*\u0026quot;,\u0026quot;/media/*\u0026quot;,\u0026quot;/lost+found\u0026quot;,\u0026quot;/var/lib/pacman/sync/*\u0026quot;,\u0026quot;/var/cache/*\u0026quot;,\u0026quot;/var/tmp/*\u0026quot;,\u0026quot;/home/lost+found\u0026quot;,\u0026quot;/boot/lost+found\u0026quot;} /* /dump/\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ersync -cauvP --delete --delete-excluded --exclude={\u0026quot;/dev/*\u0026quot;,\u0026quot;/proc/*\u0026quot;,\u0026quot;/sys/*\u0026quot;,\u0026quot;/tmp/*\u0026quot;,\u0026quot;/run/*\u0026quot;,\u0026quot;/mnt/*\u0026quot;,\u0026quot;/media/*\u0026quot;,\u0026quot;/lost+found\u0026quot;,\u0026quot;/var/lib/pacman/sync/*\u0026quot;,\u0026quot;/var/cache/*\u0026quot;,\u0026quot;/var/tmp/*\u0026quot;,\u0026quot;/boot/lost+found\u0026quot;,\u0026quot;/home/lost+found\u0026quot;,\u0026quot;/home/*/.thumbnails/*\u0026quot;,\u0026quot;/home/*/.cache/*\u0026quot;,\u0026quot;/home/*/.local\u0026quot;,\u0026quot;/home/*/.gvfs/*\u0026quot;,\u0026quot;/home/*/files/*\u0026quot;,\u0026quot;/home/*/.var\u0026quot;,\u0026quot;/home/*/.npm\u0026quot;,\u0026quot;/home/*/.node-gyp\u0026quot;,\u0026quot;/home/*/.electron\u0026quot;} /* /run/media/st/dump/myarch/\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСтоит заметить и исключить из \u003ccode\u003e/home\u003c/code\u003e, как пример ниже.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e--exclude={\u0026quot;/home/lost+found\u0026quot;,\u0026quot;/home/*/.thumbnails/*\u0026quot;,\u0026quot;/home/*/.cache/mozilla/*\u0026quot;,\u0026quot;/home/*/.local/share/Trash/*\u0026quot;,\u0026quot;/home/*/.gvfs/*\u0026quot;}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ersync -cauvP --delete --delete-excluded --exclude={\u0026quot;/dev/*\u0026quot;,\u0026quot;/proc/*\u0026quot;,\u0026quot;/sys/*\u0026quot;,\u0026quot;/tmp/*\u0026quot;,\u0026quot;/run/*\u0026quot;,\u0026quot;/mnt/*\u0026quot;,\u0026quot;/media/*\u0026quot;,\u0026quot;/lost+found\u0026quot;,\u0026quot;/var/lib/pacman/sync/*\u0026quot;,\u0026quot;/var/cache/*\u0026quot;,\u0026quot;/var/tmp/*\u0026quot;,\u0026quot;/boot/lost+found\u0026quot;,\u0026quot;/home/lost+found\u0026quot;,\u0026quot;/home/*/.thumbnails/*\u0026quot;,\u0026quot;/home/*/.cache/mozilla/*\u0026quot;,\u0026quot;/home/*/.local/share/Trash/*\u0026quot;,\u0026quot;/home/*/.gvfs/*\u0026quot;} /* /dump/\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИсключите каталоги в которых смонтированы диски/разделы, если нужно.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e/home/st/files\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДалее создаем архив.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd /dump\ntar -caf \u0026quot;/mnt/myarch.tar.xz\u0026quot; /dump/*\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИли gz он быстрее.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd /dump\ntar -caf \u0026quot;/mnt/myarch.tar\u0026quot; /dump/*\ngzip -9 \u0026quot;/mnt/myarch.tar\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="восстановление"\u003eВосстановление \u003ca href="#%d0%b2%d0%be%d1%81%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%bb%d0%b5%d0%bd%d0%b8%d0%b5" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eФорматируем нужные разделы, с помощью gparted или руками.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkfs.ext4 -L \u0026quot;root\u0026quot; /dev/sda5\nmkfs.ext2 -L \u0026quot;boot\u0026quot; /dev/sda2\nmkfs.ext4 -L \u0026quot;home\u0026quot; /dev/sda7\nmkswap /dev/sda3\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЗагружаемся с live usb(или из этой системы), монтируем раздел root(dev/sda5), boot и др., если нужно.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount /dev/sda5 /mnt\nmount /dev/sda2 /mnt/boot\nmount /dev/sda7 /mnt/home\nswapon /dev/sda3\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздаем каталог и Монтируем раздел с архивом резервной копии.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkdir /mnt/dump\nmount /dev/sdb1 /mnt/dump\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПереходим на смонтированный диск(куда восстанавливаем), распаковываем архив.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd /mnt\ntar xvJf /mnt/dump/myarch.tar.xz -С /mnt\n# или\ntar xvzf /mnt/dump/myarch.tar.gz -С /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДелаем \u003ccode\u003echroot\u003c/code\u003e в новую систему.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003earch-chroot /mnt /bin/zsh\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eРедактируем если нужно \u003ccode\u003e/etc/fstab\u003c/code\u003e, \u003ccode\u003e/etc/mkinitcpio.conf\u003c/code\u003e, создаем initramfs-образы.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emv /mnt/etc/fstab /mnt/etc/fstab.bak\ngenfstab -pU /mnt \u0026gt; /mnt/etc/fstab\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkinitcpio -p linux\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eНастройка ключей pacman.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman-key --init\npacman-key --populate\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОбновляем меню загрузчика груб, os-prober (для поиска других ОС).\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman -S os-prober\ngrub-install /dev/sda\ngrub-mkconfig -o /boot/grub/grub.cfg\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eВыходим из chroot, размонтируем разделы и перезагружаемся уже в восстановленную систему.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eexit\numount /mnt/boot\numount /mnt/home\numount /mnt/dump\nrmdir /mnt/dump\numount /mnt\n\n# Или.\n\nexit\numount -R /mnt\nreboot\n\u003c/code\u003e\u003c/pre\u003e\n'},{id:6,href:"https://ctlos.github.io/wiki/install/install-ctlos/",title:"Установка Ctlos Linux",description:null,content:'\u003cblockquote\u003e\n\u003cp\u003eПеред установкой online обязательно настройте интернет и выполните в терминале команду \u003ccode\u003emirrors\u003c/code\u003e, а затем запустите установщик online. Команда просто перестроит список зеркал и обновит базы pacman, что предоставит наилучшую скорость установки для вас.\u003c/p\u003e\n\u003cp\u003eЕсли установка online вылетает с ошибкой \u003ccode\u003estemd-machine-id-setup error 127\u003c/code\u003e, то закройте установщик, откройте терминал, выполните как писал выше \u003ccode\u003emirrors\u003c/code\u003e и затем обновите пакет \u003ccode\u003eyay -Syy archlinux-keyring\u003c/code\u003e. После этого запускайте установку online.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id="запись-iso"\u003eЗапись ISO \u003ca href="#%d0%b7%d0%b0%d0%bf%d0%b8%d1%81%d1%8c-iso" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eДля записи образа на USB накопитель потребуется установочный ISO образ, который можно скачать по ссылке \u003ca href="/get"\u003eСкачать Ctlos Linux\u003c/a\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eПеред началом записи образа, отформатируйте USB накопитель в FAT32, например, используя gparted. Проверьте контрольные суммы.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id="проверка-iso-образа"\u003eПроверка ISO образа \u003ca href="#%d0%bf%d1%80%d0%be%d0%b2%d0%b5%d1%80%d0%ba%d0%b0-iso-%d0%be%d0%b1%d1%80%d0%b0%d0%b7%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eФайлы с контрольными суммами всегда находятся рядом с iso, в \u003ca href="/get"\u003eзеркалах загрузки\u003c/a\u003e и содержат хеш, который и нужно сравнить.\u003c/p\u003e\n\u003cp\u003eПроверка контрольных сумм в Windows.\u003c/p\u003e\n\u003cp\u003eЧтобы проверить контрольные суммы в Windows используйте следующую утилиту \u003ca href="http://raylin.wordpress.com/downloads/md5-sha-1-checksum-utility/" target="_blank" rel="noopener"\u003eMD5 \u0026amp; SHA Checksum Utility\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eПроверка контрольных сумм в Linux.\u003c/p\u003e\n\u003cp\u003eПроверка SHA256.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esha256sum ctlos_xfce_1.0.0_20181102.iso\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eGPG, если рядом есть \u003ccode\u003e.sig\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S gnupg\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИмпорт ключа и проверка образа.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --keyserver keys.gnupg.net --recv-keys 98F76D97B786E6A3\ngpg --verify ctlos_xfce_1.0.0_20181102.iso.sig ctlos_xfce_1.0.0_20181102.iso\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПодробнее о \u003ca href="/wiki/other/gnupg"\u003eGnuPG\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="программы-для-записи"\u003eПрограммы для записи \u003ca href="#%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d1%8b-%d0%b4%d0%bb%d1%8f-%d0%b7%d0%b0%d0%bf%d0%b8%d1%81%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eДля записи образа в \u003cstrong\u003eLinux\u003c/strong\u003e потребуется для начала отформатировать Ваш USB накопитель. Сделать это можно следующей командой.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo mkfs.fat -F32 /dev/sdX\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДалее записываем скачанный ранее образ используя утилиту \u003cstrong\u003edd\u003c/strong\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo dd bs=4M if=ctlos.iso of=/dev/sdX status=progress \u0026amp;\u0026amp; sync\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eКросплатформенные инструменты для записи образов (Linux, Windows).\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="https://forum.ctlos.ru/t/ventoy-multi-iso-usb/75" target="_blank" rel="noopener"\u003eVentoy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://etcher.io/" target="_blank" rel="noopener"\u003eEtcher\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eДля записи образа в \u003cstrong\u003eWindows\u003c/strong\u003e рекомендуется использовать программу Ventoy или \u003ca href="https://rufus.akeo.ie/" target="_blank" rel="noopener"\u003eRufus\u003c/a\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eПри записи образа в программе Rufus выбирайте режим записи ISO в dd.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id="установка"\u003eУстановка \u003ca href="#%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eПосле успешной записи образа и его загрузки на Вашем устройстве Вы увидите в самом начале раздел выбора языка интерфейса. Выбирайте тот, который Вам удобен. В данном примере будет использоваться русский язык.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eЕсли вы используете образ с xfce, то у вас присутствует выбор метода установки.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003eOnline: открывается раздел выбора других окружений и доп. программ, обязательно требуется включенный интернет.\u003c/li\u003e\n\u003cli\u003eOffline: произойдет установка того, что вы видите в текущий момент, простая распаковка, интернет не нужен.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cspan role="figure" class="figure"\u003e\n      \u003cimg class="figure-img img-fluid lazyload blur-up" data-sizes="auto" src="https://ctlos.github.io/wiki/install/install-ctlos/1_hu8496e38da769cac05a59b5c8b31e1a70_412781_20x0_resize_box_3.png" data-srcset="https://ctlos.github.io/wiki/install/install-ctlos/1_hu8496e38da769cac05a59b5c8b31e1a70_412781_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/1_hu8496e38da769cac05a59b5c8b31e1a70_412781_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/1_hu8496e38da769cac05a59b5c8b31e1a70_412781_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/1_hu8496e38da769cac05a59b5c8b31e1a70_412781_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/1_hu8496e38da769cac05a59b5c8b31e1a70_412781_500x0_resize_box_3.png 500w" width="960" height="540" alt="Ctlos step 1"\u003e\n      \u003cnoscript\u003e\u003cimg class="figure-img img-fluid" sizes="100vw" srcset="https://ctlos.github.io/wiki/install/install-ctlos/1_hu8496e38da769cac05a59b5c8b31e1a70_412781_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/1_hu8496e38da769cac05a59b5c8b31e1a70_412781_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/1_hu8496e38da769cac05a59b5c8b31e1a70_412781_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/1_hu8496e38da769cac05a59b5c8b31e1a70_412781_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/1_hu8496e38da769cac05a59b5c8b31e1a70_412781_500x0_resize_box_3.png 500w" src="https://ctlos.github.io/wiki/install/install-ctlos/1.png" width="960" height="540" alt="Ctlos step 1"\u003e\u003c/noscript\u003e\n      \u003c/span\u003e\n  \u003c/p\u003e\n\u003cp\u003eНа следующем шаге Вам требуется указать Ваше примерное местоположение для установки и выбора временной зоны.\u003c/p\u003e\n\u003cp\u003e\u003cspan role="figure" class="figure"\u003e\n      \u003cimg class="figure-img img-fluid lazyload blur-up" data-sizes="auto" src="https://ctlos.github.io/wiki/install/install-ctlos/2_hud00889577b3657cd504e6e60409a2bac_457972_20x0_resize_box_3.png" data-srcset="https://ctlos.github.io/wiki/install/install-ctlos/2_hud00889577b3657cd504e6e60409a2bac_457972_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/2_hud00889577b3657cd504e6e60409a2bac_457972_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/2_hud00889577b3657cd504e6e60409a2bac_457972_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/2_hud00889577b3657cd504e6e60409a2bac_457972_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/2_hud00889577b3657cd504e6e60409a2bac_457972_500x0_resize_box_3.png 500w" width="960" height="540" alt="Ctlos step 2"\u003e\n      \u003cnoscript\u003e\u003cimg class="figure-img img-fluid" sizes="100vw" srcset="https://ctlos.github.io/wiki/install/install-ctlos/2_hud00889577b3657cd504e6e60409a2bac_457972_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/2_hud00889577b3657cd504e6e60409a2bac_457972_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/2_hud00889577b3657cd504e6e60409a2bac_457972_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/2_hud00889577b3657cd504e6e60409a2bac_457972_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/2_hud00889577b3657cd504e6e60409a2bac_457972_500x0_resize_box_3.png 500w" src="https://ctlos.github.io/wiki/install/install-ctlos/2.png" width="960" height="540" alt="Ctlos step 2"\u003e\u003c/noscript\u003e\n      \u003c/span\u003e\n  \u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eРаскладка \u003cstrong\u003eru,us\u003c/strong\u003e по \u003cstrong\u003ealt+shift\u003c/strong\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cspan role="figure" class="figure"\u003e\n      \u003cimg class="figure-img img-fluid lazyload blur-up" data-sizes="auto" src="https://ctlos.github.io/wiki/install/install-ctlos/3_huf25b95151caa176521f7017920ba5bfe_431853_20x0_resize_box_3.png" data-srcset="https://ctlos.github.io/wiki/install/install-ctlos/3_huf25b95151caa176521f7017920ba5bfe_431853_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/3_huf25b95151caa176521f7017920ba5bfe_431853_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/3_huf25b95151caa176521f7017920ba5bfe_431853_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/3_huf25b95151caa176521f7017920ba5bfe_431853_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/3_huf25b95151caa176521f7017920ba5bfe_431853_500x0_resize_box_3.png 500w" width="960" height="540" alt="Ctlos step 3"\u003e\n      \u003cnoscript\u003e\u003cimg class="figure-img img-fluid" sizes="100vw" srcset="https://ctlos.github.io/wiki/install/install-ctlos/3_huf25b95151caa176521f7017920ba5bfe_431853_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/3_huf25b95151caa176521f7017920ba5bfe_431853_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/3_huf25b95151caa176521f7017920ba5bfe_431853_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/3_huf25b95151caa176521f7017920ba5bfe_431853_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/3_huf25b95151caa176521f7017920ba5bfe_431853_500x0_resize_box_3.png 500w" src="https://ctlos.github.io/wiki/install/install-ctlos/3.png" width="960" height="540" alt="Ctlos step 3"\u003e\u003c/noscript\u003e\n      \u003c/span\u003e\n  \u003c/p\u003e\n\u003cp\u003eПосле выбора раскладки Вам требуется разметить диск вручную либо оставить всё как есть.\u003c/p\u003e\n\u003cp\u003e\u003cspan role="figure" class="figure"\u003e\n      \u003cimg class="figure-img img-fluid lazyload blur-up" data-sizes="auto" src="https://ctlos.github.io/wiki/install/install-ctlos/4_hue4714a95d2f162b96546ce86ae791dbd_419802_20x0_resize_box_3.png" data-srcset="https://ctlos.github.io/wiki/install/install-ctlos/4_hue4714a95d2f162b96546ce86ae791dbd_419802_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/4_hue4714a95d2f162b96546ce86ae791dbd_419802_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/4_hue4714a95d2f162b96546ce86ae791dbd_419802_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/4_hue4714a95d2f162b96546ce86ae791dbd_419802_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/4_hue4714a95d2f162b96546ce86ae791dbd_419802_500x0_resize_box_3.png 500w" width="960" height="540" alt="Ctlos step 4"\u003e\n      \u003cnoscript\u003e\u003cimg class="figure-img img-fluid" sizes="100vw" srcset="https://ctlos.github.io/wiki/install/install-ctlos/4_hue4714a95d2f162b96546ce86ae791dbd_419802_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/4_hue4714a95d2f162b96546ce86ae791dbd_419802_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/4_hue4714a95d2f162b96546ce86ae791dbd_419802_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/4_hue4714a95d2f162b96546ce86ae791dbd_419802_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/4_hue4714a95d2f162b96546ce86ae791dbd_419802_500x0_resize_box_3.png 500w" src="https://ctlos.github.io/wiki/install/install-ctlos/4.png" width="960" height="540" alt="Ctlos step 4"\u003e\u003c/noscript\u003e\n      \u003c/span\u003e\n  \u003c/p\u003e\n\u003cp\u003eПосле завершения переразметки диска Вам нужно создать пользователя, выбрать желаемый пароль.\u003c/p\u003e\n\u003cp\u003e\u003cspan role="figure" class="figure"\u003e\n      \u003cimg class="figure-img img-fluid lazyload blur-up" data-sizes="auto" src="https://ctlos.github.io/wiki/install/install-ctlos/5_hu143f57078b10f7e8180056350cba3eb9_417780_20x0_resize_box_3.png" data-srcset="https://ctlos.github.io/wiki/install/install-ctlos/5_hu143f57078b10f7e8180056350cba3eb9_417780_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/5_hu143f57078b10f7e8180056350cba3eb9_417780_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/5_hu143f57078b10f7e8180056350cba3eb9_417780_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/5_hu143f57078b10f7e8180056350cba3eb9_417780_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/5_hu143f57078b10f7e8180056350cba3eb9_417780_500x0_resize_box_3.png 500w" width="960" height="540" alt="Ctlos step 5"\u003e\n      \u003cnoscript\u003e\u003cimg class="figure-img img-fluid" sizes="100vw" srcset="https://ctlos.github.io/wiki/install/install-ctlos/5_hu143f57078b10f7e8180056350cba3eb9_417780_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/5_hu143f57078b10f7e8180056350cba3eb9_417780_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/5_hu143f57078b10f7e8180056350cba3eb9_417780_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/5_hu143f57078b10f7e8180056350cba3eb9_417780_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/5_hu143f57078b10f7e8180056350cba3eb9_417780_500x0_resize_box_3.png 500w" src="https://ctlos.github.io/wiki/install/install-ctlos/5.png" width="960" height="540" alt="Ctlos step 5"\u003e\u003c/noscript\u003e\n      \u003c/span\u003e\n  \u003c/p\u003e\n\u003cp\u003eПроверяем данные, можно вернуться и исправить, если что-то не так. Если всё верно - нажимайте \u0026ldquo;\u003cstrong\u003eУстановить\u003c/strong\u003e\u0026rdquo;.\u003c/p\u003e\n\u003cp\u003e\u003cspan role="figure" class="figure"\u003e\n      \u003cimg class="figure-img img-fluid lazyload blur-up" data-sizes="auto" src="https://ctlos.github.io/wiki/install/install-ctlos/6_hu6cf5c903e7dd845008efa004013bcf44_429076_20x0_resize_box_3.png" data-srcset="https://ctlos.github.io/wiki/install/install-ctlos/6_hu6cf5c903e7dd845008efa004013bcf44_429076_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/6_hu6cf5c903e7dd845008efa004013bcf44_429076_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/6_hu6cf5c903e7dd845008efa004013bcf44_429076_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/6_hu6cf5c903e7dd845008efa004013bcf44_429076_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/6_hu6cf5c903e7dd845008efa004013bcf44_429076_500x0_resize_box_3.png 500w" width="960" height="540" alt="Ctlos step 6"\u003e\n      \u003cnoscript\u003e\u003cimg class="figure-img img-fluid" sizes="100vw" srcset="https://ctlos.github.io/wiki/install/install-ctlos/6_hu6cf5c903e7dd845008efa004013bcf44_429076_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/6_hu6cf5c903e7dd845008efa004013bcf44_429076_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/6_hu6cf5c903e7dd845008efa004013bcf44_429076_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/6_hu6cf5c903e7dd845008efa004013bcf44_429076_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/6_hu6cf5c903e7dd845008efa004013bcf44_429076_500x0_resize_box_3.png 500w" src="https://ctlos.github.io/wiki/install/install-ctlos/6.png" width="960" height="540" alt="Ctlos step 6"\u003e\u003c/noscript\u003e\n      \u003c/span\u003e\n  \u003c/p\u003e\n\u003cp\u003eДождитесь конца установки.\u003c/p\u003e\n\u003cp\u003e\u003cspan role="figure" class="figure"\u003e\n      \u003cimg class="figure-img img-fluid lazyload blur-up" data-sizes="auto" src="https://ctlos.github.io/wiki/install/install-ctlos/7_hufdf1302329e8b7e5287c48019773bce4_395879_20x0_resize_box_3.png" data-srcset="https://ctlos.github.io/wiki/install/install-ctlos/7_hufdf1302329e8b7e5287c48019773bce4_395879_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/7_hufdf1302329e8b7e5287c48019773bce4_395879_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/7_hufdf1302329e8b7e5287c48019773bce4_395879_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/7_hufdf1302329e8b7e5287c48019773bce4_395879_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/7_hufdf1302329e8b7e5287c48019773bce4_395879_500x0_resize_box_3.png 500w" width="960" height="540" alt="Ctlos step 7"\u003e\n      \u003cnoscript\u003e\u003cimg class="figure-img img-fluid" sizes="100vw" srcset="https://ctlos.github.io/wiki/install/install-ctlos/7_hufdf1302329e8b7e5287c48019773bce4_395879_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/7_hufdf1302329e8b7e5287c48019773bce4_395879_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/7_hufdf1302329e8b7e5287c48019773bce4_395879_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/7_hufdf1302329e8b7e5287c48019773bce4_395879_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/7_hufdf1302329e8b7e5287c48019773bce4_395879_500x0_resize_box_3.png 500w" src="https://ctlos.github.io/wiki/install/install-ctlos/7.png" width="960" height="540" alt="Ctlos step 7"\u003e\u003c/noscript\u003e\n      \u003c/span\u003e\n  \u003c/p\u003e\n\u003cp\u003eГотово! Теперь Вы можете перезагрузить Ваше устройство.\u003c/p\u003e\n\u003cp\u003e\u003cspan role="figure" class="figure"\u003e\n      \u003cimg class="figure-img img-fluid lazyload blur-up" data-sizes="auto" src="https://ctlos.github.io/wiki/install/install-ctlos/8_hudfcaa0a7e26de5756e4129ed610860e7_392954_20x0_resize_box_3.png" data-srcset="https://ctlos.github.io/wiki/install/install-ctlos/8_hudfcaa0a7e26de5756e4129ed610860e7_392954_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/8_hudfcaa0a7e26de5756e4129ed610860e7_392954_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/8_hudfcaa0a7e26de5756e4129ed610860e7_392954_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/8_hudfcaa0a7e26de5756e4129ed610860e7_392954_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/8_hudfcaa0a7e26de5756e4129ed610860e7_392954_500x0_resize_box_3.png 500w" width="960" height="540" alt="Ctlos step 8"\u003e\n      \u003cnoscript\u003e\u003cimg class="figure-img img-fluid" sizes="100vw" srcset="https://ctlos.github.io/wiki/install/install-ctlos/8_hudfcaa0a7e26de5756e4129ed610860e7_392954_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/8_hudfcaa0a7e26de5756e4129ed610860e7_392954_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/8_hudfcaa0a7e26de5756e4129ed610860e7_392954_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/8_hudfcaa0a7e26de5756e4129ed610860e7_392954_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/8_hudfcaa0a7e26de5756e4129ed610860e7_392954_500x0_resize_box_3.png 500w" src="https://ctlos.github.io/wiki/install/install-ctlos/8.png" width="960" height="540" alt="Ctlos step 8"\u003e\u003c/noscript\u003e\n      \u003c/span\u003e\n  \u003c/p\u003e\n\u003cp\u003eВыбор в меню GRUB.\u003c/p\u003e\n\u003cp\u003e\u003cspan role="figure" class="figure"\u003e\n      \u003cimg class="figure-img img-fluid lazyload blur-up" data-sizes="auto" src="https://ctlos.github.io/wiki/install/install-ctlos/9_hub609dbec7f55ea4f5e7e6c1d345027a9_1882_20x0_resize_box_3.png" data-srcset="https://ctlos.github.io/wiki/install/install-ctlos/9_hub609dbec7f55ea4f5e7e6c1d345027a9_1882_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/9_hub609dbec7f55ea4f5e7e6c1d345027a9_1882_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/9_hub609dbec7f55ea4f5e7e6c1d345027a9_1882_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/9_hub609dbec7f55ea4f5e7e6c1d345027a9_1882_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/9_hub609dbec7f55ea4f5e7e6c1d345027a9_1882_500x0_resize_box_3.png 500w" width="640" height="480" alt="Ctlos step 9"\u003e\n      \u003cnoscript\u003e\u003cimg class="figure-img img-fluid" sizes="100vw" srcset="https://ctlos.github.io/wiki/install/install-ctlos/9_hub609dbec7f55ea4f5e7e6c1d345027a9_1882_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/9_hub609dbec7f55ea4f5e7e6c1d345027a9_1882_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/9_hub609dbec7f55ea4f5e7e6c1d345027a9_1882_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/9_hub609dbec7f55ea4f5e7e6c1d345027a9_1882_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/9_hub609dbec7f55ea4f5e7e6c1d345027a9_1882_500x0_resize_box_3.png 500w" src="https://ctlos.github.io/wiki/install/install-ctlos/9.png" width="640" height="480" alt="Ctlos step 9"\u003e\u003c/noscript\u003e\n      \u003c/span\u003e\n  \u003c/p\u003e\n\u003cp\u003eМенеджер входа (используется LightDm), в правом верхнем углу можно выбрать сессию, если присутствуют другие Окружения (DE), или Оконные менеджеры (WM). На данном скриншоте XFCE, она единственная и по умолчанию ничего можно не выбирать.\u003c/p\u003e\n\u003cp\u003e\u003cspan role="figure" class="figure"\u003e\n      \u003cimg class="figure-img img-fluid lazyload blur-up" data-sizes="auto" src="https://ctlos.github.io/wiki/install/install-ctlos/10_hud0b15d4303515550feeba4b806c04a62_682225_20x0_resize_box_3.png" data-srcset="https://ctlos.github.io/wiki/install/install-ctlos/10_hud0b15d4303515550feeba4b806c04a62_682225_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/10_hud0b15d4303515550feeba4b806c04a62_682225_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/10_hud0b15d4303515550feeba4b806c04a62_682225_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/10_hud0b15d4303515550feeba4b806c04a62_682225_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/10_hud0b15d4303515550feeba4b806c04a62_682225_500x0_resize_box_3.png 500w" width="960" height="540" alt="Ctlos step 10"\u003e\n      \u003cnoscript\u003e\u003cimg class="figure-img img-fluid" sizes="100vw" srcset="https://ctlos.github.io/wiki/install/install-ctlos/10_hud0b15d4303515550feeba4b806c04a62_682225_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/10_hud0b15d4303515550feeba4b806c04a62_682225_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/10_hud0b15d4303515550feeba4b806c04a62_682225_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/10_hud0b15d4303515550feeba4b806c04a62_682225_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/10_hud0b15d4303515550feeba4b806c04a62_682225_500x0_resize_box_3.png 500w" src="https://ctlos.github.io/wiki/install/install-ctlos/10.png" width="960" height="540" alt="Ctlos step 10"\u003e\u003c/noscript\u003e\n      \u003c/span\u003e\n  \u003c/p\u003e\n\u003cp\u003eВот и все! Отдельная благодарность за скриншоты пользователю \u003cstrong\u003ebreadandbutter\u003c/strong\u003e с nnm-club.me\u003c/p\u003e\n\u003cp\u003e\u003cspan role="figure" class="figure"\u003e\n      \u003cimg class="figure-img img-fluid lazyload blur-up" data-sizes="auto" src="https://ctlos.github.io/wiki/install/install-ctlos/11_hue336e60faa1d91a425db710aa04acd6d_217510_20x0_resize_box_3.png" data-srcset="https://ctlos.github.io/wiki/install/install-ctlos/11_hue336e60faa1d91a425db710aa04acd6d_217510_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/11_hue336e60faa1d91a425db710aa04acd6d_217510_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/11_hue336e60faa1d91a425db710aa04acd6d_217510_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/11_hue336e60faa1d91a425db710aa04acd6d_217510_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/11_hue336e60faa1d91a425db710aa04acd6d_217510_500x0_resize_box_3.png 500w" width="960" height="540" alt="Ctlos step 11"\u003e\n      \u003cnoscript\u003e\u003cimg class="figure-img img-fluid" sizes="100vw" srcset="https://ctlos.github.io/wiki/install/install-ctlos/11_hue336e60faa1d91a425db710aa04acd6d_217510_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/install/install-ctlos/11_hue336e60faa1d91a425db710aa04acd6d_217510_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/install/install-ctlos/11_hue336e60faa1d91a425db710aa04acd6d_217510_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/install/install-ctlos/11_hue336e60faa1d91a425db710aa04acd6d_217510_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/install/install-ctlos/11_hue336e60faa1d91a425db710aa04acd6d_217510_500x0_resize_box_3.png 500w" src="https://ctlos.github.io/wiki/install/install-ctlos/11.png" width="960" height="540" alt="Ctlos step 11"\u003e\u003c/noscript\u003e\n      \u003c/span\u003e\n  \u003c/p\u003e\n'},{id:7,href:"https://ctlos.github.io/wiki/packages/other-pkg/",title:"Установка дополнительных программ",description:null,content:'\u003cblockquote\u003e\n\u003cp\u003eНекоторые пояснения и рекомендации по использованию.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id="сборка-пакетов"\u003eСборка пакетов \u003ca href="#%d1%81%d0%b1%d0%be%d1%80%d0%ba%d0%b0-%d0%bf%d0%b0%d0%ba%d0%b5%d1%82%d0%be%d0%b2" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eУстановка пакетов из архивов aur \u003ccode\u003etar.gz\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eСоздать каталог \u003ccode\u003e~/.build\u003c/code\u003e и перейти в него.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkdir ~/.build \u0026amp;\u0026amp; cd ~/.build\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eНайти нужный пакет на сайте \u003ca href="https://aur.archlinux.org" target="_blank" rel="noopener"\u003eaur.archlinux.org\u003c/a\u003e и загрузить snapshot.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ewget https://aur.archlinux.org/cgit/aur.git/snapshot/gtk3-mushrooms.tar.gz\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eРаспаковываем, переходим в каталог, собираем пакет и устанавливаем.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003etar -xvzf gtk3-mushrooms.tar.gz\ncd gtk3-mushrooms\nmakepkg -sri\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЕсли ошибки целостности, можно проигнорировать.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emakepkg -s --skipinteg\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПроблема с импортом \u003ccode\u003epgp\u003c/code\u003e ключей. Можно опустить проверку ключом \u003ccode\u003e--skippgpcheck\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emakepkg -s --skippgpcheck\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПосле сборки будет пакет с расширением \u003ccode\u003eимя.pkg.tar.zst\u003c/code\u003e Установить командой.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -U имя.pkg.tar.zst\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="virtualbox"\u003eVirtualbox \u003ca href="#virtualbox" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href="https://wiki.archlinux.org/index.php/VirtualBox_%28%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9%29" target="_blank" rel="noopener"\u003eArch Wiki Virtualbox\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S virtualbox\nsudo pacman -S virtualbox-host-modules-arch\nsudo pacman -S virtualbox-guest-iso\n\nsudo modprobe vboxdrv\nsudo gpasswd -a имя_пользователя vboxusers\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="virtualbox-guest"\u003eVirtualBox guest \u003ca href="#virtualbox-guest" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e\u003ca href="https://wiki.archlinux.org/index.php/VirtualBox/Install_Arch_Linux_as_a_guest" target="_blank" rel="noopener"\u003eArch Wiki\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eОбщая директория, на машине.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkdir ~/vboxshare\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОбщая директория, на виртуалке. uid и gid пользователя можно узнать командой \u003ccode\u003eid\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eВ настройках виртуальной машины добавьте общую директорию, выберите ту что создали ранее \u003ccode\u003e~/vboxshare\u003c/code\u003e. Имя которое будет доступно в виртуалке укажите \u003ccode\u003evboxshare\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eНастройка гостевых дополнений на виртуалке.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S virtualbox-guest-utils\nsudo pacman -S virtualbox-guest-iso\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSystemd сервис в поставке загрузит нужные модули ядра.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl enable --now vboxservice\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДобавьте пользователя в группу vboxsf, где \u003ccode\u003euser_name\u003c/code\u003e имя вашего пользователя в виртуальной машине.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo usermod -aG vboxsf user_name\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПерезапустите виртуальную машину. Командами ниже создайте директорию и смонтируйте в нее.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkdir ~/vboxshare\nsudo mount -t vboxsf -o uid=1000,gid=1000 vboxshare vboxshare\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЕсли вы при создании общей директории выбрали авто подключение, то она уже доступна в \u003ccode\u003e/media/sf_vboxshare\u003c/code\u003e или в \u003ccode\u003e/mnt\u003c/code\u003e. Командой ниже можно перемонтировать в \u003ccode\u003e~/vboxshare\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo mount -t vboxsf -o uid=1000,gid=1000 vboxshare vboxshare\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЕще можете попробовать виртуалку от GNOME.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S gnome-boxes\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="steam"\u003eSteam \u003ca href="#steam" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eНеобходимо раскомментировать репозиторий \u003cstrong\u003emultilib\u003c/strong\u003e в \u003ccode\u003e/etc/pacman.conf\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S steam ttf-liberation lib32-alsa-plugins lib32-curl\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ca href="https://wiki.archlinux.org/index.php/Steam_%28%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9%29" target="_blank" rel="noopener"\u003ewiki.archlinux.org\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eИли установите Steam через \u003ca href="/wiki/install/pkg-manager/#flatpak"\u003eFlatpak\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="tor"\u003eTor \u003ca href="#tor" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S tor torsocks\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЗапуск, остановка, статус, лог сервиса tor.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl start tor\nsudo systemctl stop tor\nsudo systemctl status tor\nsudo journalctl -xeu tor\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЗапуск через tor.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003etorify zsh\ntorify ssh user@blabla -p 22\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПроверка ip.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecurl ident.me\n# через tor\ntorify curl ident.me\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# check tor\ncurl --socks5 localhost:9050 --socks5-hostname localhost:9050 -s https://check.torproject.org/ | cat | grep -m 1 Congratulations | xargs\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eВ firefox используйте расширение FoxyProxy, или в параметрах сети укажите только SOCKS5.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eВ настройках расширения, Добавить новый SOCKS5, ip: 127.0.0.1, port: 9050\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eChromium запустите с флагом.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003echromium --proxy-server=\'socks://127.0.0.1:9050\' \u0026amp;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="мосты-tor"\u003eМосты tor \u003ca href="#%d0%bc%d0%be%d1%81%d1%82%d1%8b-tor" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eНекоторые провайдеры могут блокировать выход в tor, можно попробовать указать мост \u003ca href="https://bridges.torproject.org/" target="_blank" rel="noopener"\u003ebridges.torproject.org\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# директория с доп конфигами\nsudo mkdir -p /etc/torrc.d/\n# раскоментить include в основном конфиге\nsudo nano /etc/tor/torrc\n# в конце файла строка\n%include /etc/torrc.d/*.conf\n# кастомный конфиг\nsudo nano /etc/torrc.d/custom.conf\n# указать строки\nUseBridges 1\nClientTransportPlugin obfs4 exec /usr/bin/obfs4proxy\nBridge obfs4 15.235.40.232:4276 9A1B05F0C622A0EC13902876302FA2E1B2EA4B5F cert=RWCkXxF0kknQs2T7yIUBPGJUTlUpKXdzVlc9uKdZtbzvcqNvjQHZYGG0kWzlJxbcLaqaQg iat-mode=0\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eУстановить obfs4proxy.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eyay obfs4proxy\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДанные obfs4 можно получить у telegram бота: \u003ca href="https://t.me/GetBridgesBot" target="_blank" rel="noopener"\u003e@GetBridgesBot\u003c/a\u003e, отправив ему \u003ccode\u003e/bridges\u003c/code\u003e. Когда я это тестировал, бот выдал не рабочие данные для меня.\u003c/p\u003e\n\u003cp\u003eДругой способ получить список мостов. Отправьте email на адрес \u003ccode\u003ebridges@torproject.org\u003c/code\u003e. Оставьте тему письма пустой, а в теле cообщения напишите \u0026ldquo;get transport obfs4\u0026rdquo;. Пожалуйста, обратите внимание: вы должны отправить письмо с Riseup или Gmail.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eЕсли tor отказывается работать должным образом попробуйте отредактировать сервис.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo nano /usr/lib/systemd/system/tor.service\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e[Service]\nUser=root\nGroup=root\nType=simple\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo chown -R root:root /var/lib/tor/\nsudo systemctl daemon-reload\nsudo systemctl restart tor\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="bluetooth"\u003eBluetooth \u003ca href="#bluetooth" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S blueman bluez-utils pulseaudio-bluetooth\nsudo systemctl enable bluetooth.service\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="офисные-пакеты"\u003eОфисные пакеты \u003ca href="#%d0%be%d1%84%d0%b8%d1%81%d0%bd%d1%8b%d0%b5-%d0%bf%d0%b0%d0%ba%d0%b5%d1%82%d1%8b" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eWps office.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eyay -S wps-office ttf-wps-fonts wps-office-mui-ru-ru wps-office-extension-russian-dictionary --noconfirm\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eLibre office.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eyay -S libreoffice-fresh libreoffice-fresh-ru papirus-libreoffice-theme --noconfirm\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eOpenoffice.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eyay -S openoffice openoffice-ru-bin --noconfirm\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eOnlyoffice.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eyay -S onlyoffice-bin --noconfirm\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="принтеры"\u003eПринтеры \u003ca href="#%d0%bf%d1%80%d0%b8%d0%bd%d1%82%d0%b5%d1%80%d1%8b" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S cups cups-filters cups-pdf cups-pk-helper ghostscript gsfonts foomatic-db foomatic-db-engine foomatic-db-ppds foomatic-db-nonfree foomatic-db-nonfree-ppds gutenprint foomatic-db-gutenprint-ppds system-config-printer hplip splix\nsudo systemctl enable --now cups.service\n\u003c/code\u003e\u003c/pre\u003e\n'},{id:8,href:"https://ctlos.github.io/wiki/wm/",title:"Оконные менеджеры",description:"Prologue Doks.",content:""},{id:9,href:"https://ctlos.github.io/wiki/wm/frankenwm/",title:"Ctlos Linux FrankenWm",description:"Описание конфигурации Ctlos Linux FrankenWm, горячие клавиши, утилиты.",content:'\u003cp\u003e\u003cspan role="figure" class="figure"\u003e\n      \u003cimg class="figure-img img-fluid lazyload blur-up" data-sizes="auto" src="https://ctlos.github.io/wiki/wm/frankenwm/frankenwm010_hu15aacaabaa3f53c3c6269bbb262ba5bc_86316_20x0_resize_box_3.png" data-srcset="https://ctlos.github.io/wiki/wm/frankenwm/frankenwm010_hu15aacaabaa3f53c3c6269bbb262ba5bc_86316_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/wm/frankenwm/frankenwm010_hu15aacaabaa3f53c3c6269bbb262ba5bc_86316_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/wm/frankenwm/frankenwm010_hu15aacaabaa3f53c3c6269bbb262ba5bc_86316_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/wm/frankenwm/frankenwm010_hu15aacaabaa3f53c3c6269bbb262ba5bc_86316_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/wm/frankenwm/frankenwm010_hu15aacaabaa3f53c3c6269bbb262ba5bc_86316_500x0_resize_box_3.png 500w" width="1366" height="768" alt="FrankenWm"\u003e\n      \u003cnoscript\u003e\u003cimg class="figure-img img-fluid" sizes="100vw" srcset="https://ctlos.github.io/wiki/wm/frankenwm/frankenwm010_hu15aacaabaa3f53c3c6269bbb262ba5bc_86316_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/wm/frankenwm/frankenwm010_hu15aacaabaa3f53c3c6269bbb262ba5bc_86316_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/wm/frankenwm/frankenwm010_hu15aacaabaa3f53c3c6269bbb262ba5bc_86316_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/wm/frankenwm/frankenwm010_hu15aacaabaa3f53c3c6269bbb262ba5bc_86316_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/wm/frankenwm/frankenwm010_hu15aacaabaa3f53c3c6269bbb262ba5bc_86316_500x0_resize_box_3.png 500w" src="https://ctlos.github.io/wiki/wm/frankenwm/frankenwm010.png" width="1366" height="768" alt="FrankenWm"\u003e\u003c/noscript\u003e\n      \u003c/span\u003e\n  \u003c/p\u003e\n\u003ch2 id="скачать-iso-образ"\u003eСкачать iso образ \u003ca href="#%d1%81%d0%ba%d0%b0%d1%87%d0%b0%d1%82%d1%8c-iso-%d0%be%d0%b1%d1%80%d0%b0%d0%b7" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eДанный оконный менеджер доступен в \u003ccode\u003exfce iso\u003c/code\u003e, метод online установки.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="/get"\u003eСкачать\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eРекомендации после установки \u003ca href="/wiki/install/next-install"\u003enext-install\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id="конфигурационные-файлы"\u003eКонфигурационные файлы \u003ca href="#%d0%ba%d0%be%d0%bd%d1%84%d0%b8%d0%b3%d1%83%d1%80%d0%b0%d1%86%d0%b8%d0%be%d0%bd%d0%bd%d1%8b%d0%b5-%d1%84%d0%b0%d0%b9%d0%bb%d1%8b" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eПуть\u003c/th\u003e\n\u003cth\u003eОписание\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/frankenwm/src/config.h\u003c/td\u003e\n\u003ctd\u003eОсновной конфиг.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/frankenwm/autostart\u003c/td\u003e\n\u003ctd\u003eСкрипт автостарта.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/frankenwm/polybar/\u003c/td\u003e\n\u003ctd\u003eКонфиг и скрипты polybar.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cblockquote\u003e\n\u003cp\u003eДанный \u003ccode\u003ewm\u003c/code\u003e необходимо перекомпилировать после изменения \u003ccode\u003econfig.h\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd ~/.config/frankenwm/src\nsudo make clean install\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eНеобходим restart(выйти и зайти) \u003ccode\u003ekillall frankenwm\u003c/code\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eИзучите \u003ca href="https://github.com/sulami/frankenwm/blob/master/frankenwm.1" target="_blank" rel="noopener"\u003eоффициальный man\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id="панели"\u003eПанели \u003ca href="#%d0%bf%d0%b0%d0%bd%d0%b5%d0%bb%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eВерхний бар, polybar\u003c/li\u003e\n\u003cli\u003eНижний бар - трей, tint2\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="горячие-клавиши"\u003eГорячие клавиши \u003ca href="#%d0%b3%d0%be%d1%80%d1%8f%d1%87%d0%b8%d0%b5-%d0%ba%d0%bb%d0%b0%d0%b2%d0%b8%d1%88%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eКонфиг \u003ccode\u003e~/.config/frankenwm/src/config.h\u003c/code\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMOD4: Super/Windows\u003c/li\u003e\n\u003cli\u003eMOD1: Alt\u003c/li\u003e\n\u003cli\u003eXK_: воспринимайте как префикс, а дальше уже кнопка\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eПрисутствует утилита \u003ccode\u003esxhkd\u003c/code\u003e для привязок клавиш без компиляции, конфиг ниже. По \u003ccode\u003esuper + F1\u003c/code\u003e можно увидеть данные привязки.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e~/.config/frankenwm/sxhkdrc\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="режимы-и-управление-окнами"\u003eРежимы и управление окнами \u003ca href="#%d1%80%d0%b5%d0%b6%d0%b8%d0%bc%d1%8b-%d0%b8-%d1%83%d0%bf%d1%80%d0%b0%d0%b2%d0%bb%d0%b5%d0%bd%d0%b8%d0%b5-%d0%be%d0%ba%d0%bd%d0%b0%d0%bc%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eСекция переключения режимов.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-c"\u003e/* mode selection */\n{  MOD4|SHIFT,       XK_t,          switch_mode,       {.i = TILE}},\n{  MOD4|SHIFT,       XK_m,          switch_mode,       {.i = MONOCLE}},\n{  MOD4|SHIFT,       XK_b,          switch_mode,       {.i = BSTACK}},\n{  MOD4|SHIFT,       XK_g,          switch_mode,       {.i = GRID}},\n{  MOD4|SHIFT,       XK_f,          switch_mode,       {.i = FIBONACCI}},\n{  MOD4|SHIFT,       XK_d,          switch_mode,       {.i = DUALSTACK}},\n{  MOD4|SHIFT,       XK_e,          switch_mode,       {.i = EQUAL}},\n\u003c/code\u003e\u003c/pre\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eКлюч\u003c/th\u003e\n\u003cth\u003eОписание\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+shift+t\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eTILE: тайлинг режим.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+shift+m\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eMONOCLE: окно развернуто.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+shift+b\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eBSTACK: нижний стек.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+shift+g\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eGRID: режим сетки.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+shift+f\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eFIBONACCI: режим фибоначи(золотое сечение), как в Bspwm.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+shift+d\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eDUALSTACK: двойной стек.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+shift+e\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eEQUAL: ровное деление.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eЗажатая \u003ccode\u003eSuper(win)\u003c/code\u003e и клавиши мыши манипулируют окнами: резмер, положение. В плавающем режиме.\u003c/p\u003e\n\u003ch3 id="запуск-утилит"\u003eЗапуск утилит \u003ca href="#%d0%b7%d0%b0%d0%bf%d1%83%d1%81%d0%ba-%d1%83%d1%82%d0%b8%d0%bb%d0%b8%d1%82" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eКлюч\u003c/th\u003e\n\u003cth\u003eОписание\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ealt + shift\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПереключение раскладки(us,ru).\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+shift+Enter\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eTerminal urxvt.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+r\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eRofi - меню(лаунчер).\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+q\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eЗакрыть окно.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+ctrl+q\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eЗакрыть frankenwm.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eКомментарии приветствуются. Вступай в telegram чат: \u003ca href="https://telegram.me/ctlos" target="_blank" rel="noopener"\u003et.me/ctlos\u003c/a\u003e.\u003c/p\u003e\n'},{id:10,href:"https://ctlos.github.io/wiki/packages/iwd/",title:"Iwd настройка wifi",description:null,content:'\u003cp\u003e\u003ca href="https://wiki.archlinux.org/index.php/Iwd" target="_blank" rel="noopener"\u003eArchWiki iwd\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="установка-и-использование"\u003eУстановка и использование \u003ca href="#%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0-%d0%b8-%d0%b8%d1%81%d0%bf%d0%be%d0%bb%d1%8c%d0%b7%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S iwd wpa_supplicant dhclient\n\n# Смотрим список интерфейсов\niwctl device list\n\n#Сканируем интерфейс\niwctl station wlp5s0 scan\n\n# Список доступных сетей\niwctl station wlp5s0 get-networks\n\n# Подключение с указанием пароля, SSID имя сети\niwctl --passphrase passphrase station device connect \u0026quot;SSID\u0026quot;\n\ndhclient\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003eДальнейшее подключение происходит автоматически.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id="ручная-настройка"\u003eРучная настройка \u003ca href="#%d1%80%d1%83%d1%87%d0%bd%d0%b0%d1%8f-%d0%bd%d0%b0%d1%81%d1%82%d1%80%d0%be%d0%b9%d0%ba%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eНе обязательно.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eУчетные данные Wi-Fi хранятся в \u003ccode\u003e/var/lib/iwd\u003c/code\u003e, точное имя SSID следует использовать, формат: \u003ccode\u003eSSID.psk\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e[Security]\nPreSharedKey=a2a0bf020727b1ea1c0542d16e1ccbbbab791d933e9b92783540257910a15817\nPassphrase=password\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДля создания зашифрованного \u003cstrong\u003epsk\u003c/strong\u003e используйте \u003ccode\u003ewpa_passhrase\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ewpa_passphrase my_ssid password\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДля подключения к сети.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eiwctl station wlp5s0 connect \u0026quot;SSID\u0026quot;\n\ndhclient\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="автоматическое-включение-wifi"\u003eАвтоматическое включение wifi \u003ca href="#%d0%b0%d0%b2%d1%82%d0%be%d0%bc%d0%b0%d1%82%d0%b8%d1%87%d0%b5%d1%81%d0%ba%d0%be%d0%b5-%d0%b2%d0%ba%d0%bb%d1%8e%d1%87%d0%b5%d0%bd%d0%b8%d0%b5-wifi" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eЧерез сервис \u003cstrong\u003esystemd\u003c/strong\u003e, создайте скрипт для подключенияю\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo nano /usr/local/wifi.sh\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e#!/bin/bash\niwctl station wlan0 connect \u0026quot;SSID\u0026quot;\ndhclient\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздайте сервис systemd.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo nano /etc/systemd/system/wifi.service\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e[Unit]\nBefore=network.target\nWants=network.target\n\n[Service]\nExecStart=/usr/local/wifi.sh\n\n[Install]\nWantedBy=default.target\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="назначение-прав-и-включение-сервиса"\u003eНазначение прав и включение сервиса \u003ca href="#%d0%bd%d0%b0%d0%b7%d0%bd%d0%b0%d1%87%d0%b5%d0%bd%d0%b8%d0%b5-%d0%bf%d1%80%d0%b0%d0%b2-%d0%b8-%d0%b2%d0%ba%d0%bb%d1%8e%d1%87%d0%b5%d0%bd%d0%b8%d0%b5-%d1%81%d0%b5%d1%80%d0%b2%d0%b8%d1%81%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003echmod 744 /usr/local/wifi.sh\nchmod 664 /etc/systemd/system/wifi.service\nsystemctl daemon-reload\nsystemctl enable wifi.service\n\u003c/code\u003e\u003c/pre\u003e\n'},{id:11,href:"https://ctlos.github.io/wiki/config/autologin/",title:"Автологин",description:null,content:'\u003ch2 id="автологин-xinitrc"\u003eАвтологин xinitrc \u003ca href="#%d0%b0%d0%b2%d1%82%d0%be%d0%bb%d0%be%d0%b3%d0%b8%d0%bd-xinitrc" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eАвтологин с помощью \u003ccode\u003e~/.xinitrc\u003c/code\u003e и автозапуск Х после логина.\u003c/p\u003e\n\u003cp\u003eВ \u003ccode\u003e~/.xinitrc\u003c/code\u003e необходимо прописать запуск DE, WM. В самом конце файла.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eexec openbox-session\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДобавить в \u003ccode\u003e~/.bashrc\u003c/code\u003e, если используем Zsh, то \u003ccode\u003e~/.zshrc\u003c/code\u003e. Узнать какой у вас шелл, команда: \u003ccode\u003eecho $SHELL\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enano ~/.zshrc\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДобавить наверх, после первой строки \u003ccode\u003e#!/usr/bin/env zsh\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e[[ -z $DISPLAY \u0026amp;\u0026amp; $XDG_VTNR -eq 1 ]] \u0026amp;\u0026amp; exec startx \u0026amp;\u0026gt; /dev/null\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="настройка-сервиса"\u003eНастройка сервиса \u003ca href="#%d0%bd%d0%b0%d1%81%d1%82%d1%80%d0%be%d0%b9%d0%ba%d0%b0-%d1%81%d0%b5%d1%80%d0%b2%d0%b8%d1%81%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eВыполнить.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl enable getty@.service\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДанная команда создаст файл и запустит systemd сервис, просмотреть.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecat /etc/systemd/system/getty@tty1.service.d/override.conf\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЕсли нет, то создайте вручную.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo mkdir /etc/systemd/system/getty@tty1.service.d\nsudo nano /etc/systemd/system/getty@tty1.service.d/override.conf\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДолжно быть так, где \u003ccode\u003euser\u003c/code\u003e - имя вашего пользователя.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e[Service]\nExecStart=\nExecStart=-/usr/bin/agetty --autologin user --noclear %I $TERM\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОтключите login менеджер (lightdm, gdm, lxdm).\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esystemctl disable gdm\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИ удалите, если нужно.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -R gdm\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="автологин-sddm"\u003eАвтологин sddm \u003ca href="#%d0%b0%d0%b2%d1%82%d0%be%d0%bb%d0%be%d0%b3%d0%b8%d0%bd-sddm" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eОтредактируйте конфиг.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo nano /etc/sddm.conf\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИ преведите к такому виду. Замените \u003ccode\u003ecreio\u003c/code\u003e на имя вашего пользователя.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e[Autologin]\nRelogin=false\nUser=creio\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="автологин-lightdm"\u003eАвтологин Lightdm \u003ca href="#%d0%b0%d0%b2%d1%82%d0%be%d0%bb%d0%be%d0%b3%d0%b8%d0%bd-lightdm" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eЗамените \u003ccode\u003ecreio\u003c/code\u003e на имя вашего пользователя.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egroupadd -r autologin\ngpasswd -a creio autologin\n\ngroupadd -r nopasswdlogin\ngpasswd -a creio nopasswdlogin\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОтредактируйте конфиг.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enano /etc/lightdm/lightdm.conf\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИ приведите к такому виду. Замените creio на имя вашего пользователя.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epam-service=lightdm\npam-autologin-service=lightdm-autologin\nautologin-user=creio\nautologin-user-timeout=0\nsession-wrapper=/etc/lightdm/Xsession\n\u003c/code\u003e\u003c/pre\u003e\n'},{id:12,href:"https://ctlos.github.io/wiki/backup/squashfs/",title:"Резервное копирование Squashfs",description:null,content:'\u003ch2 id="mksquashfs"\u003eMksquashfs \u003ca href="#mksquashfs" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eУтилита сжатия.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman -S squashfs-tools arch-install-scripts\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСмотрим разделы диска.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003elsblk\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eМонтируем для чтения root,boot(home) и создаем образ, сжатие xz.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount /dev/sda5 -o ro /mnt\nmount /dev/sda2 -o ro /mnt/boot\nmount /dev/sda7 -o ro /mnt/home\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eАрхивируем.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emksquashfs /mnt ~/backup/myarch.sfs -comp xz\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИсключение: \u003ccode\u003e-e /dir/file\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eОтмонтируем по завершению.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eumount -R /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="восстановление"\u003eВосстановление \u003ca href="#%d0%b2%d0%be%d1%81%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%bb%d0%b5%d0%bd%d0%b8%d0%b5" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eИз рабочей системы, или Live-usb. Форматируем и монтируем поврежденный или новый раздел, boot по необходимости и др.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkfs.ext4 -L \u0026quot;root\u0026quot; -U \u0026quot;$(blkid -o value -s UUID /dev/sda5)\u0026quot; /dev/sda5\nmkfs.ext2 -L \u0026quot;boot\u0026quot; -U \u0026quot;$(blkid -o value -s UUID /dev/sda2)\u0026quot; /dev/sda2\nmkfs.ext4 -L \u0026quot;home\u0026quot; -U \u0026quot;$(blkid -o value -s UUID /dev/sda7)\u0026quot; /dev/sda7\nmkswap /dev/sda3\n\nmount /dev/sda5 /mnt\nmount /dev/sda2 /mnt/boot\nmount /dev/sda7 /mnt/home\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eРаспаковываем сжатый образ.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eunsquashfs -d /mnt -f ~/backup/myarch.sfs\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПроверим и отмонтируем раздел.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003els /mnt\numount /dev/sda2\numount /dev/sda7\numount /dev/sda5\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eМонтируем раздел root(dev/sda5), boot и др., если нужно.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount /dev/sda5 /mnt\nmount /dev/sda2 /mnt/boot\nmount /dev/sda7 /mnt/home\nswapon /dev/sda3\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eРедактируем/Генерируем если нужно \u003ccode\u003e/etc/fstab\u003c/code\u003e, \u003ccode\u003e/etc/mkinitcpio.conf\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003erm /mnt/etc/fstab\ngenfstab -pU /mnt \u0026gt; /mnt/etc/fstab\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДелаем chroot в новую систему.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003earch-chroot /mnt /bin/zsh\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИли \u003ccode\u003echroot /mnt /bin/bash\u003c/code\u003e Debian подобных.\u003c/p\u003e\n\u003cp\u003eСоздаем initramfs-образы.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkinitcpio -p linux\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eНастройка ключей pacman.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman-key --init\npacman-key --populate\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОбновляем меню загрузчика груб, os-prober (для поиска других ОС).\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman -S os-prober\ngrub-install /dev/sda\ngrub-mkconfig -o /boot/grub/grub.cfg\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eВыходим из \u003cstrong\u003echroot\u003c/strong\u003e, размонтируем разделы и перезагружаемся уже в восстановленную систему!\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eexit\numount /mnt/boot\numount /mnt/home\numount /mnt\nreboot\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="монтирование-образа"\u003eМонтирование образа \u003ca href="#%d0%bc%d0%be%d0%bd%d1%82%d0%b8%d1%80%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5-%d0%be%d0%b1%d1%80%d0%b0%d0%b7%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount ~/backup/myarch.sfs -t squashfs -o loop /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eТеперь вы можете скопировать из образа любые нужные файлы \u003ccode\u003ecp -p\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eДобавить что-либо таким способом не получится, для этого нужно будет опять воспользоваться \u003ccode\u003emksquashfs\u003c/code\u003e.\u003c/p\u003e\n'},{id:13,href:"https://ctlos.github.io/wiki/install/next-install/",title:"Рекомендации после установки",description:null,content:'\u003cblockquote\u003e\n\u003cp\u003eВсегда помните о существовании \u003ca href="https://wiki.archlinux.org/index.php/Main_page_%28%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9%29" title="Arch Wiki" target="_blank" rel="noopener"\u003eArch Wiki\u003c/a\u003e, большинство ответов уже существует, не ленитесь читать. Более актуальная информация на англ. языке.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id="обновление-ключей"\u003eОбновление ключей \u003ca href="#%d0%be%d0%b1%d0%bd%d0%be%d0%b2%d0%bb%d0%b5%d0%bd%d0%b8%d0%b5-%d0%ba%d0%bb%d1%8e%d1%87%d0%b5%d0%b9" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eЕсли возникли проблемы с обновлением, или установкой пакетов выполните данные рекомендации.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman-key --init \u0026amp;\u0026amp; sudo pacman-key --populate \u0026amp;\u0026amp; sudo pacman-key --refresh-keys \u0026amp;\u0026amp; sudo pacman -Syy\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003eЕсли ошибка с содержанием \u003ccode\u003ehkps.pool.sks-keyservers.net\u003c/code\u003e, не может достучаться до сервера ключей выполните команды ниже. Указываем другой сервер ключей.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e--keyserver hkp://pool.sks-keyservers.net\n--keyserver hkp://keyserver.ubuntu.com\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman-key --init \u0026amp;\u0026amp; sudo pacman-key --populate\n\nsudo pacman-key --refresh-keys --keyserver keys.gnupg.net\n\nsudo pacman -Syy\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003eЕсли ошибка с содержанием \u003ccode\u003e/var/lib/pacman/sync\u003c/code\u003e, выполните команду ниже и повторите пункт с обновлением ключей.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo rm -rf /var/lib/pacman/sync/*\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003eЕсли ошибка с содержанием \u003ccode\u003e/var/lib/pacman/db.lck\u003c/code\u003e, выполните команду.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo rm /var/lib/pacman/db.lck\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ca href="https://wiki.archlinux.org/index.php/Pacman_%28%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9%29/Package_signing_%28%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9%29#%D0%A0%D0%B5%D1%88%D0%B5%D0%BD%D0%B8%D0%B5_%D0%BF%D1%80%D0%BE%D0%B1%D0%BB%D0%B5%D0%BC" target="_blank" rel="noopener"\u003ePackage signing\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id="используйте-алиасы"\u003eИспользуйте алиасы \u003ca href="#%d0%b8%d1%81%d0%bf%d0%be%d0%bb%d1%8c%d0%b7%d1%83%d0%b9%d1%82%d0%b5-%d0%b0%d0%bb%d0%b8%d0%b0%d1%81%d1%8b" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eАлиасы — сокращение команд, находятся в файле \u003ccode\u003e~/.alias_zsh\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eYay\u003c/strong\u003e работает, как \u003cstrong\u003epacman\u003c/strong\u003e, т.е. выполняет теже функции, поэтому я в основном использую команды \u003ccode\u003eyay\u003c/code\u003e для манипуляции с пакетами. Вот данный набор из файла.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ealias y=\u0026quot;yay -S\u0026quot;\u003c/code\u003e установка.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ealias yn=\u0026quot;yay -S --noconfirm\u0026quot;\u003c/code\u003e установка без подтверждения.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ealias ys=\u0026quot;yay\u0026quot;\u003c/code\u003e поиск с дальнейшим выбором по цифре.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ealias ysn=\u0026quot;yay --noconfirm\u0026quot;\u003c/code\u003e поиск с дальнейшим выбором по цифре, без подтверждения.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ealias yc=\u0026quot;yay -Sc\u0026quot;\u003c/code\u003e очистка кэша.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ealias yy=\u0026quot;yay -Syy\u0026quot;\u003c/code\u003e синхронизация баз зеркал.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ealias yu=\u0026quot;yay -Syyu\u0026quot;\u003c/code\u003e обновление.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ealias yun=\u0026quot;yay -Syyu --noconfirm\u0026quot;\u003c/code\u003e обновление без подтверждения.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ealias yr=\u0026quot;yay -R\u0026quot;\u003c/code\u003e удаление пакет(а,ов).\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ealias yrn=\u0026quot;yay -R --noconfirm\u0026quot;\u003c/code\u003e удаление пакет(а,ов) без подтверждения.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eПример удаления: \u003ccode\u003eyrn htop\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eКоманда \u003ccode\u003ecache\u003c/code\u003e, для очистки кэша пакетов и оптимизация базы pacman.\nВсе исполняемые скрипты лежат в \u003ccode\u003e~/.bin\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id="информация-о-системе"\u003eИнформация о системе \u003ca href="#%d0%b8%d0%bd%d1%84%d0%be%d1%80%d0%bc%d0%b0%d1%86%d0%b8%d1%8f-%d0%be-%d1%81%d0%b8%d1%81%d1%82%d0%b5%d0%bc%d0%b5" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eКраткая информация о Вашей системе.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eneofetch\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПодробней о железе.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eyay -S inxi\n#\ninxi -F\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="скорость-интернета"\u003eСкорость интернета \u003ca href="#%d1%81%d0%ba%d0%be%d1%80%d0%be%d1%81%d1%82%d1%8c-%d0%b8%d0%bd%d1%82%d0%b5%d1%80%d0%bd%d0%b5%d1%82%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003espeed\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПосле перезагрузки в grub должны быть доступны другие дистрибутивы и ос.\u003c/p\u003e\n\u003ch2 id="смена-оболочки"\u003eСмена оболочки \u003ca href="#%d1%81%d0%bc%d0%b5%d0%bd%d0%b0-%d0%be%d0%b1%d0%be%d0%bb%d0%be%d1%87%d0%ba%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eЕсли вас не устраивает \u003ccode\u003ezsh\u003c/code\u003e, всегда можно переключить.\u003c/p\u003e\n\u003cp\u003eДля смены оболочки на \u003cstrong\u003eBASH\u003c/strong\u003e введите в терминале следующее: \u003ccode\u003echsh -s /bin/bash\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eДля смены оболочки на \u003cstrong\u003eZSH\u003c/strong\u003e введите в терминале следующее: \u003ccode\u003echsh -s /bin/zsh\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id="зеркала--reflector"\u003eЗеркала — Reflector \u003ca href="#%d0%b7%d0%b5%d1%80%d0%ba%d0%b0%d0%bb%d0%b0--reflector" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eЭто ускорит загрузку пакетов. \u003ca href="https://wiki.archlinux.org/index.php/reflector" target="_blank" rel="noopener"\u003eArch Wiki\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eВ Ctlos установлен скрипт \u003ccode\u003e~/.bin/mirrors\u003c/code\u003e, отредактируйте его под ближайшие к Вам страны, а затем запустите от обычного пользователя.\u003c/p\u003e\n\u003ch3 id="опции"\u003eОпции \u003ca href="#%d0%be%d0%bf%d1%86%d0%b8%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ereflector --list\u003c/code\u003e посмотреть список доступных для использования стран и кодов.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-l 10\u003c/code\u003e выбрать 10 из списка.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-f 20\u003c/code\u003e выбрать 20 по скорости.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e--sort rate\u003c/code\u003e сортировато по скорости загрузки.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e--sort score\u003c/code\u003e сортировато по рейтингу, оценки.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-a 12\u003c/code\u003e синхронизированы за последние 12 часов.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e--verbose\u003c/code\u003e подробный вывод.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="использование"\u003eИспользование \u003ca href="#%d0%b8%d1%81%d0%bf%d0%be%d0%bb%d1%8c%d0%b7%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# несколько стран\nmirrors -lc\n# одна страна\nmirrors -c\n# не учитывает страны\nmirrors\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПрямой командой.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo reflector -c ru,by,ua,pl -p https,http -l 20 --sort rate --save /etc/pacman.d/mirrorlist\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo reflector -c ru,by,ua,pl -p https,http --sort rate -a 12 -l 10 --save /etc/pacman.d/mirrorlist\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИли по одной.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo reflector --verbose -c ru -p https,http --sort score --save /etc/pacman.d/mirrorlist\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПроверим: \u003ccode\u003ecat /etc/pacman.d/mirrorlist\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eОбновление всей системы.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -Syyu\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="pacman-hook"\u003ePacman hook \u003ca href="#pacman-hook" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eСоздайте файл \u003ccode\u003esudo nano /etc/pacman.d/hooks/mirrorupgrade.hook\u003c/code\u003e, содержимое ниже. В \u003ca href="https://wiki.archlinux.org/index.php/reflector#pacman_hook" target="_blank" rel="noopener"\u003eArchWiki\u003c/a\u003e немного другой пример.\u003c/p\u003e\n\u003cp\u003eВ \u003ccode\u003eExec =\u003c/code\u003e Пропишите выполнение reflector с нужными вам опциями.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e[Trigger]\nOperation = Upgrade\nType = Package\nTarget = pacman-mirrorlist\n\n[Action]\nDescription = Updating pacman-mirrorlist with reflector\nWhen = PostTransaction\nDepends = reflector\nExec = /usr/bin/reflector -c ru,by,ua,pl -p https,http --sort rate -a 12 -l 10 --save /etc/pacman.d/mirrorlist\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДанный хук будет выполнен после обновления \u003ccode\u003epacman-mirrorlist\u003c/code\u003e.\u003c/p\u003e\n'},{id:14,href:"https://ctlos.github.io/wiki/wm/sway/",title:"Swaywm тайловый менеджер окон",description:"",content:'\u003cfigure class="mb-4"\u003e\n    \u003cimg class="img-fluid lazyload blur-up" data-sizes="auto" src="/wiki/wm/sway/sway_hub47dfda4bb39cff9bf57ed3291b6f2c6_174985_20x0_resize_box_3.png" data-srcset="https://ctlos.github.io/wiki/wm/sway/sway_hub47dfda4bb39cff9bf57ed3291b6f2c6_174985_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/wm/sway/sway_hub47dfda4bb39cff9bf57ed3291b6f2c6_174985_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/wm/sway/sway_hub47dfda4bb39cff9bf57ed3291b6f2c6_174985_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/wm/sway/sway_hub47dfda4bb39cff9bf57ed3291b6f2c6_174985_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/wm/sway/sway_hub47dfda4bb39cff9bf57ed3291b6f2c6_174985_500x0_resize_box_3.png 500w" width="1920" height="1080" alt="Sway"\u003e\n    \u003cnoscript\u003e\u003cimg class="img-fluid" sizes="100vw" srcset="https://ctlos.github.io/wiki/wm/sway/sway_hub47dfda4bb39cff9bf57ed3291b6f2c6_174985_900x0_resize_box_3.png 900w,https://ctlos.github.io/wiki/wm/sway/sway_hub47dfda4bb39cff9bf57ed3291b6f2c6_174985_800x0_resize_box_3.png 800w,https://ctlos.github.io/wiki/wm/sway/sway_hub47dfda4bb39cff9bf57ed3291b6f2c6_174985_700x0_resize_box_3.png 700w,https://ctlos.github.io/wiki/wm/sway/sway_hub47dfda4bb39cff9bf57ed3291b6f2c6_174985_600x0_resize_box_3.png 600w,https://ctlos.github.io/wiki/wm/sway/sway_hub47dfda4bb39cff9bf57ed3291b6f2c6_174985_500x0_resize_box_3.png 500w" src="/wiki/wm/sway/sway.png" width="1920" height="1080" alt="Sway"\u003e\u003c/noscript\u003e\n    \n  \u003c/figure\u003e\n\n\u003cp\u003eSway — тайловый оконный менеджер wayland, почти аналог i3 в x11, \u003ca href="https://swaywm.org/" target="_blank" rel="noopener"\u003eswaywm.org\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eПредставляю вашему внимаю готовый к употреблению wm с небольшим описание, \u003ca href="https://imgur.com/gallery/fHpnVur" target="_blank" rel="noopener"\u003eнемного скринов\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="скачать-iso-образ"\u003eСкачать iso образ \u003ca href="#%d1%81%d0%ba%d0%b0%d1%87%d0%b0%d1%82%d1%8c-iso-%d0%be%d0%b1%d1%80%d0%b0%d0%b7" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eДанный оконный менеджер доступен в \u003ccode\u003exfce iso\u003c/code\u003e, метод online установки.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="/get"\u003eСкачать\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="конфигурационные-файлы"\u003eКонфигурационные файлы \u003ca href="#%d0%ba%d0%be%d0%bd%d1%84%d0%b8%d0%b3%d1%83%d1%80%d0%b0%d1%86%d0%b8%d0%be%d0%bd%d0%bd%d1%8b%d0%b5-%d1%84%d0%b0%d0%b9%d0%bb%d1%8b" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eПуть\u003c/th\u003e\n\u003cth\u003eОписание\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/sway/config.d/hotkeys\u003c/td\u003e\n\u003ctd\u003eГорячие клавиши.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/sway/config.d/app_conf\u003c/td\u003e\n\u003ctd\u003eРоли окон.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/sway/config.d/theme\u003c/td\u003e\n\u003ctd\u003eВнешний вид.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/sway/waybar\u003c/td\u003e\n\u003ctd\u003eКонфиги и скрипты панели.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/sway/swaylock/config\u003c/td\u003e\n\u003ctd\u003eБлокировка экрана.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/sway/wofi\u003c/td\u003e\n\u003ctd\u003eКонфиги, стили лаунчера.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/sway/mako\u003c/td\u003e\n\u003ctd\u003eКонфиг уведомлений.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e~/.config/sway/kitty\u003c/td\u003e\n\u003ctd\u003eКонфиги терминала.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id="горячие-клавиши"\u003eГорячие клавиши \u003ca href="#%d0%b3%d0%be%d1%80%d1%8f%d1%87%d0%b8%d0%b5-%d0%ba%d0%bb%d0%b0%d0%b2%d0%b8%d1%88%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eКонфиг \u003ccode\u003e~/.config/sway/config.d/hotkeys\u003c/code\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMOD4: Super/Windows\u003c/li\u003e\n\u003cli\u003eMOD1: Alt\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eОпция \u003ccode\u003e--to-code\u003c/code\u003e, работа вне зависимости от раскладки.\u003c/p\u003e\n\u003ch3 id="режимы-и-управление-окнами"\u003eРежимы и управление окнами \u003ca href="#%d1%80%d0%b5%d0%b6%d0%b8%d0%bc%d1%8b-%d0%b8-%d1%83%d0%bf%d1%80%d0%b0%d0%b2%d0%bb%d0%b5%d0%bd%d0%b8%d0%b5-%d0%be%d0%ba%d0%bd%d0%b0%d0%bc%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eКлюч\u003c/th\u003e\n\u003cth\u003eОписание\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+space\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003etoggle: переключение в активных режимах.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+shift+space\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003etoggle: переключение окна в плавающий и обратно.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+shift+minus\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003escratchpad: Отправка окна в блокнот.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+minus\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eСворачивание, вызов окна в scratchpad-е.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+b\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eГоризонтальный сплит.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+v\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eВертикальный сплит.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+e\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПереключение сплита.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+s\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eРежим стэйкинга.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+w\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eРежим табов.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+r\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eИ изменение размеров vim(\u003ccode\u003eh,j,k,l\u003c/code\u003e) или \u003ccode\u003e←,→,↑,↓\u003c/code\u003e, выход из режима \u003ccode\u003eEsc\u003c/code\u003e.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+{←,→,↑,↓}\u003c/code\u003e или \u003ccode\u003esuper+{h,j,k,l}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПеремещение по окнам.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+shift+{←,→,↑,↓}\u003c/code\u003e или \u003ccode\u003esuper+shift+{h,j,k,l}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eМеняет позицию окна.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+{1-9,0}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПереход на тег.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+shift+{1-9,0}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eОтправка окна на тег.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+shift+b\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПоказать скрыть панель waybar.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eЗажатая \u003ccode\u003eSuper(win)\u003c/code\u003e и клавиши мыши манипулируют окнами: положение(левый клик), размер(правый клик).\u003c/p\u003e\n\u003ch3 id="запуск-утилит"\u003eЗапуск утилит \u003ca href="#%d0%b7%d0%b0%d0%bf%d1%83%d1%81%d0%ba-%d1%83%d1%82%d0%b8%d0%bb%d0%b8%d1%82" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eКлюч\u003c/th\u003e\n\u003cth\u003eОписание\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ealt+shift\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПереключение раскладки(us,ru).\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+shift+r\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eРестарт, перечитать конфиг.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+Return\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eТерминал kitty.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+shift+Return\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eПлавающий терминал.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+z\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eЗакрыть окно.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+d\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eWofi - меню(лаунчер).\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+alt+Del\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eМеню выхода.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+Del\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eБлокировка экрана.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ealt+Tab\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eСписок открытых окон.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ePrint\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eСкрин всего экрана, падает в изображения.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esuper+Print\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eМеню скриншотов(grimshot wofi).\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ealt+w\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eFirefox.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ealt+t\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eМенеджер файлов thunar.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cblockquote\u003e\n\u003cp\u003eЕсли что-то не устраивает, меняйте под себя и релоад конфига \u003ccode\u003esuper+shift+r\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id="ссылки"\u003eСсылки \u003ca href="#%d1%81%d1%81%d1%8b%d0%bb%d0%ba%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="https://github.com/swaywm/sway/wiki" target="_blank" rel="noopener"\u003eWiki sway\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://wiki.archlinux.org/title/Sway" target="_blank" rel="noopener"\u003eArch wiki\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eКомментарии приветствуются. Вступай в telegram чат: \u003ca href="https://telegram.me/ctlos" target="_blank" rel="noopener"\u003et.me/ctlos\u003c/a\u003e, или прокомментируй на форуме(ссылка ниже).\u003c/p\u003e\n'},{id:15,href:"https://ctlos.github.io/wiki/backup/",title:"Резервное копирование",description:"Prologue Doks.",content:""},{id:16,href:"https://ctlos.github.io/wiki/packages/mpd/",title:"Mpd и ncmpcpp",description:null,content:'\u003cp\u003eНастройка mpd сервера и консольного плеера ncmpcpp. Локальное и удаленное управление.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="https://m.do.co/c/49c4dbf3d0ca" target="_blank" rel="noopener"\u003eDigital Ocean Bonus 100$\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://forms.gle/LXiM2nLxKRuJt9SA9" target="_blank" rel="noopener"\u003eПроголосуй за следующее видео\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="установка-локально"\u003eУстановка локально \u003ca href="#%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0-%d0%bb%d0%be%d0%ba%d0%b0%d0%bb%d1%8c%d0%bd%d0%be" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eЛокально, на своей машине установите пакеты.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eyay -S mpd mpc ncmpcpp mpv\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="конфигурация-mpd"\u003eКонфигурация mpd \u003ca href="#%d0%ba%d0%be%d0%bd%d1%84%d0%b8%d0%b3%d1%83%d1%80%d0%b0%d1%86%d0%b8%d1%8f-mpd" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkdir -p ~/.config/mpd\n\nnano ~/.config/mpd/mpd.conf\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003eВажно, указывайте именно \u003ccode\u003e0.0.0.0\u003c/code\u003e, а не \u003ccode\u003elocalhost\u003c/code\u003e и не \u003ccode\u003e127.0.0.1\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebind_to_address \u0026quot;0.0.0.0\u0026quot;\nport \u0026quot;6600\u0026quot;\n\nmusic_directory \u0026quot;/media/files/mega/music\u0026quot;\nplaylist_directory \u0026quot;~/.config/mpd/playlists\u0026quot;\ndb_file \u0026quot;~/.config/mpd/db\u0026quot;\nlog_file \u0026quot;/tmp/logmpd\u0026quot;\npid_file \u0026quot;~/.config/mpd/pid\u0026quot;\nstate_file \u0026quot;~/.config/mpd/state\u0026quot;\nauto_update \u0026quot;yes\u0026quot;\nauto_update_depth \u0026quot;2\u0026quot;\n\naudio_output {\ntype \u0026quot;pulse\u0026quot; # or pulse,alsa\nname \u0026quot;MPD live\u0026quot;\n}\n\naudio_output {\ntype   \u0026quot;fifo\u0026quot;\nname   \u0026quot;MPD FIFO\u0026quot;\npath   \u0026quot;/tmp/mpd.fifo\u0026quot;\nformat \u0026quot;44100:16:2\u0026quot;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="конфигурация-ncmpcpp"\u003eКонфигурация ncmpcpp \u003ca href="#%d0%ba%d0%be%d0%bd%d1%84%d0%b8%d0%b3%d1%83%d1%80%d0%b0%d1%86%d0%b8%d1%8f-ncmpcpp" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkdir ~/.ncmpcpp\n\nnano ~/.ncmpcpp/config\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-raw"\u003e{{\u0026lt;\nmpd_host = localhost\nmpd_port = 6600\nmpd_crossfade_time = 2\nvisualizer_data_source = /tmp/mpd.fifo\nvisualizer_output_name = \u0026quot;Visualizer feed\u0026quot;\nvisualizer_in_stereo = no\nvisualizer_type = spectrum\nvisualizer_look = ●┃\nvisualizer_color = cyan, green, yellow, magenta, red\nsong_list_format = \u0026quot;{{%a - %t}|{%f}}{$R%l}\u0026quot;\nsong_status_format = \u0026quot;{{%a{ $2//$9 %b{, %y}} $2//$9 }{%t$/b}}|{$b%f$/b}\u0026quot;\nsong_library_format = {{%a - %t} (%b)}|{%f}\nnow_playing_prefix = \u0026quot;$b$5\u0026quot;\nnow_playing_suffix = \u0026quot;$/b$9\u0026quot;\nplaylist_display_mode = classic\nautocenter_mode = yes\nprogressbar_look = \u0026quot;▃▃▃\u0026quot;\nheader_visibility = no\nstatusbar_visibility = no\ntitles_visibility = no\nfollow_now_playing_lyrics = no\nenable_window_title = no\nexternal_editor = nano\ncolors_enabled = yes\nempty_tag_color = red\nheader_window_color = yellow\nvolume_color = yellow\nstate_line_color = red\nstate_flags_color = yellow\nmain_window_color = default\ncolor1 = red\ncolor2 = red\nprogressbar_color = black\nprogressbar_elapsed_color = red\nstatusbar_color = default\nalternative_ui_separator_color = magenta\nwindow_border_color = yellow\nactive_window_border = magenta\nexecute_on_song_change = notify-send \u0026quot;Now Playing ♫\u0026quot; \u0026quot;$(mpc current)\u0026quot;\n\u0026gt;}}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="настройка-на-сервере"\u003eНастройка на сервере \u003ca href="#%d0%bd%d0%b0%d1%81%d1%82%d1%80%d0%be%d0%b9%d0%ba%d0%b0-%d0%bd%d0%b0-%d1%81%d0%b5%d1%80%d0%b2%d0%b5%d1%80%d0%b5" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eДостаточно скопировать данные конфиги на сервер. Замените юзера и ip.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003escp -r ~/.ncmpcpp cretm@134.122.88.241:~/\n\nssh cretm@134.122.88.241 \u0026quot;mkdir -p ~/.config/mpd\u0026quot;\nscp -r ~/.config/mpd/mpd.conf cretm@134.122.88.241:~/.config/mpd\n\n# login\nssh cretm@134.122.88.241\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИ в конфиг mpd добавить секцию \u003ccode\u003ehttp\u003c/code\u003e после \u003ccode\u003epulse\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enano ~/.config/mpd/mpd.conf\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eaudio_output {\n  type \u0026quot;httpd\u0026quot;\n  name \u0026quot;HTTP mpd\u0026quot;\n  encoder \u0026quot;vorbis\u0026quot;\n  port \u0026quot;8000\u0026quot;\n  bitrate \u0026quot;128\u0026quot;\n  format \u0026quot;44100:16:1\u0026quot;\n  always_on \u0026quot;yes\u0026quot;\n  tags \u0026quot;yes\u0026quot;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="установка-на-сервере"\u003eУстановка на сервере \u003ca href="#%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0-%d0%bd%d0%b0-%d1%81%d0%b5%d1%80%d0%b2%d0%b5%d1%80%d0%b5" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003essh cretm@134.122.88.241\n\nyay -S mpd ncmpcpp\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="запуск-сервиса"\u003eЗапуск сервиса \u003ca href="#%d0%b7%d0%b0%d0%bf%d1%83%d1%81%d0%ba-%d1%81%d0%b5%d1%80%d0%b2%d0%b8%d1%81%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eДобавление в автозапуск системд сервиса и запуск от юзера. Это нужно выполнить везде.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esystemctl --user enable --now mpd\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="запуск-потока"\u003eЗапуск потока \u003ca href="#%d0%b7%d0%b0%d0%bf%d1%83%d1%81%d0%ba-%d0%bf%d0%be%d1%82%d0%be%d0%ba%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003empv http://cloud.ctlos.ru:8000\n# или ip\nmpv http://134.122.88.241:8000\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="управление-воспроизведением"\u003eУправление воспроизведением \u003ca href="#%d1%83%d0%bf%d1%80%d0%b0%d0%b2%d0%bb%d0%b5%d0%bd%d0%b8%d0%b5-%d0%b2%d0%be%d1%81%d0%bf%d1%80%d0%be%d0%b8%d0%b7%d0%b2%d0%b5%d0%b4%d0%b5%d0%bd%d0%b8%d0%b5%d0%bc" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003encmpcpp -h cloud.ctlos.ru\n# или ip и порт\nncmpcpp -h 134.122.88.241 -p 6600\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЕсли зашли по ssh, то дополнительные флаги не нужны.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003essh cretm@134.122.88.241\n\nncmpcpp\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="ссылки-по-теме"\u003eСсылки по теме \u003ca href="#%d1%81%d1%81%d1%8b%d0%bb%d0%ba%d0%b8-%d0%bf%d0%be-%d1%82%d0%b5%d0%bc%d0%b5" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="https://m.do.co/c/49c4dbf3d0ca" target="_blank" rel="noopener"\u003eDigital Ocean Bonus 100$\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://wiki.archlinux.org/index.php/Music_Player_Daemon" target="_blank" rel="noopener"\u003eMpd\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://wiki.archlinux.org/index.php/Music_Player_Daemon/Tips_and_tricks" target="_blank" rel="noopener"\u003eMpd Tips\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://wiki.archlinux.org/index.php/ncmpcpp" target="_blank" rel="noopener"\u003encmpcpp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="http://dotshare.it/category/mpd/ncmpcpp/" target="_blank" rel="noopener"\u003eConfig dotshare\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n'},{id:17,href:"https://ctlos.github.io/wiki/other/gnupg/",title:"Использование GnuPG",description:null,content:'\u003ch2 id="цифровые-подписи"\u003eЦифровые подписи \u003ca href="#%d1%86%d0%b8%d1%84%d1%80%d0%be%d0%b2%d1%8b%d0%b5-%d0%bf%d0%be%d0%b4%d0%bf%d0%b8%d1%81%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href="https://wiki.archlinux.org/index.php/GnuPG_%28%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9%29" target="_blank" rel="noopener"\u003ewiki.archlinux.org\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eГенерация, создание пары ключей.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --full-gen-key\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПросмотр списка ключей.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --list-keys\ngpg --list-secret-keys\ngpg --list-public-keys\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eId ключей.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --list-public-keys --keyid-format LONG\ngpg --list-secret-keys --keyid-format LONG\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eУдалить ключ.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --delete-secret-keys 98F76D97B786E6A3\ngpg --delete-keys 98F76D97B786E6A3\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eРедактировать ключ.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --expert --edit-key ctlos@protonmail.com\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЭкспорт открытого ключа в текстовом виде.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --armor --output pubkey.txt --export 98F76D97B786E6A3\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЭкспорт закрытого ключа в текстовом виде.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --armor --output privkey.txt --export-secret-keys 98F76D97B786E6A3\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЭкспорт Certificate.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg -a --gen-revoke 98F76D97B786E6A3 \u0026gt; rev_cert.gpg\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЭкспорт открытого ключа на keyserver.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --keyserver keys.gnupg.net --send-keys 8123459\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИмпорт открытого ключа из файла.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --import key.txt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИли по номеру.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --recv-keys 98F76D97B786E6A3\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИмпорт закрытого ключа.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --allow-secret-key-import --import privkey.txt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИмпорт открытого ключа с keyserver.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --keyserver keys.gnupg.net --recv-keys 98F76D97B786E6A3\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПоиск.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --keyserver keys.gnupg.net --search-keys mail@example.com\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОбновление.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --keyserver keys.gnupg.net --refresh-keys\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПример подписи и проверки подписи.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --detach-sign --no-armor ctlos.iso\ngpg --verify ctlos.iso.sig ctlos.iso\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЗашифровать файл.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg --encrypt-files -r 98F76D97B786E6A3 secret.tar\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eРасшифровать файл.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpg -d secret.tar.asc\n\ngpg -d secret.tar.asc \u0026gt; secret.tar\n\ngpg -o secret.tar --decrypt secret.tar.asc\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eШифровать каталог.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpgtar --encrypt --output secret.tar -r 98F76D97B786E6A3 dir/\n\ngpgtar -c -o secret.tar dir/\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПросмотр.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpgtar -t secret.tar\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eРасшифровать каталог.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egpgtar -d secret.tar\n\u003c/code\u003e\u003c/pre\u003e\n'},{id:18,href:"https://ctlos.github.io/wiki/install/pkg-manager/",title:"Пакетные менеджеры",description:null,content:'\u003cp\u003eСписок некоторых программ Arch Wiki \u003ca href="https://wiki.archlinux.org/index.php/List_of_applications_%28%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9%29" target="_blank" rel="noopener"\u003eList applications\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eВ Arch принято использовать консольные пакетные менеджеры. Pacman главный и установлен по умолчанию, но существуют и графические менеджеры.\u003c/p\u003e\n\u003cp\u003eДля Aur репозитория существует множество консольных пакетных менеджеров, я на текущий момент использую \u003cstrong\u003eyay\u003c/strong\u003e и он установлен во всех моих образах. Он берет на себя роль управления не только aur пакетами, но и pacman. У него те же флаги и немного своих \u003ca href="https://github.com/Jguer/yay" target="_blank" rel="noopener"\u003ehttps://github.com/Jguer/yay\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="pamac-manager"\u003ePamac manager \u003ca href="#pamac-manager" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eУстановка.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eyay -S pamac-aur\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eНавигация по категориям или поиск, в настройках включите поддержку aur.\u003c/p\u003e\n\u003ch2 id="gnome-software"\u003eGnome software \u003ca href="#gnome-software" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eМенеджер пакетов Gnome, хорошо использовать в связке с flatpak.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eyay -S gnome-software gnome-software-packagekit-plugin\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="flatpak"\u003eFlatpak \u003ca href="#flatpak" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eFlatpak – это современный, прогрессивный формат самодостаточных пакетов для GNU/Linux. Он поддерживает рантаймы, изоляцию внутри песочниц, установку без наличия прав супер пользователя и многое другое.\u003c/p\u003e\n\u003cp\u003eУстановка.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S flatpak\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОсновной репозиторий flatpak \u003ca href="https://flathub.org/apps" target="_blank" rel="noopener"\u003eflathub.org/apps\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eДобавление репозитория flathub.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eflatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eУдаление репозитория flathub.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eflatpak remote-delete flathub\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОбновление flatpak.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eflatpak update\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПоиск.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eflatpak search libreoffice\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСписок пакетов в репозитории flathub.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eflatpak remote-ls flathub\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eУстановка пакета в домашнюю директорию.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eflatpak install flathub com.valvesoftware.Steam\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЗапуск.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eflatpak run com.valvesoftware.Steam\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСписок установленых пакетов.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eflatpak list\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОбновление пакета.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eflatpak update com.valvesoftware.Steam\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОбновление пакетов.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eflatpak update\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eУдаление пакета.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eflatpak uninstall com.valvesoftware.Steam\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПосле удаления приложения могут оставаться неиспользуемые рантаймы, очистим и их.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eflatpak uninstall --unused\n\u003c/code\u003e\u003c/pre\u003e\n'},{id:19,href:"https://ctlos.github.io/wiki/backup/netcat/",title:"Работа с Netcat, ssh, rsync",description:null,content:'\u003ch2 id="установка-nc-и-pv"\u003eУстановка \u003cstrong\u003enc\u003c/strong\u003e и \u003cstrong\u003epv\u003c/strong\u003e \u003ca href="#%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0-nc-%d0%b8-pv" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S gnu-netcat pv\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПримеры передач.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecat dump.iso | pv -b | nc -l 3333\n\ndd if=/dev/sdb5 | gzip -9 | nc -l 3333\n\ntar -czf - /etc/ | pv -b | nc -l 3333\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПримеры получения.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enc 187.187.55.18 3333 | pv -b \u0026gt; dump.iso\n\nnc 187.187.55.18 3333 | pv -b \u0026gt; ddsdb5dump.img.gz\n\nnc 187.187.55.18 3333 | pv -b \u0026gt; dump.tar.gz\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="пример-ssh-туннеля"\u003eПример ssh туннеля \u003ca href="#%d0%bf%d1%80%d0%b8%d0%bc%d0%b5%d1%80-ssh-%d1%82%d1%83%d0%bd%d0%bd%d0%b5%d0%bb%d1%8f" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eЭто нужно в том случае, если нет доступа к порту \u003ccode\u003e3333\u003c/code\u003e. Вся передача шифруется, т.к. ssh.\u003c/p\u003e\n\u003cp\u003eСоздаем мост(туннель) на ip \u003ccode\u003e127.0.0.1\u003c/code\u003e(localhost), на порт \u003ccode\u003e23333\u003c/code\u003e. \u003ccode\u003e-p 22\u003c/code\u003e Это стандартный ssh порт, обычно его меняют.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003essh -p 22 -f -L 23333:127.0.0.1:3333 name@187.187.55.18 sleep 10; \\\nnc 127.0.0.1 23333 | pv -b \u0026gt; ctlos.iso\n\n# проброс порта\nssh -p 22 -fN -L 23333:127.0.0.1:3333 name@187.187.55.18\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="scp"\u003escp \u003ca href="#scp" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eС локалки на удаленнку.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003escp -P 2222 file.txt file2.txt name@187.187.55.18:/home/user/dir\n\nscp -P 2222 -r dir1 name@187.187.55.18:/home/user/dir2\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eС удаленки на локалку.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003escp -P 2222 name@187.187.55.18:file.txt /home/user/dir\n\nscp -P 2222 name@187.187.55.18:~/\\{file1,file2,file3\\} .\n\nscp -P 2222 -r name@187.187.55.18:/home/dir/ /home/user/dir/\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eС одного сервака на другой.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003escp name@187.187.55.18:/dir/file.txt name@198.198.188.18:/name/dir/\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="синхронизация-rsync"\u003eСинхронизация rsync \u003ca href="#%d1%81%d0%b8%d0%bd%d1%85%d1%80%d0%be%d0%bd%d0%b8%d0%b7%d0%b0%d1%86%d0%b8%d1%8f-rsync" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eУстановка \u003cstrong\u003ersync\u003c/strong\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S rsync\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eНа сервере нужно создать диреторию \u003ccode\u003e/dump\u003c/code\u003e, запустить сервис(daemon), настроить конфиг и открыть 873 порт(tcp).\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl start rsyncd.service\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003euid - пользователь на сервере, gid - группа в которой он состоит(обычно users). Создаем на сервере \u003ccode\u003e/dump\u003c/code\u003e и даём ему права.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo mkdir /dump\nsudo chown username:users /dump\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eКонфиг: \u003ccode\u003e/etc/rsyncd.conf\u003c/code\u003e. Укажите ip в \u003ccode\u003ehosts deny\u003c/code\u003e с которого вы подключаетесь.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esyslog facility=daemon\npid file=/var/run/rsyncd.pid\ntransfer logging = yes\nlog file = /var/log/rsyncd.log\nmax connections = 10\nexclude = lost+found/\ndont compress = *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz\n\n[dump]\ncomment = rsync open for dump\nuid = username\ngid = users\n#auth users = st\n#secrets file = /etc/rsyncd.scrt\npath = /dump/\nlist = yes\nread only = no\nhosts allow = 188.128.110.170\nhosts deny = *\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПосле изменения конфига сделать рестарт. Авторизацию по паролю я не использую, поэтому две строки закомментил(#).\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl restart rsyncd.service\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПо моим тестам лучше передавать не сжатые данные(Синхронизацция).\u003c/p\u003e\n\u003cp\u003eОтправка файла и пример директории.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ersync -auvz -L -P ~/test.sfs rsync://187.187.55.18/dump\n\nrsync -auvz -L -P ~/dir/* rsync://187.187.55.18/dump\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПолучение.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ersync -auvz -L -P rsync://187.187.55.18/dump ~/.dump/\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSsh.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ersync -auvz -L -P -e \u0026quot;ssh -p 2222\u0026quot; name@187.187.55.18:/path/to/copy /local/path\n\nrsync -auvz -L -P -e \u0026quot;ssh -p 2222\u0026quot; /local/path name@187.187.55.18:/path/to/copy\n\u003c/code\u003e\u003c/pre\u003e\n'},{id:20,href:"https://ctlos.github.io/wiki/config/grub-uefi/",title:"Установка Grub UEFI",description:null,content:'\u003ch2 id="подготовка"\u003eПодготовка \u003ca href="#%d0%bf%d0%be%d0%b4%d0%b3%d0%be%d1%82%d0%be%d0%b2%d0%ba%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eИнформация о диске.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eparted /dev/sda print\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздать таблицу GPT. Создать boot раздел 512M, выбрать тип EFI.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecfdisk\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eparted /dev/sda print\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eФорматируем.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkfs.fat -F32 /dev/sda1\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eМонтируем корень и другие, если надо.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount /dev/sda2 /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздаем efi дерикторию и др., если надо.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkdir -p /mnt/boot/efi\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eМонтируем boot EFI.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount /dev/sda1 /mnt/boot/efi\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="установка"\u003eУстановка \u003ca href="#%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eВыполняем chroot.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003earch-chroot /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eУстановим Grub.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman -S grub efibootmgr dosfstools os-prober\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eУстановим grub в \u003ccode\u003e/boot/efi\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egrub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=Arch --force\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСконфигурируем Grub.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egrub-mkconfig -o /boot/grub/grub.cfg\n\u003c/code\u003e\u003c/pre\u003e\n'},{id:21,href:"https://ctlos.github.io/wiki/packages/",title:"Программы",description:"Prologue Doks.",content:""},{id:22,href:"https://ctlos.github.io/wiki/packages/ffmpeg-stream/",title:"Запуск трансляции на youtube и livepeer",description:null,content:'\u003cp\u003eСтриминг с помощью проекта \u003ca href="https://torch2424.github.io/live-stream-radio/#/" target="_blank" rel="noopener"\u003elive-stream-radio\u003c/a\u003e. Потребуется nodejs lts и ffmpeg.\u003c/p\u003e\n\u003cp\u003eFfmpeg — мощный инструмент конвертирования, кодирования и записи чего угодно.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eyay -S ffmpeg\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003eРезультат с live-stream-radio \u003ca href="https://youtu.be/Glu60hqtptc" target="_blank" rel="noopener"\u003eyoutu.be/Glu60hqtptc\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eРезультат на чистом ffmpeg \u003ca href="https://youtu.be/LC640rkEs3Y" target="_blank" rel="noopener"\u003eyoutu.be/LC640rkEs3Y\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="устновка-nvm"\u003eУстновка nvm \u003ca href="#%d1%83%d1%81%d1%82%d0%bd%d0%be%d0%b2%d0%ba%d0%b0-nvm" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eСкопируйте команду \u003ccode\u003ecurl\u003c/code\u003e в \u003ca href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener"\u003eрепо nvm\u003c/a\u003e, так как версия может изменится.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИ добавьте в конце \u003ccode\u003e~/.zshrc\u003c/code\u003e или \u003ccode\u003e~/.bashrc\u003c/code\u003e переменные среды.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eexport NVM_DIR=\u0026quot;$HOME/.config/nvm\u0026quot;\n\n# Lazy load\nif [[ -s \u0026quot;$NVM_DIR/nvm.sh\u0026quot; ]]; then\n  NODE_GLOBALS=(`find $NVM_DIR/versions/node -maxdepth 3 -type l -wholename \'*/bin/*\' | xargs -n1 basename | sort | uniq`)\n  NODE_GLOBALS+=(\u0026quot;node\u0026quot;)\n  NODE_GLOBALS+=(\u0026quot;nvm\u0026quot;)\n  # Lazy-loading nvm + npm on node globals\n  load_nvm () {\n    [ -s \u0026quot;$NVM_DIR/nvm.sh\u0026quot; ] \u0026amp;\u0026amp; \\. \u0026quot;$NVM_DIR/nvm.sh\u0026quot;\n  }\n  # Making node global trigger the lazy loading\n  for cmd in \u0026quot;${NODE_GLOBALS[@]}\u0026quot;; do\n    eval \u0026quot;${cmd}(){ unset -f ${NODE_GLOBALS}; load_nvm; ${cmd} \\$@ }\u0026quot;\n  done\nfi\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="установка-npm"\u003eУстановка npm \u003ca href="#%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0-npm" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eУстановите \u003ccode\u003enodejs\u003c/code\u003e lts версию, \u003ccode\u003enpm\u003c/code\u003e идет в комплекте.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003envm install --lts\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПроверить версии.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003enode -v\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003enpm -v\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="live-stream-radio"\u003eLive stream radio \u003ca href="#live-stream-radio" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eИсходники проекта \u003ca href="https://github.com/torch2424/live-stream-radio" target="_blank" rel="noopener"\u003elive-stream-radio\u003c/a\u003e. Установить глобально \u003ccode\u003e-g\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install -g live-stream-radio\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="создание-проекта"\u003eСоздание проекта \u003ca href="#%d1%81%d0%be%d0%b7%d0%b4%d0%b0%d0%bd%d0%b8%d0%b5-%d0%bf%d1%80%d0%be%d0%b5%d0%ba%d1%82%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003elive-stream-radio --generate stream\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="конфигурация"\u003eКонфигурация \u003ca href="#%d0%ba%d0%be%d0%bd%d1%84%d0%b8%d0%b3%d1%83%d1%80%d0%b0%d1%86%d0%b8%d1%8f" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eЗамените значение \u003ccode\u003estream_key\u003c/code\u003e на свой ключ youtube трансляции.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enano ~/stream/config.json\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="запуск-стрима"\u003eЗапуск стрима \u003ca href="#%d0%b7%d0%b0%d0%bf%d1%83%d1%81%d0%ba-%d1%81%d1%82%d1%80%d0%b8%d0%bc%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eПеред запуском закиньте mp3 файлы в \u003ccode\u003e~/stream/audio\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003elive-stream-radio --start stream\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="чистый-ffmpeg"\u003eЧистый ffmpeg \u003ca href="#%d1%87%d0%b8%d1%81%d1%82%d1%8b%d0%b9-ffmpeg" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eСоздайте дерево директорий и скрипт \u003ccode\u003emsrt.sh\u003c/code\u003e. В скрипте замените значения \u003ccode\u003eKEY\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkdir ~/stream/{out,music,audio}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003emusic\u003c/code\u003e тут храним всю музыку.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eaudio\u003c/code\u003e сюда копируем нужное для стрима.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eout\u003c/code\u003e сюда упадут переименованные файлы \u003ccode\u003e1.mp3,2mp3...\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eТакой костыль с переименованием, так как ffmpeg сыпет ошибки из-за содержания в именах пробелов и скобок.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enano ~/stream/msrt.sh\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e#! /bin/bash\n\nSTREAM_URL=\u0026quot;rtmp://a.rtmp.youtube.com/live2\u0026quot;\nKEY=\u0026quot;bla-bla-bla\u0026quot;\n\n# STREAM_URL=\u0026quot;rtmp://fra-rtmp.livepeer.com/live\u0026quot;\n# KEY=\u0026quot;bla-bla-bla\u0026quot;\n\nFOLDER=\u0026quot;audio\u0026quot;\nout=\u0026quot;out\u0026quot;\n\nrm -rf $out/*\nj=0;\nfor i in $FOLDER/*.mp3; do\n  let j+=1;\n  cp -r \u0026quot;${i}\u0026quot; $out/$j.mp3;\ndone\n\nrm music.txt\nfor i in $out/*.mp3\ndo\n  printf \u0026quot;file \'%s\'\\n\u0026quot; $i \u0026gt;\u0026gt; music.txt\ndone\n\nffmpeg -f concat -i music.txt -c copy -f mpegts -y transport.ts 2\u0026gt; /dev/null \u0026amp;\n# -bsf:v h264_mp4toannexb\n\nif [ \u0026quot;$1\u0026quot; = \u0026quot;-s\u0026quot; ]; then\nffmpeg \\\n  -re -fflags +genpts -stream_loop -1 -i transport.ts \\\n  -filter_complex \u0026quot;[0:a]avectorscope=s=854x480:zoom=1.2:rc=40:gc=160:bc=80:rf=15:gf=10:bf=5,format=yuv420p[v]\u0026quot; \\\n  -map \u0026quot;[v]\u0026quot; -map 0:a -r 20 -g 40 \\\n  -pix_fmt yuv420p -x264-params keyint=40:min-keyint=40:scenecut=-1 \\\n  -s 854x480 -b:v 1000k -b:a 128k -ar 44100 -acodec aac \\\n  -vcodec libx264 -preset superfast -bufsize 512k -crf 18 -threads 2 \\\n  -f flv -flvflags no_duration_filesize \u0026quot;$STREAM_URL/$KEY\u0026quot;\nfi\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСделайте его исполняемым.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd ~/stream\nchmod +x msrt.sh\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЗакиньте нужные mp3 файлы в директорию \u003ccode\u003e~/stream/audio\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eЗапуск скрипта \u003ccode\u003e./msrt.sh\u003c/code\u003e без аргумента, скопирует содержимое \u003ccode\u003e~/stream/audio\u003c/code\u003e с переименованием в \u003ccode\u003e~/stream/out\u003c/code\u003e, создаст файл \u003ccode\u003e~/stream/transport.ts\u003c/code\u003e и список \u003ccode\u003e~/stream/music.txt\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eЗапуск скрипта \u003ccode\u003e./msrt.sh -s\u003c/code\u003e с аргументом повторит первое действие и запустит стрим в бесконечном цикле. Запустить лучше в \u003ccode\u003etmux\u003c/code\u003e вкладке и пусть работает, остановить как обычно \u003ccode\u003ectrl+c\u003c/code\u003e. В другой вкладке можно манипулировать файлами и выполнять перестроение \u003ccode\u003e~/stream/transport.ts\u003c/code\u003e, запустив без аргумента \u003ccode\u003e./msrt.sh\u003c/code\u003e, не останавливая поток.\u003c/p\u003e\n\u003cp\u003eДлительность \u003ccode\u003effmpeg -i transport.ts\u003c/code\u003e, смотри \u003ccode\u003eDuration: 00:16:50.86\u003c/code\u003e длительность в сумме.\u003c/p\u003e\n\u003ch2 id="livepeer"\u003eLivepeer \u003ca href="#livepeer" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eСоздайте бесплатный аккаунт в \u003ca href="https://livepeer.com/" target="_blank" rel="noopener"\u003elivepeer.com\u003c/a\u003e, создайте stream.\u003c/p\u003e\n\u003cp\u003eСсылка стрима, публичный адрес, запустить в проигрывателе или на веб странице, ей следует делиться.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ehttps://fra-cdn.livepeer.com/hls/11af93cghjfgjpqz6a/index.m3u8\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eRTMP ingest URL 1 подставьте в \u003ccode\u003eSTREAM_URL\u003c/code\u003e и Stream key в \u003ccode\u003eKEY\u003c/code\u003e, как вы уже наверняка поняли это скрытые данные, имея доступ к ним любой может вещать на адрес выше.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eSTREAM_URL=\u0026quot;rtmp://fra-rtmp.livepeer.com/live\u0026quot;\nKEY=\u0026quot;bla-bla-bla\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСкопируйте и сохраните код ниже в файл \u003ccode\u003eindex.html\u003c/code\u003e, отредактируйте в нем строку с url стрима, замените на свой.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003evar videoSrc = \'https://fra-cdn.livepeer.com/hls/z8kdh258fwnopq14/index.m3u8\';\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИсходник.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e\u0026lt;!DOCTYPE html\u0026gt;\n\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\n\u0026lt;head\u0026gt;\n  \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt;\n  \u0026lt;meta name=\u0026quot;viewport\u0026quot; content=\u0026quot;width=device-width, initial-scale=1.0\u0026quot;\u0026gt;\n  \u0026lt;title\u0026gt;live stream\u0026lt;/title\u0026gt;\n\n  \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; href=\u0026quot;https://cdnjs.cloudflare.com/ajax/libs/mini.css/3.0.1/mini-default.min.css\u0026quot;\u0026gt;\n  \u0026lt;script src=\u0026quot;https://cdn.jsdelivr.net/npm/hls.js@latest\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\n\u0026lt;/head\u0026gt;\n\u0026lt;body\u0026gt;\n  \u0026lt;div class=\u0026quot;container\u0026quot;\u0026gt;\n  \u0026lt;div class=\u0026quot;row\u0026quot;\u0026gt;\n    \u0026lt;div class=\u0026quot;col-sm-8\u0026quot;\u0026gt;\n      \u0026lt;div class=\u0026quot;card fluid\u0026quot;\u0026gt;\n        \u0026lt;h1\u0026gt;Stream music\u0026lt;/h1\u0026gt;\n        \u0026lt;video id=\u0026quot;video\u0026quot; class=\u0026quot;\u0026quot; controls\u0026gt;\u0026lt;/video\u0026gt;\n      \u0026lt;/div\u0026gt;\n    \u0026lt;/div\u0026gt;\n\n    \u0026lt;div class=\u0026quot;col-sm-8\u0026quot;\u0026gt;\n      \u0026lt;p\u0026gt;Hls live stream.\u0026lt;/p\u0026gt;\n    \u0026lt;/div\u0026gt;\n  \u0026lt;/div\u0026gt;\n\u0026lt;/div\u0026gt;\n\n\u0026lt;script\u0026gt;\nvar video = document.getElementById(\'video\');\nvar videoSrc = \'https://fra-cdn.livepeer.com/hls/z8kdh258fwnopq14/index.m3u8\';\nif (video.canPlayType(\'application/vnd.apple.mpegurl\')) {\n  video.src = videoSrc;\n} else if (Hls.isSupported()) {\n  var hls = new Hls();\n  hls.loadSource(videoSrc);\n  hls.attachMedia(video);\n}\n\u0026lt;/script\u0026gt;\n\u0026lt;/body\u0026gt;\n\u0026lt;/html\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eВот и все. Этот файл можно открыть с помощью браузера локально, или закинуть на какой-либо сервер, хостинг. Тем самым получить независимую трансляцию от youtube и стримить туда домашнее порно :). Скрипт можно легко адаптировать и под видео файлы, но это уже другая история.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eЕсли Вы знаете более изящные способы, или имеете какие-либо идеи, дайте мне знать в \u003ca href="https://telegram.me/ctlos" target="_blank" rel="noopener"\u003etelegram\u003c/a\u003e, там же можно обсудить, задать вопрос по этой теме.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eВсем добра, любви и процветания! До свидания.\u003c/p\u003e\n\u003ch2 id="ссылки"\u003eСсылки \u003ca href="#%d1%81%d1%81%d1%8b%d0%bb%d0%ba%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="https://torch2424.github.io/live-stream-radio/#/" target="_blank" rel="noopener"\u003elive-stream-radio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://dev.to/darkhist/creating-music-videos-with-ffmpeg-40g2" target="_blank" rel="noopener"\u003ecreating-music-videos\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://lukaprincic.si/development-log/ffmpeg-audio-visualization-tricks" target="_blank" rel="noopener"\u003evisualization-tricks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://www.extua.pw/blog/2018/11/25/ffmpeg_audio_visualisation/" target="_blank" rel="noopener"\u003effmpeg_audio_visualisation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://video.stackexchange.com/questions/12905/repeat-loop-input-video-with-ffmpeg" target="_blank" rel="noopener"\u003eRepeat Video ffmpeg\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://twitchmusic.carrd.co/" target="_blank" rel="noopener"\u003eMusic\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n'},{id:23,href:"https://ctlos.github.io/wiki/other/git-start/",title:"Настройка git и использование",description:null,content:'\u003ch2 id="настройка-git"\u003eНастройка git \u003ca href="#%d0%bd%d0%b0%d1%81%d1%82%d1%80%d0%be%d0%b9%d0%ba%d0%b0-git" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eКонфигурация.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit config --global user.name \u0026quot;ctlos\u0026quot;\ngit config --global user.email \u0026quot;ctlos@protonmail.com\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eГенерация ssh-ключей.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003essh-keygen -t rsa -b 4096 -C \u0026quot;ctlos@protonmail.com\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЗабрать ключ в \u003ccode\u003e~/.ssh\u003c/code\u003e имя \u003ccode\u003eid_rsa.pub\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id="использование"\u003eИспользование \u003ca href="#%d0%b8%d1%81%d0%bf%d0%be%d0%bb%d1%8c%d0%b7%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eИнициализация.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit init\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСтатус.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit status\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИгнорирование файлов и каталогов \u003ccode\u003e.gitignore\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eДобавление изменений.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit add .\ngit commit -m \u0026quot;test\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="работа-с-github"\u003eРабота с github \u003ca href="#%d1%80%d0%b0%d0%b1%d0%be%d1%82%d0%b0-%d1%81-github" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eСоздание репозитория на github.com.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit remote add origin https://github.com/ctlos/ctlosiso\ngit remote add origin git@github.com:ctlos/ctlosiso.git\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОтменить регистрацию удаленного репозитария.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit remote rm origin\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОтправка на github.com.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit push -u origin master\ngit push --set-upstream origin master\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eКлонирование.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/ctlos/ctlosiso\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSsh.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone git@github.com:ctlos/ctlosiso.git\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИли ветку.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone -b openbox git@github.com:ctlos/ctlosiso.git\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСписок репозиториев.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit remote\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОтправка на github.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit push ctlosiso master\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eВерсия проекта tag.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit tag -f v1.0.0\n\ngit push origin v1.0.0\n\ngit tag -a v1.0.0 -m \u0026quot;Release of version 1.0.0\u0026quot;\ngit push --tags\n\n# удалить tag ветку локально\ngit tag -d v1.0.0\n# удаленно\ngit push --delete origin v1.0.0\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eРелиз с созданием тега.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman -S hub\n# черновик\nhub release create -d -a ctlos.iso -m \u0026quot;release test\u0026quot; -t \u0026quot;openbox\u0026quot; tag-test\n# публикация с привязкой к ветки и создание тега\nhub release create -a out/ctlos.iso -m \u0026quot;ctlos openbox 1.3.0\u0026quot; -t \u0026quot;openbox\u0026quot; v1.3.0-ob\n# script ~/.bin/grel.sh\ngrel.sh v1.3.0-ob openbox\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eНовая ветка.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit branch work\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПросмотр веток локально.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit branch\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПросмотр веток и удаленных.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit branch -a\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздание локальных веток из удаленных.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit branch openbox origin/openbox\ngit branch xfce origin/xfce\ngit branch budgie origin/budgie\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОтправка ветки на github.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit push origin dev\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПеремещение по веткам.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit checkout work\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПолучить удаленную ветку.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit checkout -b bspwm origin/bspwm\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСлияние веток. Перед этим переключить на ветку в которую сливаем.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit merge work\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eУдаление веток.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit branch -D work\n\ngit push origin -d work\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПросмотр изменений.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit log\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="откат"\u003eОткат \u003ca href="#%d0%be%d1%82%d0%ba%d0%b0%d1%82" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eПредварительно, получить хэш.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit reset --hard a3775a5485af0af20375cedf46112db5f813322a\ngit push --force\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="для-контрибьюторов"\u003eДля контрибьюторов \u003ca href="#%d0%b4%d0%bb%d1%8f-%d0%ba%d0%be%d0%bd%d1%82%d1%80%d0%b8%d0%b1%d1%8c%d1%8e%d1%82%d0%be%d1%80%d0%be%d0%b2" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e1.Форкаем оригинальный репозиторий https://github.com/ctlos/ctlosiso кнопкой \u003cstrong\u003eFork\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e2.Клонируем форкнутый репозиторий\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/user_login/ctlosiso\ncd ctlosiso\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e3.Создаем новую ветку\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit checkout -b new_fix\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e4.Создаем upstream на оригинальный репозиторий\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit remote add upstream https://github.com/ctlos/ctlosiso\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e5.Меняем файлы\u003c/p\u003e\n\u003cp\u003e6.Делаем коммит и отправляем правки\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit add .\ngit commit -am \u0026quot;Fixes bla-bla\u0026quot;\ngit push -u origin new_fix\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e7.Переходим в свой репозиторий \u003ccode\u003ehttps://github.com/user_login/ctlosiso\u003c/code\u003e и жмем кнопку \u003cstrong\u003eCompare \u0026amp; pull\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e8.Описываем какую проблему решает Пул Реквест с кратким описанием, зачем сделано изменение\u003c/p\u003e\n'},{id:24,href:"https://ctlos.github.io/wiki/install/ctlos-repo/",title:"Установка и настройка репозиториев ctlos",description:null,content:'\u003ch2 id="добавление-ключа-1"\u003eДобавление ключа 1 \u003ca href="#%d0%b4%d0%be%d0%b1%d0%b0%d0%b2%d0%bb%d0%b5%d0%bd%d0%b8%d0%b5-%d0%ba%d0%bb%d1%8e%d1%87%d0%b0-1" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eУдалить все упомянания ctlos_repo из \u003ccode\u003e/etc/pacman.conf\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo nano /etc/pacman.conf\n\n[ctlos_repo]\nServer = https://github.com/ctlos/$repo/raw/master/$arch\n...\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="установка"\u003eУстановка \u003ca href="#%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eСкачать и запустить скрипт.\u003c/li\u003e\n\u003cli\u003eАвтоматически установит запись в \u003ccode\u003e/etc/pacman.conf\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eУстановит необходимые ключи.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecurl -LO git.io/strap.sh\n\nsudo sh strap.sh\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="добавление-ключа-2"\u003eДобавление ключа 2 \u003ca href="#%d0%b4%d0%be%d0%b1%d0%b0%d0%b2%d0%bb%d0%b5%d0%bd%d0%b8%d0%b5-%d0%ba%d0%bb%d1%8e%d1%87%d0%b0-2" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eДанный способ немного сложнее.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# инициализация gpg\npacman-key --init\n\npacman -Sy wget \u0026amp;\u0026amp; wget git.io/ctlos.gpg\npacman-key --add ctlos.gpg\n# или с key сервера\npacman-key --recv-keys 98F76D97B786E6A3\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="проверить-отпечаток"\u003eПроверить отпечаток \u003ca href="#%d0%bf%d1%80%d0%be%d0%b2%d0%b5%d1%80%d0%b8%d1%82%d1%8c-%d0%be%d1%82%d0%bf%d0%b5%d1%87%d0%b0%d1%82%d0%be%d0%ba" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman-key --finger 98F76D97B786E6A3\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="подписываем-ключ"\u003eПодписываем ключ \u003ca href="#%d0%bf%d0%be%d0%b4%d0%bf%d0%b8%d1%81%d1%8b%d0%b2%d0%b0%d0%b5%d0%bc-%d0%ba%d0%bb%d1%8e%d1%87" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman-key --lsign-key 98F76D97B786E6A3\n# список\npacman-key --list-keys\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="обновляем-ключи"\u003eОбновляем ключи \u003ca href="#%d0%be%d0%b1%d0%bd%d0%be%d0%b2%d0%bb%d1%8f%d0%b5%d0%bc-%d0%ba%d0%bb%d1%8e%d1%87%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman-key --populate\n# up key server\npacman-key --refresh-keys\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="устанавливаем-зеркала"\u003eУстанавливаем зеркала \u003ca href="#%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%b0%d0%b2%d0%bb%d0%b8%d0%b2%d0%b0%d0%b5%d0%bc-%d0%b7%d0%b5%d1%80%d0%ba%d0%b0%d0%bb%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enano /etc/pacman.conf\n\n[ctlos_repo]\nServer = https://github.com/ctlos/$repo/raw/master/$arch\nServer = https://osdn.net/projects/ctlos/storage/$repo/$arch\nServer = https://cvc.keybase.pub/$repo\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="ctlos-aur"\u003eCtlos aur \u003ca href="#ctlos-aur" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eМожете воспользоваться \u003ca href="https://cloud.ctlos.ru/ctlos-aur" target="_blank" rel="noopener"\u003eCtlos aur\u003c/a\u003e репозиторием, пакетов не так много, но он содержит последнии версии пакетов.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enano /etc/pacman.conf\n\n[ctlos-aur]\nSigLevel = Optional TrustAll\nServer = https://cloud.ctlos.ru/ctlos-aur\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="зеркала"\u003eЗеркала \u003ca href="#%d0%b7%d0%b5%d1%80%d0%ba%d0%b0%d0%bb%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003ehttps://ctlos.fission.app/\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eЕсли Вы заметите какие-либо проблемы в репозиториях, сообщите в \u003ca href="https://telegram.me/ctlos" target="_blank" rel="noopener"\u003eTelegram Chat\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n'},{id:25,href:"https://ctlos.github.io/wiki/config/",title:"Конфигурирование",description:"Prologue Doks.",content:""},{id:26,href:"https://ctlos.github.io/wiki/other/screencast/",title:"Screencast",description:null,content:'\u003cp\u003eScreencast, работа с видео/аудио. Скрипт в \u003ccode\u003e~/.bin/cast\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id="параметры-записи"\u003eПараметры записи \u003ca href="#%d0%bf%d0%b0%d1%80%d0%b0%d0%bc%d0%b5%d1%82%d1%80%d1%8b-%d0%b7%d0%b0%d0%bf%d0%b8%d1%81%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ePavucontrol, 32% микрофон.\u003c/li\u003e\n\u003cli\u003eЗапись simplescreenrecorder: MKV, H.264, rate 20, superfast, vorbis 128.\u003c/li\u003e\n\u003cli\u003eAudacity: удаляем шумы(дважды), улучшаем звук.\u003c/li\u003e\n\u003cli\u003effmpeg: заменяем аудио дорожку.\u003c/li\u003e\n\u003cli\u003effmpeg: перекодируем в mp4, 1080p, 30 кадров, bit rate 128k, если нужно ускоряем на 20%.\u003c/li\u003e\n\u003cli\u003effmpeg: накладываем 2 аудио дорожку, зацикливаем и понижаем звук.\u003c/li\u003e\n\u003cli\u003eОбрезаем, если нужно.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="audacity"\u003eAudacity \u003ca href="#audacity" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eВыделить фрагмент без звука, Эффекты-Noise Reduction-создать модель шума.\u003c/li\u003e\n\u003cli\u003eДвойной клик на дорожке(выделить всю), Эффекты-Noise Reduction-ок(в 2 этапа).\u003c/li\u003e\n\u003cli\u003eНормализация.\u003c/li\u003e\n\u003cli\u003eЕсли необходимо усиливаем звук Дб.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="изменяем-голос"\u003eИзменяем голос \u003ca href="#%d0%b8%d0%b7%d0%bc%d0%b5%d0%bd%d1%8f%d0%b5%d0%bc-%d0%b3%d0%be%d0%bb%d0%be%d1%81" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eДвойной клик на дорожке(выделить всю), Эффекты-Смена высоты тона. -5, ок.\u003c/li\u003e\n\u003cli\u003eФайл-экспорт-как wav.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="замена-аудио-ffmpeg"\u003eЗамена аудио ffmpeg \u003ca href="#%d0%b7%d0%b0%d0%bc%d0%b5%d0%bd%d0%b0-%d0%b0%d1%83%d0%b4%d0%b8%d0%be-ffmpeg" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003effmpeg -i input.mp4 -i good.wav -map 0:0 -map 1:0 -c copy output.mp4\n\nffmpeg -i input.mp4 -i input.wav -c:a aac -vcodec copy -map 0:0 -map 1:0 output.mp4\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="ffmpeg"\u003eFfmpeg \u003ca href="#ffmpeg" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eОбрезка. Нужно высчитать \u003ccode\u003e-t\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eВырезать 5 мин.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003effmpeg -ss 01:09:00 -t 00:05:00 -i arch.mkv -c:v copy -c:a copy out.mkv\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОбрезаем последние 2 сек. из исходника в 8 сек.(00:00:08).\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003effmpeg -ss 00:00:00 -i test.mkv -c copy -t 00:00:06 test2.mkv\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eС первой минуты по вторую(фрагмент с середины).\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003effmpeg -ss 00:01:00 -i video.mp4 -to 00:02:00 -c copy -copyts out.mp4\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eУдалить первые 1.30 секунды.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003effmpeg -ss 00:00:01.30 -i video.mp4 -c copy out.mp4\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЗамедление, множитель больше 1.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eЗамедление в 2 раза: \u003ccode\u003effmpeg -i arch.mp4 -vf \u0026quot;setpts=2.0*PTS\u0026quot; speed_down.mp4\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="ускорение"\u003eУскорение \u003ca href="#%d1%83%d1%81%d0%ba%d0%be%d1%80%d0%b5%d0%bd%d0%b8%d0%b5" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eУскорение в 2 раза: \u003ccode\u003effmpeg -i arch.mp4 -vf \u0026quot;setpts=0.5*PTS\u0026quot; speed.mp4\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eУскорение в 3 раза: \u003ccode\u003effmpeg -i arch.mp4 -vf \u0026quot;setpts=1/3*PTS\u0026quot; speed.mp4\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eУскорение в 5 раз: \u003ccode\u003effmpeg -i arch.mp4 -vf \u0026quot;setpts=1/5*PTS\u0026quot; speed.mp4\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eЗамедление в 5 раз: \u003ccode\u003effmpeg -i arch.mp4 -vf \u0026quot;setpts=1*5*PTS\u0026quot; out.mp4\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eУбрать аудио: -an\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eУбрать видео: -vn\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eСохранить оригинальные кодеки: -c copy\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eБитрейт аудио: -b:a (-b:a 320k)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eБитрейт видео: -b:v (-b:v 16M)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eКоличество кадров fps: -r (-r 25)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eРазрешение видео: -s (-s 1280x720)\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eПеред ускорением нужно убрать аудио \u003ccode\u003e-an\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003effmpeg -i arch.mkv -r 30 -s 1920x1080 out.mp4\n\nffmpeg -i out.mp4 -vf \u0026quot;setpts=0.8*PTS\u0026quot; speed.mp4\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИли комплексное, примерно на 20% \u003ccode\u003eatempo=1/setpts\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003effmpeg -i arch.mkv -filter_complex \u0026quot;[0:v]setpts=0.8*PTS[v];[0:a]atempo=1.25[a]\u0026quot; -map \u0026quot;[v]\u0026quot; -map \u0026quot;[a]\u0026quot; -b:a 128k -r 30 -s 1920x1080 speed.mp4\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eМозайка.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003effmpeg\n  -i 1.avi -i 2.avi -i 3.avi -i 4.avi\n  -filter_complex \u0026quot;\n    nullsrc=size=640x480 [base];\n    [0:v] setpts=PTS-STARTPTS, scale=320x240 [upperleft];\n    [1:v] setpts=PTS-STARTPTS, scale=320x240 [upperright];\n    [2:v] setpts=PTS-STARTPTS, scale=320x240 [lowerleft];\n    [3:v] setpts=PTS-STARTPTS, scale=320x240 [lowerright];\n    [base][upperleft] overlay=shortest=1 [tmp1];\n    [tmp1][upperright] overlay=shortest=1:x=320 [tmp2];\n    [tmp2][lowerleft] overlay=shortest=1:y=240 [tmp3];\n    [tmp3][lowerright] overlay=shortest=1:x=320:y=240\n  \u0026quot;\n  -c:v libx264 output.mkv\n\nffmpeg -i 1.avi -i 2.avi -i 3.avi -i 4.avi -filter_complex \u0026quot;nullsrc=size=640x480 [base]; [0:v] setpts=PTS-STARTPTS, scale=320x240 [upperleft]; [1:v] setpts=PTS-STARTPTS, scale=320x240 [upperright]; [2:v] setpts=PTS-STARTPTS, scale=320x240 [lowerleft]; [3:v] setpts=PTS-STARTPTS, scale=320x240 [lowerright]; [base][upperleft] overlay=shortest=1 [tmp1]; [tmp1][upperright] overlay=shortest=1:x=320 [tmp2]; [tmp2][lowerleft] overlay=shortest=1:y=240 [tmp3]; [tmp3][lowerright] overlay=shortest=1:x=320:y=240\u0026quot; -c:v libx264 output.mkv\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="наложение-аудио"\u003eНаложение аудио \u003ca href="#%d0%bd%d0%b0%d0%bb%d0%be%d0%b6%d0%b5%d0%bd%d0%b8%d0%b5-%d0%b0%d1%83%d0%b4%d0%b8%d0%be" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eОпция \u003ccode\u003eshortest\u003c/code\u003e — если аудио и видео на входе имеют разную длительность по времени, то результат будет иметь длительность наименьшего компонента.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003effmpeg -i видео.mp4 -i аудио.wav -c:v copy -c:a copy -shortest результат.mkv\n\nmencoder -audiofile аудио.wav видео.mp4 -o результат.mp4 -ovc copy -oac copy\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eНаложение второй аудио дорожки и понижениие громкости.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003effmpeg -i video4.mp4 -i wave.mp3 -filter_complex \u0026quot;[0:a]volume=1[a1];[1:a]volume=0.2[a2];[a1][a2]amerge=inputs=2\u0026quot; -c:v copy -c:a libmp3lame -shortest out_mp3.mp4\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЗацикливаем 2 аудио дорожку и понижаем звук, т.к. применили \u003ccode\u003e-stream_loop\u003c/code\u003e, то и \u003ccode\u003e-shortest\u003c/code\u003e нужен.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003effmpeg -i video4.mp4 -stream_loop -1 -i bla.mp3 -filter_complex \u0026quot;[0:a]volume=1[a1];[1:a]volume=0.04[a2];[a1][a2]amerge=inputs=2\u0026quot; -c:v copy -c:a libmp3lame -shortest out_mp3.mp4\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЕсли видео без звука.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003effmpeg -i video4.mp4 -stream_loop -1 -i bla.mp3 -filter_complex \u0026quot;[1:a]volume=0.8[a]\u0026quot; -map 0:v -map \u0026quot;[a]\u0026quot; -c:v copy -c:a aac -shortest out.mp4\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПонижаем звук аудио.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003effmpeg -i video.mp4 -stream_loop -1 -i bla.mp3 -filter:a \u0026quot;volume=0.8\u0026quot; -shortest res.mp4\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="конвертировать-видео-в-gif"\u003eКонвертировать видео в gif \u003ca href="#%d0%ba%d0%be%d0%bd%d0%b2%d0%b5%d1%80%d1%82%d0%b8%d1%80%d0%be%d0%b2%d0%b0%d1%82%d1%8c-%d0%b2%d0%b8%d0%b4%d0%b5%d0%be-%d0%b2-gif" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eС 5 сек. на 2 сек.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003effmpeg -y -ss 5 -t 2 -i ~/.wall/bg.mp4 -filter_complex \u0026quot;fps=10,scale=1366👎flags=lanczos[x];[x]split[x1][x2]; [x1]palettegen[p];[x2][p]paletteuse\u0026quot; ~/.wall/out.gif\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИзменить размер gif.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003econvert -resize 1366 -quality 10 .wall/wall.gif .wall/out.gif\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="stream"\u003eStream \u003ca href="#stream" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eLive Stream (3000kbps)\nrtmp://live.restream.io/live/key\nflv, libx264, b/rate 3000, mp3 128\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="kdenlive"\u003eKdenlive \u003ca href="#kdenlive" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eНастроить-Параметры проекта по умолчанию-HD 1080i 30fps.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eИли.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eНастроить-Параметры проекта по умолчанию-HD 1080p 60fps.\u003c/li\u003e\n\u003cli\u003eНастроить-Окружение-Потоков обработки - 2.\u003c/li\u003e\n\u003cli\u003eСборка. Generic, MP4 (H264/AAC).\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eУскоряем сборку на MP4 (H264/AAC). \u003ccode\u003eСборка-создать сценарий\u003c/code\u003e. Отредактировать скрипт. Изменить \u003ccode\u003epreset=faster\u003c/code\u003e на \u003ccode\u003epreset=ultrafast\u003c/code\u003e. Проверить скорость работы скрипта до и после.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003etime ./script001.sh\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eРазмер выходного файла.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003edu -h video.mp4\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eРезультат теста. (исходник video.mkv 1:21 2,5Mb).\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eHD 1080i 30fps MP4 (H264/AAC) - 7:46 4,2 Mb\u003c/li\u003e\n\u003cli\u003eHD 1080p 60fps MP4 (H264/AAC) faster - 14:22 5,6Mb\u003c/li\u003e\n\u003cli\u003eHD 1080p 30fps MP4 (H264/AAC) faster - 8:24 4,1Mb\u003c/li\u003e\n\u003cli\u003e+HD 1080p 30fps MP4 (H264/AAC) ultrafast - 6:34 8.2Mb\u003c/li\u003e\n\u003cli\u003eHD 1080p 30fps webm - 7:58 9.9Mb\u003c/li\u003e\n\u003c/ul\u003e\n'},{id:27,href:"https://ctlos.github.io/wiki/install/trouble/",title:"Решение проблем",description:null,content:'\u003cp\u003eНекоторые решенные проблемы описаны на форуме \u003ca href="https://forum.ctlos.ru/c/tehnicheskie-problemy-i-pomoshh/5" target="_blank" rel="noopener"\u003eforum.ctlos.ru\u003c/a\u003e. Нашли проблему, или есть идеи, как что-то улучшить, создайте тему на форуме(ссылка выше), либо запрос на \u003ca href="https://github.com/ctlos/ctlosiso/issues" target="_blank" rel="noopener"\u003egithub\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="grub"\u003eGrub \u003ca href="#grub" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eКак добавить в загрузчик grub другие os?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S os-prober\nsudo sed -i \'/GRUB_DISABLE_OS_PROBER/s/^#//g\' /etc/default/grub\n# или раскомментить строку GRUB_DISABLE_OS_PROBER\nsudo nano /etc/default/grub\nsudo grub-mkconfig -o /boot/grub/grub.cfg\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ca href="/wiki/other/grub-uefi/"\u003eGrub efi\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="сброс-root-пароля"\u003eСброс root пароля \u003ca href="#%d1%81%d0%b1%d1%80%d0%be%d1%81-root-%d0%bf%d0%b0%d1%80%d0%be%d0%bb%d1%8f" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href="https://wiki.archlinux.org/index.php/Reset_root_password_%28%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9%29" target="_blank" rel="noopener"\u003eReset_root_password\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="thunar"\u003eThunar \u003ca href="#thunar" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eГенерация пунктов в левом меню.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003exdg-user-dirs-gtk-update\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="контекстное-меню-thunar"\u003eКонтекстное меню thunar \u003ca href="#%d0%ba%d0%be%d0%bd%d1%82%d0%b5%d0%ba%d1%81%d1%82%d0%bd%d0%be%d0%b5-%d0%bc%d0%b5%d0%bd%d1%8e-thunar" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eДобавляем дополнительные пункты для создания файлов.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eXDG_TEMPLATES_DIR=$(xdg-user-dir TEMPLATES)\ncd \u0026quot;$XDG_TEMPLATES_DIR\u0026quot;\ntouch \'New Text File.txt\' \u0026amp;\u0026amp; touch \'New Word File.doc\' \u0026amp;\u0026amp; touch \'New Excel Spreadsheet.xls\'\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="размер-tmp"\u003eРазмер tmp \u003ca href="#%d1%80%d0%b0%d0%b7%d0%bc%d0%b5%d1%80-tmp" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eИногда при установки больших прог. из Aur возникает ошибка (Недостаточно места). Смотрим, сколько места.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003edf -h /tmp\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИзменяем размер.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount -o remount,size=4G /tmp\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eТеперь стало 4G.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003edf -h /tmp\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="ассоциации-файлов"\u003eАссоциации файлов \u003ca href="#%d0%b0%d1%81%d1%81%d0%be%d1%86%d0%b8%d0%b0%d1%86%d0%b8%d0%b8-%d1%84%d0%b0%d0%b9%d0%bb%d0%be%d0%b2" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eЭто нужно, если у вас открывается файл, или каталог не в той программе. Например, директория в музыкальном плеере.\u003c/p\u003e\n\u003cp\u003eРаспознаем файл.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003exdg-mime query filetype wallpaper.jpg\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПроверяем дефолтные настройки.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003exdg-mime query default inode/directory\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПереопределяем.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003exdg-mime default org.gnome.Nautilus.desktop inode/directory\n# или thunar\nxdg-mime default thunar.desktop inode/directory\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЕще пример.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003exdg-mime default vlc.desktop video/mp4\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="win-кодировка"\u003eWin кодировка \u003ca href="#win-%d0%ba%d0%be%d0%b4%d0%b8%d1%80%d0%be%d0%b2%d0%ba%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eУстановить \u003ccode\u003egedit\u003c/code\u003e, выполнить в терминале команду ниже, радуемся.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egsettings set org.gnome.gedit.preferences.encodings candidate-encodings \u0026quot;[\'UTF-8\', \'WINDOWS-1251\', \'KOI8-R\', \'CURRENT\', \'ISO-8859-15\', \'UTF-16\']\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="сброс-времени"\u003eСброс времени \u003ca href="#%d1%81%d0%b1%d1%80%d0%be%d1%81-%d0%b2%d1%80%d0%b5%d0%bc%d0%b5%d0%bd%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eСоздать и применить рег.файл с таким содержанием.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eWindows Registry Editor Version 5.00\n\n[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation]\n\u0026quot;RealTimeIsUniversal\u0026quot;=dword:00000001\n\u003c/code\u003e\u003c/pre\u003e\n'},{id:28,href:"https://ctlos.github.io/wiki/packages/ssh/",title:"Установка и настройка ssh",description:"Мануал по настройке ssh в Linux.",content:'\u003ch2 id="установка"\u003eУстановка \u003ca href="#%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eПакет должен быть установлен как на клиенте, так и сервере.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S openssh\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eНа сервере запустить и включить сервис в автостарт.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl start sshd\nsudo systemctl enable sshd\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="настройка-на-клиенте"\u003eНастройка на клиенте \u003ca href="#%d0%bd%d0%b0%d1%81%d1%82%d1%80%d0%be%d0%b9%d0%ba%d0%b0-%d0%bd%d0%b0-%d0%ba%d0%bb%d0%b8%d0%b5%d0%bd%d1%82%d0%b5" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003ch3 id="генерация-ключей"\u003eГенерация ключей \u003ca href="#%d0%b3%d0%b5%d0%bd%d0%b5%d1%80%d0%b0%d1%86%d0%b8%d1%8f-%d0%ba%d0%bb%d1%8e%d1%87%d0%b5%d0%b9" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003essh-keygen -t rsa -b 4096 -C \u0026quot;ctlos@protonmail.com\u0026quot;\n# или так\nssh-keygen -t rsa -q -N \'\' -f ~/.ssh/id_rsa\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eКлючи упадут в \u003ccode\u003e~/.ssh\u003c/code\u003e.\u003c/p\u003e\n\u003ch3 id="отправка-ключа-на-сервер"\u003eОтправка ключа на сервер \u003ca href="#%d0%be%d1%82%d0%bf%d1%80%d0%b0%d0%b2%d0%ba%d0%b0-%d0%ba%d0%bb%d1%8e%d1%87%d0%b0-%d0%bd%d0%b0-%d1%81%d0%b5%d1%80%d0%b2%d0%b5%d1%80" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003essh-copy-id username@remote_host\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИли так. Копируем ключ на сервер.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecat .ssh/id_rsa.pub | ssh bibo@192.168.1.35 \'mkdir -p ~/.ssh \u0026amp;\u0026amp; cat \u0026gt;\u0026gt; .ssh/authorized_keys\'\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="настройка-конфига"\u003eНастройка конфига \u003ca href="#%d0%bd%d0%b0%d1%81%d1%82%d1%80%d0%be%d0%b9%d0%ba%d0%b0-%d0%ba%d0%be%d0%bd%d1%84%d0%b8%d0%b3%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enano ~/.ssh/config\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПодгоняем конфиг под конкретный сервер. Комментарии не учитываются \u003ccode\u003e#\u003c/code\u003e. Хостов может быть сколько угодно, какждый - сервер.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eHost *\n    #ForwardAgent yes\n    #ForwardX11 yes\n    #ForwardX11Trusted yes\n\nHost bibo\n    ForwardAgent yes\n    ForwardX11 yes\n    ForwardX11Trusted yes\n    HostName 198.157.18.18\n    Port 223\n    User bibo\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eБлок с \u003ccode\u003eHost *\u003c/code\u003e задает глобальные настройки для всех серверов.\u003c/p\u003e\n\u003cp\u003eДанный блок с \u003ccode\u003eHost bibo\u003c/code\u003e конкретно под сервер.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eHost: может быть любой, для вашего удобства.\u003c/li\u003e\n\u003cli\u003eСтроки c \u003ccode\u003eForward\u003c/code\u003e: включаем X11Forwarding.\u003c/li\u003e\n\u003cli\u003eДальше ip, port, user (понятно).\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="настройка-на-сервере"\u003eНастройка на сервере \u003ca href="#%d0%bd%d0%b0%d1%81%d1%82%d1%80%d0%be%d0%b9%d0%ba%d0%b0-%d0%bd%d0%b0-%d1%81%d0%b5%d1%80%d0%b2%d0%b5%d1%80%d0%b5" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eФайл конфигурации тут: \u003ccode\u003e/etc/ssh/sshd_config\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eЗапрещаем авторизацию от \u003ccode\u003eroot\u003c/code\u003e, можно не править, по умолчанию так.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ePermitRootLogin no\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЕсли правим, то укажем кому можно.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eAllowUsers bibo boba\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОтключение авторизации по паролю.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ePasswordAuthentication no\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eУкажем в конфиге файл авторизации.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eAuthorizedKeysFile  .ssh/authorized_keys\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПрава как на клиенте так и на сервере.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003echmod 700 ~/.ssh\nchmod 600 ~/.ssh/*\nchown -R $USER ~/.ssh\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПерезапустить сервис.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl restart sshd\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="x11forwarding-на-сервере"\u003eX11Forwarding на сервере \u003ca href="#x11forwarding-%d0%bd%d0%b0-%d1%81%d0%b5%d1%80%d0%b2%d0%b5%d1%80%d0%b5" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eСнять комментарии и привести строки в вид, в файле \u003ccode\u003e/etc/ssh/sshd_config\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eX11Forwarding yes\nX11DisplayOffset 10\nX11UseLocalhost no\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПерезапустить сервис.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl restart sshd\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПри запуске через sudo, если ошибка \u003ccode\u003ecannot open display: xxx-xx:10.0\u003c/code\u003e, то скопировать файл авторизации в \u003ccode\u003e/root\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo cp -r ~/user_name/.Xauthority /root\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="проброс-портов"\u003eПроброс портов \u003ca href="#%d0%bf%d1%80%d0%be%d0%b1%d1%80%d0%be%d1%81-%d0%bf%d0%be%d1%80%d1%82%d0%be%d0%b2" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eЧерез ssh можно пробрасывать порты в обе стороны и даже строить связки, мосты. См. \u003ca href="https://unix.stackexchange.com/a/118650" target="_blank" rel="noopener"\u003ehttps://unix.stackexchange.com/a/118650\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eNpm пакет для проброса портов \u003ca href="https://theboroer.github.io/localtunnel-www/" target="_blank" rel="noopener"\u003elocaltunnel\u003c/a\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e199.199.199.199\u003c/code\u003e IP адрес сервера в интернете\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e127.0.0.1\u003c/code\u003e IP локальной машины, localhost\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eПросмотр активных портов, утилита ss в пакете \u003ccode\u003eyay -S iproute2\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ess -tulpn\n\nss -h\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="проброс-с-сервера"\u003eПроброс с сервера \u003ca href="#%d0%bf%d1%80%d0%be%d0%b1%d1%80%d0%be%d1%81-%d1%81-%d1%81%d0%b5%d1%80%d0%b2%d0%b5%d1%80%d0%b0" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003essh -N -L 5001:127.0.0.1:5000 root@199.199.199.199\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e5000\u003c/code\u003e: порт на сервере который мы хотим видеть в локальной сети.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e5001\u003c/code\u003e: локальный порт который пришел с сервера.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-N\u003c/code\u003e говорит повесить в фоновом режиме, завершение соединения по ctrl+c.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="проброс-с-локалки"\u003eПроброс с локалки \u003ca href="#%d0%bf%d1%80%d0%be%d0%b1%d1%80%d0%be%d1%81-%d1%81-%d0%bb%d0%be%d0%ba%d0%b0%d0%bb%d0%ba%d0%b8" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eСначала пробрасываем на сервер.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003essh -f -N -R 2222:127.0.0.1:22 root@199.199.199.199\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e22\u003c/code\u003e: локальный порт который пришел на сервер.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e2222\u003c/code\u003e: порт на сервере который можно использовать для подключения к машине, которая может быть за NAT.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-N\u003c/code\u003e говорит повесить в фоновом режиме, завершение соединения по ctrl+c.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-f\u003c/code\u003e создает стабильное соединение и завершает комманду, опустите этот флаг, если хотите держать в фоне это соединение.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eТеперь подключаемся к серверу.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003essh root@199.199.199.199\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИ с сервера уже идем на машину порт которой пробросили. В данном примере 22 порт, соответственно на машине к которой хочем подключиться должен быть включен sshd с разрешением к подключению.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003essh -p 2222 username@127.0.0.1\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003eЕсли вы собираетесь пробросить на сервер отличный от ssh порт, например 8080, то обязательно пропишите в конфиге sshd \u003ccode\u003eGatewayPorts yes\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo nano /etc/ssh/sshd_config\n\nGatewayPorts yes\n\nsudo systemctl restart sshd\n\u003c/code\u003e\u003c/pre\u003e\n'},{id:29,href:"https://ctlos.github.io/wiki/btrfs/",title:"Btrfs",description:"Prologue Doks.",content:""},{id:30,href:"https://ctlos.github.io/wiki/other/notes/",title:"Заметки",description:null,content:'\u003ch2 id="загрузка-и-запись-iso"\u003eЗагрузка и запись iso \u003ca href="#%d0%b7%d0%b0%d0%b3%d1%80%d1%83%d0%b7%d0%ba%d0%b0-%d0%b8-%d0%b7%d0%b0%d0%bf%d0%b8%d1%81%d1%8c-iso" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href="https://github.com/ctlos/ctlosiso/releases" target="_blank" rel="noopener"\u003ehttps://github.com/ctlos/ctlosiso/releases\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eПрописать полную ссылку к файлу.\u003c/p\u003e\n\u003ch3 id="wget"\u003eWget \u003ca href="#wget" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo wget -O - https://github.com/ctlos/ctlosiso/releases/download/v1.0.0/*.iso \u0026gt; /dev/sdX \u0026amp;\u0026amp; sync\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="curl"\u003eCurl \u003ca href="#curl" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo curl -L https://github.com/ctlos/ctlosiso/releases/download/v1.0.0/*.iso \u0026gt; /dev/sdX \u0026amp;\u0026amp; sync\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="curl-и-dd"\u003eCurl и dd \u003ca href="#curl-%d0%b8-dd" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo curl -L https://github.com/ctlos/ctlosiso/releases/download/v1.0.0/*.iso | dd bs=4M of=/dev/sdX status=progress \u0026amp;\u0026amp; sync\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="установка-без-носителя"\u003eУстановка без носителя \u003ca href="#%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0-%d0%b1%d0%b5%d0%b7-%d0%bd%d0%be%d1%81%d0%b8%d1%82%d0%b5%d0%bb%d1%8f" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="https://wiki.archlinux.org/index.php/Install_from_existing_Linux" target="_blank" rel="noopener"\u003ewiki.archlinux.org/index.php/Install_from_existing_Linux\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://www.youtube.com/watch?v=ZKupJjG8AW0\u0026amp;t=335s" target="_blank" rel="noopener"\u003eVideo\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="настройка-sudo"\u003eНастройка sudo \u003ca href="#%d0%bd%d0%b0%d1%81%d1%82%d1%80%d0%be%d0%b9%d0%ba%d0%b0-sudo" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eEDITOR=nano visudo\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДать пользователю привилегии суперпользователя, когда он вводит sudo.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emalody ALL=(ALL) ALL\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИли группе.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e%wheel ALL=(ALL) ALL\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eНе спрашивать пароль у пользователя.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eDefaults:malody      !authenticate\n\u003c/code\u003e\u003c/pre\u003e\n'},{id:31,href:"https://ctlos.github.io/wiki/install/recomend/",title:"Рекомендации",description:null,content:'\u003ch2 id="linux-zen"\u003eLinux-zen \u003ca href="#linux-zen" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eУстановка другого ядра, \u003ca href="https://wiki.archlinux.org/index.php/Kernels" target="_blank" rel="noopener"\u003eKernels\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eЕсли у вас карта \u003ca href="https://wiki.archlinux.org/index.php/NVIDIA_%28%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9%29" target="_blank" rel="noopener"\u003envidia\u003c/a\u003e, то драйвер нужно заменить.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S linux-zen linux-zen-headers\nsudo mkinitcpio -p linux-zen\nsudo grub-mkconfig -o /boot/grub/grub.cfg\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="журнал-systemd"\u003eЖурнал systemd \u003ca href="#%d0%b6%d1%83%d1%80%d0%bd%d0%b0%d0%bb-systemd" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eУменьшение размера журнала логов Systemd.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo nano /etc/systemd/journald.conf\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eРаскомментировать и изменить строку.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eSystemMaxUse=50M\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПерезапустите сервис.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl restart systemd-journald.service\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="disable-man-db"\u003eDisable man-db \u003ca href="#disable-man-db" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eОтключаем переодическое увеличение загрузки из-за \u003ccode\u003eman-db.service\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl disable man-db.service\nsudo systemctl disable man-db.timer\n\u003c/code\u003e\u003c/pre\u003e\n'},{id:32,href:"https://ctlos.github.io/wiki/other/",title:"Прочее",description:"Prologue Doks.",content:""},{id:33,href:"https://ctlos.github.io/wiki/",title:"Ctlos Linux Wiki",description:"Рекомендации, руководства, заметки.",content:'\u003cblockquote\u003e\n\u003cp\u003eБлагодарим за интерес к \u003cstrong\u003eCtlos Linux\u003c/strong\u003e, надеемся вас все устроит.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eCtlos Linux — базируется на Arch Linux, iso образ собран с помощью \u003ca href="https://gitlab.archlinux.org/archlinux/archiso" target="_blank" rel="noopener"\u003earchiso\u003c/a\u003e скриптов, полностью совместим с Arch Linux.\u003c/p\u003e\n\u003cp\u003eСобиралась данная система изначально исключительно для себя. Стандартное ПО, как и в большинстве дистрибутивов Linux.\u003c/p\u003e\n\u003cp\u003e\u003ca href="/get"\u003e\u003cimg class="img-fluid lazyload blur-up" sizes="100vw" src="https://img.shields.io/github/downloads/ctlos/ctlosiso/total.svg" data-src="https://img.shields.io/github/downloads/ctlos/ctlosiso/total.svg" alt="GitHub All Releases"\u003e\n\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="/get"\u003eСкачать Ctlos\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="/wiki/changelog"\u003eИстория изменений\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="/donat"\u003eПоддержать\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://github.com/ctlos" target="_blank" rel="noopener"\u003eИсходный код\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eДоступен только для x86–64(64-bit) архитектуры процессора.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eБудьте добры, поставьте \u003cstrong\u003eзвезду\u003c/strong\u003e на \u003ca href="https://github.com/ctlos/ctlosiso/stargazers" target="_blank" rel="noopener"\u003eGitHub ctlosiso repo\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://github.com/ctlos/ctlosiso/stargazers" target="_blank" rel="noopener"\u003e\u003cimg class="img-fluid lazyload blur-up" sizes="100vw" src="https://img.shields.io/github/stars/ctlos/ctlosiso?style=social\u0026amp;logo=github" data-src="https://img.shields.io/github/stars/ctlos/ctlosiso?style=social\u0026amp;logo=github" alt="GitHub All Releases"\u003e\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://forms.gle/qzAUa6R4fShf3xSw7" target="_blank" rel="noopener"\u003eПройдите небольшой опрос\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="статьи-о-ctlos"\u003eСтатьи о Ctlos \u003ca href="#%d1%81%d1%82%d0%b0%d1%82%d1%8c%d0%b8-%d0%be-ctlos" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="https://telegra.ph/Russkij-Arch-Linux-01-18" target="_blank" rel="noopener"\u003eРусский Arch Linux\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://vc.ru/dev/163811-russkiy-arch-linux-intervyu-s-sozdatelem-ctlos" target="_blank" rel="noopener"\u003eРусский Arch Linux: интервью с создателем CtlOS\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="в-чем-особенность-ctlos"\u003eВ чем особенность Ctlos \u003ca href="#%d0%b2-%d1%87%d0%b5%d0%bc-%d0%be%d1%81%d0%be%d0%b1%d0%b5%d0%bd%d0%bd%d0%be%d1%81%d1%82%d1%8c-ctlos" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eПоддержка русского языка.\u003c/li\u003e\n\u003cli\u003eГрафический инсталлятор — calamares.\u003c/li\u003e\n\u003cli\u003eМенеджер программ — pamac-aur.\u003c/li\u003e\n\u003cli\u003eНабор необходимых драйверов — видео, звук, сеть.\u003c/li\u003e\n\u003cli\u003eНастроенный внешний вид.\u003c/li\u003e\n\u003cli\u003eВключена поддержка Aur, пакетный менеджер yay.\u003c/li\u003e\n\u003cli\u003eНе перегружен софтом.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eВ чем смысл всех этих дистрибутивов?\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eСмысла нет, и в этом смысл. Люди могут делать с Gnu/Linux всё, что хотят и они это делают, в этом вся суть.\u003c/p\u003e\n\u003cp\u003eRichard Matthew Stallman\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eНе все должно иметь смысл, чтобы люди захотели это сделать.\u003c/p\u003e\n\u003ch2 id="ресурсы-ctlos"\u003eРесурсы Ctlos \u003ca href="#%d1%80%d0%b5%d1%81%d1%83%d1%80%d1%81%d1%8b-ctlos" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eЕсли вы обнаружите \u003cstrong\u003eкакие-либо проблемы\u003c/strong\u003e, пожалуйста, не стесняйтесь обращаться. Любые отзывы приветствуются.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="https://telegram.me/ctlos" target="_blank" rel="noopener"\u003eTelegram Chat\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://matrix.to/#/#ctlos:matrix.org" target="_blank" rel="noopener"\u003eMatrix Chat\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://discord.com/invite/m6uFRp4" target="_blank" rel="noopener"\u003eDiscord\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://vk.com/ctlos" target="_blank" rel="noopener"\u003eПаблик VK\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://forum.ctlos.ru" target="_blank" rel="noopener"\u003eForum Ctlos\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://status.ctlos.ru" target="_blank" rel="noopener"\u003eUptime\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://github.com/orgs/ctlos/projects/3" target="_blank" rel="noopener"\u003eДорожная карта\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://github.com/ctlos/ctlosiso/issues" target="_blank" rel="noopener"\u003eБаг трекер\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://github.com/ctlos/ctlos.github.io" target="_blank" rel="noopener"\u003eИсходный код сайта\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://youtube.com/channel/UCPCp_ZnMKEwYdnA_YfOZrZg?sub_confirmation=1" target="_blank" rel="noopener"\u003eYouTube канал автора\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="контакты"\u003eКонтакты \u003ca href="#%d0%ba%d0%be%d0%bd%d1%82%d0%b0%d0%ba%d1%82%d1%8b" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="https://telegram.me/cretm" target="_blank" rel="noopener"\u003eTelegram\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://keybase.io/cvc" target="_blank" rel="noopener"\u003eKeybase Proof\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="mailto:admin@ctlos.ru"\u003eadmin@ctlos.ru\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="автор"\u003eАвтор \u003ca href="#%d0%b0%d0%b2%d1%82%d0%be%d1%80" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cimg class="img-fluid mb-4 lazyload blur-up rounded-circle" data-sizes="auto" src="/images/contributors/creio.png" data-srcset="/images/contributors/creio.png" alt="creio" width="150px" \u003e\n  \n\n\u003cp\u003e\u003ca href="https://creio.ctlos.ru" target="_blank" rel="noopener"\u003e@creio\u003c/a\u003e — улыбок тебе, деривативный топор.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eNoname\u003c/code\u003e которого не будет на дистроватч.\u003c/p\u003e\n\u003c/blockquote\u003e\n'},{id:34,href:"https://ctlos.github.io/wiki/btrfs/btrfs-part2/",title:"Btrfs перенос, восстановление",description:null,content:'\u003ch2 id="перенос-на-раздел"\u003eПеренос на раздел \u003ca href="#%d0%bf%d0%b5%d1%80%d0%b5%d0%bd%d0%be%d1%81-%d0%bd%d0%b0-%d1%80%d0%b0%d0%b7%d0%b4%d0%b5%d0%bb" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman -S rsync btrfs-progs arch-install-scripts\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003elsblk\u003c/code\u003e - подсветить все разделы что бы определиться что монтировать.\u003c/p\u003e\n\u003cp\u003eПри необходимости разбить диск, флаг \u003ccode\u003e-z\u003c/code\u003e обнулить таблицу разделов.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecfdisk -z /dev/sda\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eМонтируем.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount /dev/sda6 /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздадим три подтома root, домашний каталог пользователя и подтом для хранения.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs subvolume create /mnt/@_root\nbtrfs subvolume create /mnt/@_home\nbtrfs subvolume create /mnt/@_snapshots\n\nbtrfs subvolume list /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eДля переноса смонтируйте резервную систему и перенесите ее.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkdir /mnt/dump\nmount /dev/sdb1 /mnt/dump\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ersync -cauvP --delete --delete-excluded --exclude={\u0026quot;/dev/*\u0026quot;,\u0026quot;/proc/*\u0026quot;,\u0026quot;/sys/*\u0026quot;,\u0026quot;/tmp/*\u0026quot;,\u0026quot;/run/*\u0026quot;,\u0026quot;/mnt/*\u0026quot;,\u0026quot;/media/*\u0026quot;,\u0026quot;/lost+found\u0026quot;,\u0026quot;/var/lib/pacman/sync/*\u0026quot;,\u0026quot;/var/cache/*\u0026quot;,\u0026quot;/var/tmp/*\u0026quot;,\u0026quot;/boot/*\u0026quot;,\u0026quot;/home/*\u0026quot;} /mnt/dump/@/* /mnt/@_root/\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ersync -cauvP --delete --delete-excluded --exclude={\u0026quot;/dev/*\u0026quot;,\u0026quot;/proc/*\u0026quot;,\u0026quot;/sys/*\u0026quot;,\u0026quot;/tmp/*\u0026quot;,\u0026quot;/run/*\u0026quot;,\u0026quot;/mnt/*\u0026quot;,\u0026quot;/media/*\u0026quot;,\u0026quot;/lost+found\u0026quot;,\u0026quot;/var/lib/pacman/sync/*\u0026quot;,\u0026quot;/var/cache/*\u0026quot;,\u0026quot;/var/tmp/*\u0026quot;,\u0026quot;/boot/*\u0026quot;,\u0026quot;/home/*\u0026quot;} /mnt/dump/@home/* /mnt/@_home/\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИ отмонтируем корень ФС.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eumount /mnt\nrm -rf /mnt/dump\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЧтобы монтировать подтом подобно обычному разделу диска, команде mount нужно указывать опцию subvol=PATH. PATH - путь относительно корня ФС. Монтируем корень. Сжатие zstd, или lzo.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount -o subvol=@,compress=zstd /dev/sda6 /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eКакие рекомендуемые варианты для установки на SD-карту, или медленный SSD-накопитель? В \u003ccode\u003e/etc/fstab\u003c/code\u003e См. https://wiki.debian.org/Btrfs.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e/dev/sdaX / btrfs x-systemd.device-timeout=0,noatime,compress=lzo,commit=0,ssd_spread,autodefrag 0 0\n\nUUID=\u0026lt;the_device_uuid\u0026gt; /mount/point/ btrfs noauto,compress=lzo,noatime,autodefrag 0 0\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздаём директорию и монтируем в неё наш будущий каталог пользователей, если boot раздел отдеольно, нужно его тоже смонтироват в \u003ccode\u003e/mnt/boot\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eЕсли нужно \u003ccode\u003emkdir /mnt/home\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount -o subvol=@home,compress=zstd /dev/sda6 /mnt/home\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЕсли нужно \u003ccode\u003emkdir /mnt/snapshots\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount -o subvol=@snapshots,compress=zstd /dev/sda6 /mnt/snapshots\n\nmount -t proc none /mnt/proc\nmount -t sysfs none /mnt/sys\nmount -o bind /dev /mnt/dev\n\ncp -L /etc/resolv.conf /mnt/etc\n\nswapon /dev/sda3\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eНачиная с ядра 5.0 можно создать swap-файл, swap-файл должен располагаться целиком на одном устройстве, создаваться с отключенным COW и сжатием.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003etruncate -s 0 /swapfile\nchattr +C /swapfile\nbtrfs property set /swapfile compression none\nfallocate /swapfile -l4g\nchmod 600 /swapfile\nmkswap /swapfile\nlsattr /swapfile\nswapon /swapfile\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eТеперь нужно проинициализировать систему. Редактируем FSTAB, или запускаем genfstab.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003erm /mnt/etc/fstab\ngenfstab -pU /mnt \u0026gt; /mnt/etc/fstab\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПереходим в нашу новую систему.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003echroot /mnt /bin/bash\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eГенерация initramfs с помощью mkinicpio.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkinitcpio -p linux\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eУстановить загрузчик GRUB2 и сконфигурировать его.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egrub-install /dev/sdХ\ngrub-mkconfig -o /boot/grub/grub.cfg\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003eexit\u003c/code\u003e или \u0026ldquo;Ctrl + D\u0026rdquo; выйти из chroot.\u003c/p\u003e\n\u003cp\u003eТеперь  нужно все размонтировать.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eumount /mnt/home\numount /mnt/snapshots\numount /mnt\nreeboot\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="снапшот-на-другой-раздел"\u003eСнапшот на другой раздел \u003ca href="#%d1%81%d0%bd%d0%b0%d0%bf%d1%88%d0%be%d1%82-%d0%bd%d0%b0-%d0%b4%d1%80%d1%83%d0%b3%d0%be%d0%b9-%d1%80%d0%b0%d0%b7%d0%b4%d0%b5%d0%bb" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="https://btrfs.wiki.kernel.org/index.php/Incremental_Backup" target="_blank" rel="noopener"\u003eIncremental_Backup\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://github.com/masc3d/btrfs-sxbackup" target="_blank" rel="noopener"\u003ebtrfs-sxbackup\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://github.com/YHNdnzj/btrfs-snapshot" target="_blank" rel="noopener"\u003ebtrfs-snapshot\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eМонтируем основной раздел.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkdir /mnt/arch\nmount /dev/sda6 /mnt/arch\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eМонтируем раздел/диск для сброса снапшота.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkdir /mnt/dump\nmount /dev/sda8 /mnt/dump\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eНужно создавать снапшоты, только для чтения(readonly), требует \u003ccode\u003esend\u003c/code\u003e. Для отправки на другие узлы.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eСбрасываем все из кэша на диск \u003ccode\u003esync\u003c/code\u003e, ВАЖНО.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs subvolume snapshot -r /mnt/arch/@ /mnt/arch/@_BACKUP\nsync\nbtrfs subvolume snapshot -r /mnt/arch/@home /mnt/arch/@home_BACKUP\nsync\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПереносим снапшоты. Можно send в файл \u003ccode\u003ebtrfs send /mnt/arch/@_BACKUP -f /dump.sn\u003c/code\u003e, receive из файла \u003ccode\u003ebtrfs receive /mnt/dump/ -f /dump.sn\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs send /mnt/arch/@_BACKUP | btrfs receive /mnt/dump/\nbtrfs send /mnt/arch/@home_BACKUP | btrfs receive /mnt/dump/\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИнкрементальные readonly снимки.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs subvolume snapshot -r /mnt/arch/@ /mnt/arch/@_BACKUP_new\nsync\nbtrfs subvolume snapshot -r /mnt/arch/@home /mnt/arch/@home_BACKUP_new\nsync\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eСоздаём разность между снимками.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs send -p /mnt/arch/@_BACKUP /mnt/arch/@_BACKUP_new | btrfs receive /mnt/dump/\nbtrfs send -p /mnt/arch/@home_BACKUP /mnt/arch/@home_BACKUP_new | btrfs receive /mnt/dump/\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПросмотрим листинг.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs subvolume list /mnt/dump\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="отправка-по-ssh"\u003eОтправка по ssh \u003ca href="#%d0%be%d1%82%d0%bf%d1%80%d0%b0%d0%b2%d0%ba%d0%b0-%d0%bf%d0%be-ssh" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eЛокально: генерируем ключи, создаём \u003ccode\u003e~/.ssh/config\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# генерация пары ключий, публичный(отправляем на сервер)\n# id_rsa.pub\nssh-keygen -t rsa -b 4096 -C \u0026quot;lol@gmail.com\u0026quot;\n\n# nano ~/.ssh/config\nHost office\n    HostName 192.168.100.51\n    Port 22\n    User test\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ePasswordAuthentication yes                 # на сервере /etc/ssh/sshd_config\nsystemctl restart sshd\nssh-copy-id -i ~/.ssh/id_rsa.pub office    # отправка ключа на сервер\n# на сервере /etc/ssh/sshd_config\nPermitRootLogin no\nPasswordAuthentication no                  # отключим доступ по паролю, всем.\nPubkeyAuthentication yes\nAuthorizedKeysFile .ssh/authorized_keys\nsystemctl restart sshd\nsystemctl enable sshd\n\nbtrfs send /mnt/arch/@_BACKUP | ssh office \u0026quot;btrfs receive /mnt/backups\u0026quot;\n# или\nbtrfs send /mnt/arch/@_BACKUP | ssh -p 22 test@192.168.100.51 \u0026quot;btrfs receive /mnt/backups\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПример скрипта - инкрементальный, взято с (ubuntu.ru/wiki).\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e#!/bin/bash\n# точки монтирования\nsrc=$(mktemp -d \u0026quot;${TMPDIR:-/tmp/}$(basename 0).XXXXXXXXXXXX\u0026quot;)\ndst=$(mktemp -d \u0026quot;${TMPDIR:-/tmp/}$(basename 0).XXXXXXXXXXXX\u0026quot;)\n#монтируем\nmount /dev/sda2 $src\nmount /dev/sdb2 $dst\nif [ -e $src/root_BCKP ]\nthen # первый запуск полный бекап\n  # Создаем снимок read-only\n  btrfs subvolume snapshot -r $src/@ $src/root_BCKP\n  sync\n  # переносим\n  btrfs send $src/root_BCKP | btrfs receive $dst/\nelse # повторный запуск, инкрементальный\n  # Переименовываем\n  mv $src/root_BCKP $src/root_BCKP_prev\n  mv $dst/root_BCKP $dst/root_BCKP_prev\n  # Создаем текущий\n  btrfs subvolume snapshot -r $src/@ $src/root_BACKUP\n  sync\n  # инкрементальный бекап\n  btrfs send -p $src/root_BCKP_prev $src/root_BACKUP | btrfs receive $dst/\nfi\n# В $dst/root_BACKUP копия корня.\numount $src\numount $dst\n# Удаляем точки монтирования\nrmdir $src\nrmdir $dst\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003eВсё это работает и в обратном порядке.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eУдаляем или переименовываем \u003ccode\u003emv\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs subvolume delete /mnt/dump/@_BACKUP\nbtrfs subvolume delete /mnt/dump/@home_BACKUP\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПереименовываем новые snapshot(ы).\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emv /mnt/dump/@_BACKUP_new /mnt/dump/@\nmv /mnt/dump/@home_BACKUP_new /mnt/dump/@home\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003eСвойства. Сейчас они в ro - read-only(только чтение), изменим на rw - read-write(чтение-завись). Значения изменяются так: \u003ccode\u003ero true\u003c/code\u003e, \u003ccode\u003ero false\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs property get /mnt/dump/@        # посмотр свойств\n\nbtrfs property set /mnt/dump/@ ro false\nbtrfs property set /mnt/dump/@home ro false\n\nbtrfs subvolume show /mnt/dump/@      # информация\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eУдаляем, если нужно.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebtrfs subvolume delete /mnt/arch/@_BACKUP\nbtrfs subvolume delete /mnt/arch/@home_BACKUP\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eОтмонтируем.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eumount /mnt/arch\numount /mnt/dump\n\nrmdir /mnt/{arch,dump}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="восстановление"\u003eВосстановление \u003ca href="#%d0%b2%d0%be%d1%81%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%bb%d0%b5%d0%bd%d0%b8%d0%b5" class="anchor" aria-hidden="true"\u003e#\u003c/a\u003e\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eВосстановление, как и выше, грузимся с live-usb, или с другой системы. Монтируем раздел для восстановления, поврежденный и раздел с backup, восстанавливаем снапшоты.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eМонтируем файловую систему, для пересоздания fstab и инициализации.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount -o subvol=@,compress=zstd /dev/sda8 /mnt\nls /mnt\nmount -o subvol=@home,compress=zstd /dev/sda8 /mnt/home\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eЕсли boot раздел отдеольно, то нужно его тоже смонтироват в /mnt/boot и все другие subvolume.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emount /dev/sda2 /mnt/boot\n\nmount -t proc none /mnt/proc\nmount -t sysfs none /mnt/sys\nmount -o bind /dev /mnt/dev\n\ncp -L /etc/resolv.conf /mnt/etc\n\nswapon /dev/sda3\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eРедактируем FSTAB, или запускаем genfstab.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003erm /mnt/etc/fstab\ngenfstab -pU /mnt \u0026gt; /mnt/etc/fstab\n\nnano /mnt/etc/fstab\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПереходим в нашу новую систему.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003echroot /mnt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИли zsh.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003echroot /mnt /bin/zsh\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eПерегенерироваь.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkinitcpio -p linux\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eУстановить загрузчик GRUB2 и сконфигурировать его.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egrub-install /dev/sdХ\ngrub-mkconfig -o /boot/grub/grub.cfg\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eИнициализируем ключи и обновим, если требуется.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epacman-key --init \u0026amp;\u0026amp; pacman-key --populate \u0026amp;\u0026amp; pacman-key --refresh-keys \u0026amp;\u0026amp; pacman -Syy\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003eexit\u003c/code\u003e или \u0026ldquo;Ctrl + D\u0026rdquo; выйти из chroot.\u003c/p\u003e\n\u003cp\u003eТеперь  нужно все размонтировать.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eumount -R /mnt\nreeboot\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003eБольше разжёвано на \u003ca href="https://help.ubuntu.ru/wiki/btrfs" target="_blank" rel="noopener"\u003eubuntu.ru/wiki\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n'}];a.add({id:0,href:"/wiki/install/",title:"Начало",description:"Prologue Doks.",content:""}).add({id:1,href:"/wiki/btrfs/btrfs-part1/",title:"Btrfs установка и использование",description:"Btrfs установка # Установите пакет пользовательских утилит.\npacman -S btrfs-progs arch-install-scripts  lsblk - подсветить все разделы чтобы определиться, что монтировать.\n# разбить диск, -z говорит обнулить таблицу разделов cfdisk -z /dev/sda  Так как Btrfs не может содержать swap-файл, необходимо заранее позаботиться о разделе с подкачкой, если он вам нужен.\nmkswap /dev/sda2  Создаём файловую систему на разделе. Для разделов от 1ГБ и меньше, чтобы более эффективно использовать пространство, рекомендуется передать ключ -M к параметрам mkfs.",content:"Btrfs установка # Установите пакет пользовательских утилит.\npacman -S btrfs-progs arch-install-scripts  lsblk - подсветить все разделы чтобы определиться, что монтировать.\n# разбить диск, -z говорит обнулить таблицу разделов cfdisk -z /dev/sda  Так как Btrfs не может содержать swap-файл, необходимо заранее позаботиться о разделе с подкачкой, если он вам нужен.\nmkswap /dev/sda2  Создаём файловую систему на разделе. Для разделов от 1ГБ и меньше, чтобы более эффективно использовать пространство, рекомендуется передать ключ -M к параметрам mkfs.btrfs.\nПри желании можно задать лэйбл ключом -L.\nmkfs.btrfs /dev/sda\u0026lt;цифра\u0026gt; mkfs.btrfs -L \u0026quot;root\u0026quot; /dev/sda\u0026lt;цифра\u0026gt;  Теперь монтируем.\nmount /dev/sdb1 /mnt  Затем создадим два подтома под корень и домашние каталоги пользователей.\nbtrfs subvolume create /mnt/@ btrfs subvolume create /mnt/@home  Просмотр субволумов.\nbtrfs subvolume list /mnt  Отмонтируем корень ФС.\numount /mnt  Для того, чтобы монтировать подтом подобно обычному разделу диска, команде mount нужно указывать опцию subvol.\nМонтируем корень. Сжатие zstd, или lzo.\nmount -o subvol=@,compress=zstd /dev/sdb1 /mnt  Создаём директорию и монтируем в неё наш будущий каталог пользователей.\nmkdir /mnt/home mount -o subvol=@home,compress=zstd /dev/sdb1 /mnt/home  Дальше действуем по вики, т.е. выбираем зеркала и ставим базовую систему. При генерации initramfs mkinitcpio будет ругаться на отсутствие fsck.btrfs - это нормальное явление. Уберём этот хук fsck из конфига, т.к. для Btrfs он не требуется.\nnano /etc/mkinitcpio.conf  Вот данная строка в файле.\nHOOKS=\u0026quot;base udev autodetect modconf block filesystems keyboard\u0026quot;  И пересоздадим initramfs.\nmkinitcpio -p linux  И ещё момент по поводу загрузчика, не знаю как другие, а grub точно умеет грузиться с Btrfs, так что выбрать лучше именно его. Так же не забудьте установить пакет btrfs-progs и позаботиться о бэкапах.\nИспользование btrfs # Монтируем корень ФС.\nmount /dev/sdb1 /mnt  Создавать снапшоты.\nbtrfs subvolume snapshot /mnt/@ /mnt/@_bac btrfs subvolume snapshot /mnt/@home /mnt/@home_bac btrfs subvolume list /mnt  Каталоги абсолютно идентичны, и пока мы не начнём изменять файлы, снимки места не занимают.\nУдаление.\nbtrfs subvolume delete /mnt/@  Откат: грузимся с live CD, монтируем корень ФС и переименовываем подтома. Так же подтома можно переименовать прямо в рабочей системе, если загрузка удачна.\nmount /dev/sdb1 /mnt mv /mnt/@ /mnt/@_bad mv /mnt/@_bac /mnt/@ mv /mnt/@home /mnt/@home_bad mv /mnt/@home_bac /mnt/@home  Либо грузимся как обычно, а в меню grub указываем подтом с бэкапом rootflags=subvol=backup.\nКопирование при записи (CoW). Если использовать команду cp с ключом --reflink=auto, то копия файла не будет занимать место на диске. И впоследствии, допустим, при изменении скопированного файла, записываться на диск будут только изменённые блоки.\n\u0026ldquo;Онлайн\u0026rdquo; - проверка ФС. При которой осуществляется чтение всех данных/метаданных с перепроверкой контрольных сумм, при наличии ошибок обнаружение их и исправление по возможности.\nbtrfs scrub start -B /  Если опустить ключ -B, процесс уйдёт в фон, и о ходе выполнения можно будет узнать командой.\nbtrfs scrub status /  Пример вывода.\nscrub status for 56edc366-a153-4eee-b2a6-471b7066b93d scrub started at Sat Dec 14 06:37:19 2013 and finished after 3242 seconds total bytes scrubbed: 222.45GB with 0 errors  Рекомендуется проводить проверку регулярно (еженедельно). \u0026ldquo;Оффлайн\u0026rdquo; - проверка ФС (на отмонтированном разделе). При отсутствии ошибок утилита возвратит 0.\nbtrfs check /dev/sda  Установка из существующей системы или с live usb # pacman -S btrfs-progs arch-install-scripts  lsblk - подсветить все разделы что бы определиться что монтировать.\nТак как Btrfs не может содержать swap-файл, необходимо заранее позаботиться о разделе с подкачкой, если он вам нужен.\nmkswap /dev/sda2  Внимание! это отформатирует весь ваш диск, с потерей данных! В данном примере установка идет на весь диск, а не разделы, если вам нужен swap учтите этот момент.\nmkfs.btrfs -f -L WD /dev/sdb  Монтируем.\nmount /dev/sdb /mnt  Создадим два подтома под root @ и домашний каталог пользователя @home.\nbtrfs subvolume create /mnt/@ btrfs subvolume create /mnt/@home  И отмонтируем корень ФС.\numount /mnt  Монтируем корень.\nmount -o subvol=@,compress=zstd /dev/sdb /mnt  Создаём директорию и монтируем в неё наш будущий каталог пользователей.\nmkdir /mnt/home mount -o subvol=@home,compress=zstd /dev/sdb /mnt/home  Устанавливаем базовые пакеты.\npacstrap /mnt base base-devel linux linux-headers xorg-xinit xorg-server grub zsh mc nano netctl wpa_supplicant dialog dhcpcd btrfs-progs  Создаём fstab.\ngenfstab -pU /mnt \u0026gt;\u0026gt; /mnt/etc/fstab  Проверяем.\ncat /mnt/etc/fstab  Создаем директорию и монтируем boot, если нужно.\nmount -t proc none /mnt/proc mount -t sysfs none /mnt/sys mount -o bind /dev /mnt/dev cp -L /etc/resolv.conf /mnt/etc swapon /dev/sda2  Начиная с ядра 5.0 можно создать swap-файл, swap-файл должен располагаться целиком на одном устройстве, создаваться с отключенным COW и сжатием.\ntruncate -s 0 /swapfile chattr +C /swapfile btrfs property set /swapfile compression none fallocate /swapfile -l4g chmod 600 /swapfile mkswap /swapfile lsattr /swapfile swapon /swapfile  Проверим.\nbtrfs subvolume list /mnt  Входим в систему.\nchroot /mnt /bin/zsh  Назначаем хост.\necho ctlos \u0026gt; /etc/hostname  Выбор часового пояса.\nln -sf /usr/share/zoneinfo/UTC /etc/localtime hwclock --systohc --utc timedatectl set-ntp true # или timedatectl set-timezone Europe/Moscow  Выберем локаль для системы.\nsed -i \u0026quot;s/#\\(en_US\\.UTF-8\\)/\\1/\u0026quot; /etc/locale.gen sed -i \u0026quot;s/#\\(ru_RU\\.UTF-8\\)/\\1/\u0026quot; /etc/locale.gen locale-gen # Сгенерировать локали  Прописать в /etc/locale.conf.\necho \u0026quot;LANG=ru_RU.UTF-8\u0026quot; \u0026gt; /etc/locale.conf echo \u0026quot;LC_COLLATE=C\u0026quot; \u0026gt;\u0026gt; /etc/locale.conf  Русский шрифт в консоли.\necho \u0026quot;KEYMAP=ru\u0026quot; \u0026gt; /etc/vconsole.conf echo \u0026quot;FONT=cyr-sun16\u0026quot; \u0026gt;\u0026gt; /etc/vconsole.conf  Создаём рам-диск mkinitcpio.\nnano /etc/mkinitcpio.conf  В /etc/mkinitcpio.conf, в разделе HOOKS, должен быть прописан хук keyboard keymap, убрать fsck.\nВ разделе MODULES нужно прописать свой драйвер видеокарты: i915 для Intel, radeon для AMD, nouveau для Nvidia.\nHOOKS=(base udev autodetect modconf block filesystems keyboard keymap)  mkinitcpio -p linux  Задать пароль root.\npasswd  Создать пользователя.\nuseradd -m -g users -G wheel,audio,video,storage -s /bin/zsh st  И задать ему пароль.\npasswd st  Расскомментировать в /etc/pacman.conf.\n[multilib] Include = /etc/pacman.d/mirrorlist  Затем выполнить.\npacman-key --init pacman-key --populate pacman -Syy  Установка boot loaderа.\ngrub-install /dev/sdb grub-mkconfig -o /boot/grub/grub.cfg  "}).add({id:2,href:"/wiki/other/ctlosiso/",title:"Ctlos iso",description:"Создание iso образа # YouTube link Старое видео, но многое объясняет.\n Github README — быстрый способ.  Подготовка # Установить пакеты для сборки.\nyay -S git archiso mkinitcpio-archiso --noconfirm --needed   Для сборки необходимо подключить локально ctlos_repo, или изменить под себя pacman.conf и пакеты.\n Задействован chaotic репозиторий, проще всего его установить, через yay из aur.\nyay -S chaotic-keyring chaotic-mirrorlist --noconfirm --needed  Локальный репозиторий #  Нужен в том случае, если вы хотите, что-то собрать и добавить из aur.",content:"Создание iso образа # YouTube link Старое видео, но многое объясняет.\n Github README — быстрый способ.  Подготовка # Установить пакеты для сборки.\nyay -S git archiso mkinitcpio-archiso --noconfirm --needed   Для сборки необходимо подключить локально ctlos_repo, или изменить под себя pacman.conf и пакеты.\n Задействован chaotic репозиторий, проще всего его установить, через yay из aur.\nyay -S chaotic-keyring chaotic-mirrorlist --noconfirm --needed  Локальный репозиторий #  Нужен в том случае, если вы хотите, что-то собрать и добавить из aur.\n Создание директории и клонирование репозитория ctlos. Еще немного о лакальном репо.\nmkdir ~/ctlos cd ~/ctlos git clone https://github.com/ctlos/ctlos_repo  Или ssh.\ngit clone git@github.com:ctlos/ctlo_repo.git  Сборка aur пакетов # Найти нужный пакет на сайте аур aur.archlinux.org и загрузить snapshot вида *.tar.gz.\nСобираем пакеты в build.\nmkdir ~/ctlos/ctlos_repo/build cd ~/ctlos/ctlos_repo/build wget https://aur.archlinux.org/cgit/aur.git/snapshot/gtk3-mushrooms.tar.gz  Распаковываем и собираем пакет.\ntar -xvzf gtk3-mushrooms.tar.gz cd gtk3-mushrooms makepkg -s  Копируем собраные пакеты в ~/ctlos/ctlos_repo/x86_64, инициализируем репозиторий. Пакеты в формате *.pkg.tar.xz, или zst.\ncd ~/ctlos/ctlos_repo/x86_64 repo-add ctlos_repo.db.tar.zst *.tar.zst  Или.\n./update.sh --add  После добавления новых пакетов из aur необходимо переинициализировать репозиторий.(Удалить файлы баз данных), или запустить скрипт update.sh он сам все пересоздаст.\nrepo-add ctlos_repo.db.tar.zst *.tar.xz repo-add ctlos_repo.db.tar.zst *.pkg.tar.zst  Или.\n./update.sh --add  Репозиторий iso # Клонируем репозиторий. Ветка master по умолчанию.\ncd ~/ctlos git clone --depth=1 https://github.com/ctlos/ctlosiso   Добавляем пользовательский репозиторий для aur пакетов. В /ctlos/ctlosiso/pacman.conf. Замнените user_name на имя пользователя от которого работаете.\n [ctlos_repo] SigLevel = Optional TrustAll Server = file:///home/user_name/ctlos/ctlos_repo/$arch  Закоментировать репозиторий ctlos, если нужно.\n#[ctlos_repo] #SigLevel = Never #Server = https://raw.github.com/ctlos/ctlos_repo/dev/repo/$arch  Сборка образа # Сделать скрипты исполняемыми.\ncd ctlosiso chmod +x {autobuild.sh,chroot.sh,mkarchiso.sh}   Пакеты: packages.x86_64  Скрипту autobuild.sh обязательно нужно передать аргумент, любой. Я обычно отправляю xfce_1.7.0 de/wm и версию.\nsudo ./autobuild.sh xfce_1.7.0  Готовый образ и хэши создаются в данной директории ~/ctlos/ctlosiso/out.\nПересборка # Удалить каталоги и запустить скрипт сначала.\nsudo rm -rf {out,work}  Или отредактировать.\nsudo nano /bin/pacstrap  Изменить строку, для пропуска установленных пакетов.\npacman_args+=(--noconfirm)  На.\npacman_args+=(--noconfirm --needed)  Удалить файлы блокировки.\nsudo rm -v work/build.make_*  Списки пакетов # Список установленных пакетов в системе. Подробно.\nLANG=C pacman -Sl | awk '/\\[installed\\]$/ {print $1 \u0026quot;/\u0026quot; $2 \u0026quot;-\u0026quot; $3}' \u0026gt; ~/pkglist.txt LANG=C pacman -Sl | awk '/\\[installed\\]$/ {print $2}' \u0026gt; ~/.pkglist.txt  Кратко.\npacman -Qqe \u0026gt; ~/pkglist.txt pacman -Qqm \u0026gt; ~/aurlist.txt  "}).add({id:3,href:"/wiki/wm/bspwm/",title:"Ctlos Linux Bspwm",description:"Описание конфигурации Ctlos Linux Bspwm, горячие клавиши, утилиты.",content:"  Demo Video.\nСкачать iso образ #  Данный оконный менеджер доступен в xfce iso, метод online установки.\n  Скачать   Рекомендации после установки next-install.\n Оформление #  Тема gtk: модификация Qogir. Иконки: Qogir-dark. Курсор: capitaine-cursors. Шрифт: Clear Sans Medium ttf-clear-sans. Шрифт терминала: uw-ttyp0(otb-uw_ttyp0), Hack Nerd Font Mono,9 nerd-fonts-hack.  Панели # Верхний бар — polybar # Элементы:\n Запуск меню: левый клик - rofi. Urxvt с сессией tmux. Сессия сохраняется, при закрытии и восстанавливается, при следующем нажатии. Newsboat - rss читалка. Монитор cpu и ram. Доступные обновления, клик: pacui - псевдо графический менеджер пакетов. Рабочие столы (теги). Сервис tor. Включить левый клик, выключить правый. Music контроллер mpd. Звук по скроллу, клик - выкл. Дата. Лклик - подробней, Пклик - календарь. Раскладка. Меню выхода.  Нижний бар — tint2 #    Name Описание     udiskie монтирование usb.   redshift-gtk цветовой тон экрана.   xfce4-power-manager менеджер питания.   parcellite менеджер буфера обмена. ctrl+alt+h открыть историю.    Горячие клавиши # Очень многое переопределено, но никто не мешает использовать дефолт, sxhkdrc.\nДобавлен дефолтный конфиг ~/.config/bspwm/sxhkd/sxhkdrc.example, если хотите просто переименуйте исходный, но создайте копию.\nmv ~/.config/bspwm/sxhkd/sxhkdrc ~/.config/bspwm/sxhkd/sxhkdrc.bak mv ~/.config/bspwm/sxhkd/sxhkdrc.example ~/.config/bspwm/sxhkd/sxhkdrc  Режимы и управление окнами #  Режим тайлинга tiled, плитка. Режим pseudo_tiled, псевдо тайлинг. Нечто среднее между floating и tiled. Режим floating, плавающий режим. Режим fullscreen, Весь экран. Режим monocle, окно занимает всё доступное пространство.  Зажатая Super(win) и клавиши мыши манипулируют окнами: резмер, положение.\n   Ключ Описание     super + F1 Справка по горячим клавишам на us.   super + a Псевдо тайлинг.   super + s floating, плавающий режим.   super + d тайлинг.   super + f fullscreen.   super + m Переключение режима monocle.   alt + space Переключение режима тайлинг/floating.   super + g Приклеить окно.   super + z Закрыть окно.   super + - Скрыть/показать окно.   super + c Переход в режим monocle, отключение рамок и отступов.   super + v Отключение отступов.   super + alt + {↑,↓} Уменьшение/увеличение отступов, super + c в исходное состояние.   super + scroll Уменьшение/увеличение отступов, super + c в исходное состояние.   super + {←,→,↑,↓} Перемещение окна в режиме floating.   super + {h,j,k,l} перемещение по окнам в режиме tiled.   super + alt + {h,j,k,l} изменение размера в режиме tiled.   super + shift + {h,j,k,l} перетаскивание в режиме tiled.   alt + tab Переключение окна на текущем теге.   super + tab Переключение на предыдущий тег.   super + {1-9,0} Переход на тег.   super + {q...o,0} Переход на тег.   super + alt + {←,→} Перемещение по тегам.   super + alt + {1-9,0} Отправка окна на номер тега.   super + ctrl + p Скрыть/показать polybar.    Запуск утилит #    Ключ Описание     alt + shift Переключение раскладки.   super + alt + r Рестарт bspwm.   super + alt + q Выход из bspwm.   super + Escape Релоад конфига горячих клавиш sxhkd.   alt + Return Терминал драйвинг, задаем координаты старта, зажатым ЛКМ.   super + Return Терминал на первом теге, в режиме тайлинга, monocle.   alt + t Терминал в режиме floating.   alt + r Ranger - консольный менеджер файлов.   alt + d Rofi - меню.   alt + w Firefox.   alt + f Thunar.   super + Delete Блокировка экрана.   super + alt + Delete Меню выхода.   Print скрин с отправкой в ~/Pictures/screen(директория должна быть). Копируется в буфер.   super + Print скрин в режиме выделения.   super + alt + Print скрин с задержкой 5 сек. и отправкой в ~/Pictures/screen(директория должна быть). Копируется в буфер.   super + alt + m Текущий трек в ncmpcpp.   ctrl + alt + {c,v} Копировать/вставить в терминале.    Конфигурационные файлы #    Путь Описание     ~/.config/bspwm/bspwmrc Основной конфиг.   ~/.config/bspwm Скрипты.   ~/.config/bspwm/autostart.sh Скрипт автостарта. Он вызывается в ~/.config/bspwm/bspwmrc. Функция run нужна для рестарта bspwm, избегает дублей.   ~/.config/bspwm/sxhkd/sxhkdrc Конфиг горячих клавиш.   /etc/sddm.conf Конфиг менеджера входа SDDM.   ~/.config/bspwm/polybar Скрипты и конфиг polybar.   ~/.config/tint2/tray.tint2rc Конфиг tint2 трей. В меню есть gui-конфигуратор (Настройки tint).   ~/.config/picom.conf Декоратор окон, композитный менеджер.   ~/.Xresources Конфиг Urxvt терминала. После изменения файла выполнить xrdb -merge $HOME/.Xresources.   ~/.colors Палитры терминала, указывать в ~/.Xresources строка #include \u0026quot;.colors/sn\u0026quot;.   ~/.zshrc Конфиг оболочки $SHELL.   ~/.alias_zsh Алиасы и функции zsh, сокращения команд терминала.    Это основа, все остальное в ~/ и ~/.config.\nУтилиты #    Name Описание     neofetch, fetch информация о системе. ~/.bin/fetch.   lxappearance, qt5ct настройка внешнего вида.   lxrandr разрешение экрана.   gotop Консольный системный монитор.   gufw межсетевой экран.   ranger, thunar файловые менеджеры.   fzf инкрементальный поиск, zz.   nano, micro консольный текстовый редактор, привычные клавиши:) ctrl+s - сохранить, ctrl+q - выход и т.д.   leafpad Gui текстовый редактор.   xreader просмотр pdf.   viewnior просмотр изображений.   ncmpcpp, audacious музыкальный плеер.   cava визуализатор.   mpv, smplayer видео плеер.   youtube-dl, straw-viewer, streamlink скачивание, просмотр, просмотр стриминга.   simplescreenrecorder Запись экрана.   flameshot скриншоты.   keepassxc менеджер паролей.   veracrypt шифрование файлов.   pavucontrol управление звуком.   file-roller менеджер архивов.   timeshift резервное копирование.   tmux терминальный мультиплексор.   tmrun.sh Tmux с 3 табами. ~/.bin/tmrun.sh.    Еще скрипты: ~/.bin.\nКомментарии приветствуются. Вступай в telegram чат: t.me/ctlos.\n"}).add({id:4,href:"/wiki/config/videocfg/",title:"Видео драйвера",description:"Информация # Узнать информацию о видео карте.\nlspci -k | grep -A 2 -E \u0026quot;(VGA|3D)\u0026quot;   xf86-video-amdgpu — новый, свободный драйвер для видеокарт AMD. xf86-video-ati — старый свободный драйвер для AMD. xf86-video-intel — драйвер для встроенной графики Intel. xf86-video-nouveau — свободный драйвер для карт NVIDIA. xf86-video-vesa — свободный драйвер, поддерживающий все карты, но с очень ограниченной функциональностью. Для виртуальной машины. nvidia — проприетарный драйвер для NVIDIA.  Проприетарные драйвера обычно увеличивают производительность.",content:"Информация # Узнать информацию о видео карте.\nlspci -k | grep -A 2 -E \u0026quot;(VGA|3D)\u0026quot;   xf86-video-amdgpu — новый, свободный драйвер для видеокарт AMD. xf86-video-ati — старый свободный драйвер для AMD. xf86-video-intel — драйвер для встроенной графики Intel. xf86-video-nouveau — свободный драйвер для карт NVIDIA. xf86-video-vesa — свободный драйвер, поддерживающий все карты, но с очень ограниченной функциональностью. Для виртуальной машины. nvidia — проприетарный драйвер для NVIDIA.  Проприетарные драйвера обычно увеличивают производительность.\nРаскомментировать репозиторий multilib в /etc/pacman.conf.\nАппаратное ускорение видео.\nIntel # sudo pacman -S xf86-video-intel intel-media-driver lib32-mesa   Для поддержки 32-битных приложений lib32-mesa.  Для intel все не однозначно, в случае проблем обращайтесь к Arch Wiki, если зависания и разрывы попробуйте создать файл sudo nano /etc/X11/xorg.conf.d/20-intel.conf с таким содержимым.\nSection \u0026quot;Device\u0026quot; Identifier \u0026quot;Intel Graphics\u0026quot; Driver \u0026quot;intel\u0026quot; Option \u0026quot;AccelMethod\u0026quot; \u0026quot;uxa\u0026quot; Option \u0026quot;NoAccel\u0026quot; \u0026quot;True\u0026quot; Option \u0026quot;DRI\u0026quot; \u0026quot;False\u0026quot; Option \u0026quot;TearFree\u0026quot; \u0026quot;true\u0026quot; EndSection  Nvidia # yay -S nvidia nvidia-utils nvidia-settings opencl-nvidia opencl-headers lib32-nvidia-utils lib32-opencl-nvidia  Драйвер nvidia может иметь префикс nvidia-390xx, конкретно для вашей карты, уточняйте на сайте производителя и в Арч-вики.\nyay -S nvidia-390xx-dkms nvidia-390xx-utils nvidia-390xx-settings opencl-nvidia-390xx lib32-opencl-nvidia-390xx lib32-nvidia-390xx-utils  Создание xorg файла /etc/X11/xorg.conf.\nsudo nvidia-xconfig  Убираем тиринг # sudo nvidia-settings  Переходим.\n X Server Display Configuration Advanced Force Full Composition Pipeline Save to X Configuration File Exit Reboot  AMD #  ATI AMDGPU  sudo pacman -S xf86-video-ati # или sudo pacman -S xf86-video-amdgpu  Убираем тиринг # Если ATI xf86-video-ati.\nsudo nano /etc/X11/xorg.conf.d/20-radeon.conf  Section \u0026quot;Device\u0026quot; Identifier \u0026quot;Radeon\u0026quot; Driver \u0026quot;radeon\u0026quot; Option \u0026quot;TearFree\u0026quot; \u0026quot;true\u0026quot; EndSection  Если AMDGPU xf86-video-amdgpu.\nsudo nano /etc/X11/xorg.conf.d/20-amdgpu.conf  Section \u0026quot;Device\u0026quot; Identifier \u0026quot;AMD\u0026quot; Driver \u0026quot;amdgpu\u0026quot; Option \u0026quot;TearFree\u0026quot; \u0026quot;true\u0026quot; EndSection  Для виртуальной машины # sudo pacman -S xf86-video-vesa  "}).add({id:5,href:"/wiki/backup/timeshift-rsync/",title:"Резервное копирование",description:"Timeshift # Отличная программа для создания backup-ов и восстановления системы: Timeshift. Данная утилита создает мгновенны снимки btrfs, а со стандартами ext работает через rsync. Установка.\n  yay -S timeshift  Интерфейс очень простой, главное правильно настроить исключения.\nЭто нужно для того, чтобы вы не дампили большие и не нужные каталоги вашей системы, т.к. это экономит время и место на диске, а работоспособность сохраняется. В пример могу привести каталог virtualbox, мне например он в копии системы не нужен, в том числе и смонтированный диск /home/st/files, думаю вы поняли.",content:"Timeshift # Отличная программа для создания backup-ов и восстановления системы: Timeshift. Данная утилита создает мгновенны снимки btrfs, а со стандартами ext работает через rsync. Установка.\n  yay -S timeshift  Интерфейс очень простой, главное правильно настроить исключения.\nЭто нужно для того, чтобы вы не дампили большие и не нужные каталоги вашей системы, т.к. это экономит время и место на диске, а работоспособность сохраняется. В пример могу привести каталог virtualbox, мне например он в копии системы не нужен, в том числе и смонтированный диск /home/st/files, думаю вы поняли.\n Вот мой список правил. Правила исключений должны быть выше домашней директории, измените путем перетаскивания.\n   Существует и консольный вариант timeshift, вы можете сделать chroot в вашу систему, смонтировать разделы и откатить версию. В help есть примеры, все просто timeshift -h.\nRsync # Монтируем раздел для резервной копии, предварительно создайте каталог.\nmount /dev/sdb1 /dump  Копируем / в /dump с исключением, но с созданием нужных директорий.\nrsync -cauvP --delete --delete-excluded --exclude={\u0026quot;/dev/*\u0026quot;,\u0026quot;/proc/*\u0026quot;,\u0026quot;/sys/*\u0026quot;,\u0026quot;/tmp/*\u0026quot;,\u0026quot;/run/*\u0026quot;,\u0026quot;/mnt/*\u0026quot;,\u0026quot;/media/*\u0026quot;,\u0026quot;/lost+found\u0026quot;,\u0026quot;/var/lib/pacman/sync/*\u0026quot;,\u0026quot;/var/cache/*\u0026quot;,\u0026quot;/var/tmp/*\u0026quot;,\u0026quot;/boot/*\u0026quot;,\u0026quot;/home/*\u0026quot;} /* /dump/  Скопировать систему полностью.\nrsync -cauvP --delete --delete-excluded --exclude={\u0026quot;/dev/*\u0026quot;,\u0026quot;/proc/*\u0026quot;,\u0026quot;/sys/*\u0026quot;,\u0026quot;/tmp/*\u0026quot;,\u0026quot;/run/*\u0026quot;,\u0026quot;/mnt/*\u0026quot;,\u0026quot;/media/*\u0026quot;,\u0026quot;/lost+found\u0026quot;,\u0026quot;/var/lib/pacman/sync/*\u0026quot;,\u0026quot;/var/cache/*\u0026quot;,\u0026quot;/var/tmp/*\u0026quot;,\u0026quot;/home/lost+found\u0026quot;,\u0026quot;/boot/lost+found\u0026quot;} /* /dump/  rsync -cauvP --delete --delete-excluded --exclude={\u0026quot;/dev/*\u0026quot;,\u0026quot;/proc/*\u0026quot;,\u0026quot;/sys/*\u0026quot;,\u0026quot;/tmp/*\u0026quot;,\u0026quot;/run/*\u0026quot;,\u0026quot;/mnt/*\u0026quot;,\u0026quot;/media/*\u0026quot;,\u0026quot;/lost+found\u0026quot;,\u0026quot;/var/lib/pacman/sync/*\u0026quot;,\u0026quot;/var/cache/*\u0026quot;,\u0026quot;/var/tmp/*\u0026quot;,\u0026quot;/boot/lost+found\u0026quot;,\u0026quot;/home/lost+found\u0026quot;,\u0026quot;/home/*/.thumbnails/*\u0026quot;,\u0026quot;/home/*/.cache/*\u0026quot;,\u0026quot;/home/*/.local\u0026quot;,\u0026quot;/home/*/.gvfs/*\u0026quot;,\u0026quot;/home/*/files/*\u0026quot;,\u0026quot;/home/*/.var\u0026quot;,\u0026quot;/home/*/.npm\u0026quot;,\u0026quot;/home/*/.node-gyp\u0026quot;,\u0026quot;/home/*/.electron\u0026quot;} /* /run/media/st/dump/myarch/  Стоит заметить и исключить из /home, как пример ниже.\n--exclude={\u0026quot;/home/lost+found\u0026quot;,\u0026quot;/home/*/.thumbnails/*\u0026quot;,\u0026quot;/home/*/.cache/mozilla/*\u0026quot;,\u0026quot;/home/*/.local/share/Trash/*\u0026quot;,\u0026quot;/home/*/.gvfs/*\u0026quot;}  rsync -cauvP --delete --delete-excluded --exclude={\u0026quot;/dev/*\u0026quot;,\u0026quot;/proc/*\u0026quot;,\u0026quot;/sys/*\u0026quot;,\u0026quot;/tmp/*\u0026quot;,\u0026quot;/run/*\u0026quot;,\u0026quot;/mnt/*\u0026quot;,\u0026quot;/media/*\u0026quot;,\u0026quot;/lost+found\u0026quot;,\u0026quot;/var/lib/pacman/sync/*\u0026quot;,\u0026quot;/var/cache/*\u0026quot;,\u0026quot;/var/tmp/*\u0026quot;,\u0026quot;/boot/lost+found\u0026quot;,\u0026quot;/home/lost+found\u0026quot;,\u0026quot;/home/*/.thumbnails/*\u0026quot;,\u0026quot;/home/*/.cache/mozilla/*\u0026quot;,\u0026quot;/home/*/.local/share/Trash/*\u0026quot;,\u0026quot;/home/*/.gvfs/*\u0026quot;} /* /dump/  Исключите каталоги в которых смонтированы диски/разделы, если нужно.\n/home/st/files  Далее создаем архив.\ncd /dump tar -caf \u0026quot;/mnt/myarch.tar.xz\u0026quot; /dump/*  Или gz он быстрее.\ncd /dump tar -caf \u0026quot;/mnt/myarch.tar\u0026quot; /dump/* gzip -9 \u0026quot;/mnt/myarch.tar\u0026quot;  Восстановление # Форматируем нужные разделы, с помощью gparted или руками.\nmkfs.ext4 -L \u0026quot;root\u0026quot; /dev/sda5 mkfs.ext2 -L \u0026quot;boot\u0026quot; /dev/sda2 mkfs.ext4 -L \u0026quot;home\u0026quot; /dev/sda7 mkswap /dev/sda3  Загружаемся с live usb(или из этой системы), монтируем раздел root(dev/sda5), boot и др., если нужно.\nmount /dev/sda5 /mnt mount /dev/sda2 /mnt/boot mount /dev/sda7 /mnt/home swapon /dev/sda3  Создаем каталог и Монтируем раздел с архивом резервной копии.\nmkdir /mnt/dump mount /dev/sdb1 /mnt/dump  Переходим на смонтированный диск(куда восстанавливаем), распаковываем архив.\ncd /mnt tar xvJf /mnt/dump/myarch.tar.xz -С /mnt # или tar xvzf /mnt/dump/myarch.tar.gz -С /mnt  Делаем chroot в новую систему.\narch-chroot /mnt /bin/zsh  Редактируем если нужно /etc/fstab, /etc/mkinitcpio.conf, создаем initramfs-образы.\nmv /mnt/etc/fstab /mnt/etc/fstab.bak genfstab -pU /mnt \u0026gt; /mnt/etc/fstab  mkinitcpio -p linux  Настройка ключей pacman.\npacman-key --init pacman-key --populate  Обновляем меню загрузчика груб, os-prober (для поиска других ОС).\npacman -S os-prober grub-install /dev/sda grub-mkconfig -o /boot/grub/grub.cfg  Выходим из chroot, размонтируем разделы и перезагружаемся уже в восстановленную систему.\nexit umount /mnt/boot umount /mnt/home umount /mnt/dump rmdir /mnt/dump umount /mnt # Или. exit umount -R /mnt reboot  "}).add({id:6,href:"/wiki/install/install-ctlos/",title:"Установка Ctlos Linux",description:"Перед установкой online обязательно настройте интернет и выполните в терминале команду mirrors, а затем запустите установщик online. Команда просто перестроит список зеркал и обновит базы pacman, что предоставит наилучшую скорость установки для вас.\nЕсли установка online вылетает с ошибкой stemd-machine-id-setup error 127, то закройте установщик, откройте терминал, выполните как писал выше mirrors и затем обновите пакет yay -Syy archlinux-keyring. После этого запускайте установку online.\n Запись ISO # Для записи образа на USB накопитель потребуется установочный ISO образ, который можно скачать по ссылке Скачать Ctlos Linux.",content:" Перед установкой online обязательно настройте интернет и выполните в терминале команду mirrors, а затем запустите установщик online. Команда просто перестроит список зеркал и обновит базы pacman, что предоставит наилучшую скорость установки для вас.\nЕсли установка online вылетает с ошибкой stemd-machine-id-setup error 127, то закройте установщик, откройте терминал, выполните как писал выше mirrors и затем обновите пакет yay -Syy archlinux-keyring. После этого запускайте установку online.\n Запись ISO # Для записи образа на USB накопитель потребуется установочный ISO образ, который можно скачать по ссылке Скачать Ctlos Linux.\n Перед началом записи образа, отформатируйте USB накопитель в FAT32, например, используя gparted. Проверьте контрольные суммы.\n Проверка ISO образа # Файлы с контрольными суммами всегда находятся рядом с iso, в зеркалах загрузки и содержат хеш, который и нужно сравнить.\nПроверка контрольных сумм в Windows.\nЧтобы проверить контрольные суммы в Windows используйте следующую утилиту MD5 \u0026amp; SHA Checksum Utility.\nПроверка контрольных сумм в Linux.\nПроверка SHA256.\nsha256sum ctlos_xfce_1.0.0_20181102.iso  GPG, если рядом есть .sig.\nsudo pacman -S gnupg  Импорт ключа и проверка образа.\ngpg --keyserver keys.gnupg.net --recv-keys 98F76D97B786E6A3 gpg --verify ctlos_xfce_1.0.0_20181102.iso.sig ctlos_xfce_1.0.0_20181102.iso  Подробнее о GnuPG.\nПрограммы для записи # Для записи образа в Linux потребуется для начала отформатировать Ваш USB накопитель. Сделать это можно следующей командой.\nsudo mkfs.fat -F32 /dev/sdX  Далее записываем скачанный ранее образ используя утилиту dd.\nsudo dd bs=4M if=ctlos.iso of=/dev/sdX status=progress \u0026amp;\u0026amp; sync  Кросплатформенные инструменты для записи образов (Linux, Windows).\n Ventoy Etcher  Для записи образа в Windows рекомендуется использовать программу Ventoy или Rufus.\n При записи образа в программе Rufus выбирайте режим записи ISO в dd.\n Установка # После успешной записи образа и его загрузки на Вашем устройстве Вы увидите в самом начале раздел выбора языка интерфейса. Выбирайте тот, который Вам удобен. В данном примере будет использоваться русский язык.\n Если вы используете образ с xfce, то у вас присутствует выбор метода установки.\n  Online: открывается раздел выбора других окружений и доп. программ, обязательно требуется включенный интернет. Offline: произойдет установка того, что вы видите в текущий момент, простая распаковка, интернет не нужен.    На следующем шаге Вам требуется указать Ваше примерное местоположение для установки и выбора временной зоны.\n   Раскладка ru,us по alt+shift.\n   После выбора раскладки Вам требуется разметить диск вручную либо оставить всё как есть.\n  После завершения переразметки диска Вам нужно создать пользователя, выбрать желаемый пароль.\n  Проверяем данные, можно вернуться и исправить, если что-то не так. Если всё верно - нажимайте \u0026ldquo;Установить\u0026rdquo;.\n  Дождитесь конца установки.\n  Готово! Теперь Вы можете перезагрузить Ваше устройство.\n  Выбор в меню GRUB.\n  Менеджер входа (используется LightDm), в правом верхнем углу можно выбрать сессию, если присутствуют другие Окружения (DE), или Оконные менеджеры (WM). На данном скриншоте XFCE, она единственная и по умолчанию ничего можно не выбирать.\n  Вот и все! Отдельная благодарность за скриншоты пользователю breadandbutter с nnm-club.me\n  "}).add({id:7,href:"/wiki/packages/other-pkg/",title:"Установка дополнительных программ",description:"Некоторые пояснения и рекомендации по использованию.\n Сборка пакетов # Установка пакетов из архивов aur tar.gz.\nСоздать каталог ~/.build и перейти в него.\nmkdir ~/.build \u0026amp;\u0026amp; cd ~/.build  Найти нужный пакет на сайте aur.archlinux.org и загрузить snapshot.\nwget https://aur.archlinux.org/cgit/aur.git/snapshot/gtk3-mushrooms.tar.gz  Распаковываем, переходим в каталог, собираем пакет и устанавливаем.\ntar -xvzf gtk3-mushrooms.tar.gz cd gtk3-mushrooms makepkg -sri  Если ошибки целостности, можно проигнорировать.\nmakepkg -s --skipinteg  Проблема с импортом pgp ключей.",content:" Некоторые пояснения и рекомендации по использованию.\n Сборка пакетов # Установка пакетов из архивов aur tar.gz.\nСоздать каталог ~/.build и перейти в него.\nmkdir ~/.build \u0026amp;\u0026amp; cd ~/.build  Найти нужный пакет на сайте aur.archlinux.org и загрузить snapshot.\nwget https://aur.archlinux.org/cgit/aur.git/snapshot/gtk3-mushrooms.tar.gz  Распаковываем, переходим в каталог, собираем пакет и устанавливаем.\ntar -xvzf gtk3-mushrooms.tar.gz cd gtk3-mushrooms makepkg -sri  Если ошибки целостности, можно проигнорировать.\nmakepkg -s --skipinteg  Проблема с импортом pgp ключей. Можно опустить проверку ключом --skippgpcheck.\nmakepkg -s --skippgpcheck  После сборки будет пакет с расширением имя.pkg.tar.zst Установить командой.\nsudo pacman -U имя.pkg.tar.zst  Virtualbox # Arch Wiki Virtualbox.\nsudo pacman -S virtualbox sudo pacman -S virtualbox-host-modules-arch sudo pacman -S virtualbox-guest-iso sudo modprobe vboxdrv sudo gpasswd -a имя_пользователя vboxusers  VirtualBox guest # Arch Wiki.\nОбщая директория, на машине.\nmkdir ~/vboxshare  Общая директория, на виртуалке. uid и gid пользователя можно узнать командой id.\nВ настройках виртуальной машины добавьте общую директорию, выберите ту что создали ранее ~/vboxshare. Имя которое будет доступно в виртуалке укажите vboxshare.\nНастройка гостевых дополнений на виртуалке.\nsudo pacman -S virtualbox-guest-utils sudo pacman -S virtualbox-guest-iso  Systemd сервис в поставке загрузит нужные модули ядра.\nsudo systemctl enable --now vboxservice  Добавьте пользователя в группу vboxsf, где user_name имя вашего пользователя в виртуальной машине.\nsudo usermod -aG vboxsf user_name  Перезапустите виртуальную машину. Командами ниже создайте директорию и смонтируйте в нее.\nmkdir ~/vboxshare sudo mount -t vboxsf -o uid=1000,gid=1000 vboxshare vboxshare  Если вы при создании общей директории выбрали авто подключение, то она уже доступна в /media/sf_vboxshare или в /mnt. Командой ниже можно перемонтировать в ~/vboxshare.\nsudo mount -t vboxsf -o uid=1000,gid=1000 vboxshare vboxshare  Еще можете попробовать виртуалку от GNOME.\nsudo pacman -S gnome-boxes  Steam # Необходимо раскомментировать репозиторий multilib в /etc/pacman.conf.\nsudo pacman -S steam ttf-liberation lib32-alsa-plugins lib32-curl  wiki.archlinux.org.\nИли установите Steam через Flatpak.\nTor # sudo pacman -S tor torsocks  Запуск, остановка, статус, лог сервиса tor.\nsudo systemctl start tor sudo systemctl stop tor sudo systemctl status tor sudo journalctl -xeu tor  Запуск через tor.\ntorify zsh torify ssh user@blabla -p 22  Проверка ip.\ncurl ident.me # через tor torify curl ident.me  # check tor curl --socks5 localhost:9050 --socks5-hostname localhost:9050 -s https://check.torproject.org/ | cat | grep -m 1 Congratulations | xargs  В firefox используйте расширение FoxyProxy, или в параметрах сети укажите только SOCKS5.\n В настройках расширения, Добавить новый SOCKS5, ip: 127.0.0.1, port: 9050\n Chromium запустите с флагом.\nchromium --proxy-server='socks://127.0.0.1:9050' \u0026amp;  Мосты tor # Некоторые провайдеры могут блокировать выход в tor, можно попробовать указать мост bridges.torproject.org.\n# директория с доп конфигами sudo mkdir -p /etc/torrc.d/ # раскоментить include в основном конфиге sudo nano /etc/tor/torrc # в конце файла строка %include /etc/torrc.d/*.conf # кастомный конфиг sudo nano /etc/torrc.d/custom.conf # указать строки UseBridges 1 ClientTransportPlugin obfs4 exec /usr/bin/obfs4proxy Bridge obfs4 15.235.40.232:4276 9A1B05F0C622A0EC13902876302FA2E1B2EA4B5F cert=RWCkXxF0kknQs2T7yIUBPGJUTlUpKXdzVlc9uKdZtbzvcqNvjQHZYGG0kWzlJxbcLaqaQg iat-mode=0  Установить obfs4proxy.\nyay obfs4proxy  Данные obfs4 можно получить у telegram бота: @GetBridgesBot, отправив ему /bridges. Когда я это тестировал, бот выдал не рабочие данные для меня.\nДругой способ получить список мостов. Отправьте email на адрес bridges@torproject.org. Оставьте тему письма пустой, а в теле cообщения напишите \u0026ldquo;get transport obfs4\u0026rdquo;. Пожалуйста, обратите внимание: вы должны отправить письмо с Riseup или Gmail.\n Если tor отказывается работать должным образом попробуйте отредактировать сервис.\n sudo nano /usr/lib/systemd/system/tor.service  [Service] User=root Group=root Type=simple  sudo chown -R root:root /var/lib/tor/ sudo systemctl daemon-reload sudo systemctl restart tor  Bluetooth # sudo pacman -S blueman bluez-utils pulseaudio-bluetooth sudo systemctl enable bluetooth.service  Офисные пакеты # Wps office.\nyay -S wps-office ttf-wps-fonts wps-office-mui-ru-ru wps-office-extension-russian-dictionary --noconfirm  Libre office.\nyay -S libreoffice-fresh libreoffice-fresh-ru papirus-libreoffice-theme --noconfirm  Openoffice.\nyay -S openoffice openoffice-ru-bin --noconfirm  Onlyoffice.\nyay -S onlyoffice-bin --noconfirm  Принтеры # sudo pacman -S cups cups-filters cups-pdf cups-pk-helper ghostscript gsfonts foomatic-db foomatic-db-engine foomatic-db-ppds foomatic-db-nonfree foomatic-db-nonfree-ppds gutenprint foomatic-db-gutenprint-ppds system-config-printer hplip splix sudo systemctl enable --now cups.service  "}).add({id:8,href:"/wiki/wm/",title:"Оконные менеджеры",description:"Prologue Doks.",content:""}).add({id:9,href:"/wiki/wm/frankenwm/",title:"Ctlos Linux FrankenWm",description:"Описание конфигурации Ctlos Linux FrankenWm, горячие клавиши, утилиты.",content:"  Скачать iso образ #  Данный оконный менеджер доступен в xfce iso, метод online установки.\n  Скачать   Рекомендации после установки next-install.\n Конфигурационные файлы #    Путь Описание     ~/.config/frankenwm/src/config.h Основной конфиг.   ~/.config/frankenwm/autostart Скрипт автостарта.   ~/.config/frankenwm/polybar/ Конфиг и скрипты polybar.     Данный wm необходимо перекомпилировать после изменения config.h.\n cd ~/.config/frankenwm/src sudo make clean install  Необходим restart(выйти и зайти) killall frankenwm.\n Изучите оффициальный man.\n Панели #  Верхний бар, polybar Нижний бар - трей, tint2  Горячие клавиши # Конфиг ~/.config/frankenwm/src/config.h.\n MOD4: Super/Windows MOD1: Alt XK_: воспринимайте как префикс, а дальше уже кнопка  Присутствует утилита sxhkd для привязок клавиш без компиляции, конфиг ниже. По super + F1 можно увидеть данные привязки.\n ~/.config/frankenwm/sxhkdrc  Режимы и управление окнами # Секция переключения режимов.\n/* mode selection */ { MOD4|SHIFT, XK_t, switch_mode, {.i = TILE}}, { MOD4|SHIFT, XK_m, switch_mode, {.i = MONOCLE}}, { MOD4|SHIFT, XK_b, switch_mode, {.i = BSTACK}}, { MOD4|SHIFT, XK_g, switch_mode, {.i = GRID}}, { MOD4|SHIFT, XK_f, switch_mode, {.i = FIBONACCI}}, { MOD4|SHIFT, XK_d, switch_mode, {.i = DUALSTACK}}, { MOD4|SHIFT, XK_e, switch_mode, {.i = EQUAL}},     Ключ Описание     super+shift+t TILE: тайлинг режим.   super+shift+m MONOCLE: окно развернуто.   super+shift+b BSTACK: нижний стек.   super+shift+g GRID: режим сетки.   super+shift+f FIBONACCI: режим фибоначи(золотое сечение), как в Bspwm.   super+shift+d DUALSTACK: двойной стек.   super+shift+e EQUAL: ровное деление.    Зажатая Super(win) и клавиши мыши манипулируют окнами: резмер, положение. В плавающем режиме.\nЗапуск утилит #    Ключ Описание     alt + shift Переключение раскладки(us,ru).   super+shift+Enter Terminal urxvt.   super+r Rofi - меню(лаунчер).   super+q Закрыть окно.   super+ctrl+q Закрыть frankenwm.    Комментарии приветствуются. Вступай в telegram чат: t.me/ctlos.\n"}).add({id:10,href:"/wiki/packages/iwd/",title:"Iwd настройка wifi",description:"ArchWiki iwd.\nУстановка и использование # sudo pacman -S iwd wpa_supplicant dhclient # Смотрим список интерфейсов iwctl device list #Сканируем интерфейс iwctl station wlp5s0 scan # Список доступных сетей iwctl station wlp5s0 get-networks # Подключение с указанием пароля, SSID имя сети iwctl --passphrase passphrase station device connect \u0026quot;SSID\u0026quot; dhclient   Дальнейшее подключение происходит автоматически.\n Ручная настройка #  Не обязательно.\n Учетные данные Wi-Fi хранятся в /var/lib/iwd, точное имя SSID следует использовать, формат: SSID.",content:"ArchWiki iwd.\nУстановка и использование # sudo pacman -S iwd wpa_supplicant dhclient # Смотрим список интерфейсов iwctl device list #Сканируем интерфейс iwctl station wlp5s0 scan # Список доступных сетей iwctl station wlp5s0 get-networks # Подключение с указанием пароля, SSID имя сети iwctl --passphrase passphrase station device connect \u0026quot;SSID\u0026quot; dhclient   Дальнейшее подключение происходит автоматически.\n Ручная настройка #  Не обязательно.\n Учетные данные Wi-Fi хранятся в /var/lib/iwd, точное имя SSID следует использовать, формат: SSID.psk.\n[Security] PreSharedKey=a2a0bf020727b1ea1c0542d16e1ccbbbab791d933e9b92783540257910a15817 Passphrase=password  Для создания зашифрованного psk используйте wpa_passhrase.\nwpa_passphrase my_ssid password  Для подключения к сети.\niwctl station wlp5s0 connect \u0026quot;SSID\u0026quot; dhclient  Автоматическое включение wifi # Через сервис systemd, создайте скрипт для подключенияю\nsudo nano /usr/local/wifi.sh  #!/bin/bash iwctl station wlan0 connect \u0026quot;SSID\u0026quot; dhclient  Создайте сервис systemd.\nsudo nano /etc/systemd/system/wifi.service  [Unit] Before=network.target Wants=network.target [Service] ExecStart=/usr/local/wifi.sh [Install] WantedBy=default.target  Назначение прав и включение сервиса # chmod 744 /usr/local/wifi.sh chmod 664 /etc/systemd/system/wifi.service systemctl daemon-reload systemctl enable wifi.service  "}).add({id:11,href:"/wiki/config/autologin/",title:"Автологин",description:"Автологин xinitrc # Автологин с помощью ~/.xinitrc и автозапуск Х после логина.\nВ ~/.xinitrc необходимо прописать запуск DE, WM. В самом конце файла.\nexec openbox-session  Добавить в ~/.bashrc, если используем Zsh, то ~/.zshrc. Узнать какой у вас шелл, команда: echo $SHELL.\nnano ~/.zshrc  Добавить наверх, после первой строки #!/usr/bin/env zsh.\n[[ -z $DISPLAY \u0026amp;\u0026amp; $XDG_VTNR -eq 1 ]] \u0026amp;\u0026amp; exec startx \u0026amp;\u0026gt; /dev/null  Настройка сервиса # Выполнить.",content:"Автологин xinitrc # Автологин с помощью ~/.xinitrc и автозапуск Х после логина.\nВ ~/.xinitrc необходимо прописать запуск DE, WM. В самом конце файла.\nexec openbox-session  Добавить в ~/.bashrc, если используем Zsh, то ~/.zshrc. Узнать какой у вас шелл, команда: echo $SHELL.\nnano ~/.zshrc  Добавить наверх, после первой строки #!/usr/bin/env zsh.\n[[ -z $DISPLAY \u0026amp;\u0026amp; $XDG_VTNR -eq 1 ]] \u0026amp;\u0026amp; exec startx \u0026amp;\u0026gt; /dev/null  Настройка сервиса # Выполнить.\nsudo systemctl enable getty@.service  Данная команда создаст файл и запустит systemd сервис, просмотреть.\ncat /etc/systemd/system/getty@tty1.service.d/override.conf  Если нет, то создайте вручную.\nsudo mkdir /etc/systemd/system/getty@tty1.service.d sudo nano /etc/systemd/system/getty@tty1.service.d/override.conf  Должно быть так, где user - имя вашего пользователя.\n[Service] ExecStart= ExecStart=-/usr/bin/agetty --autologin user --noclear %I $TERM  Отключите login менеджер (lightdm, gdm, lxdm).\nsystemctl disable gdm  И удалите, если нужно.\nsudo pacman -R gdm  Автологин sddm # Отредактируйте конфиг.\nsudo nano /etc/sddm.conf  И преведите к такому виду. Замените creio на имя вашего пользователя.\n[Autologin] Relogin=false User=creio  Автологин Lightdm # Замените creio на имя вашего пользователя.\ngroupadd -r autologin gpasswd -a creio autologin groupadd -r nopasswdlogin gpasswd -a creio nopasswdlogin  Отредактируйте конфиг.\nnano /etc/lightdm/lightdm.conf  И приведите к такому виду. Замените creio на имя вашего пользователя.\npam-service=lightdm pam-autologin-service=lightdm-autologin autologin-user=creio autologin-user-timeout=0 session-wrapper=/etc/lightdm/Xsession  "}).add({id:12,href:"/wiki/backup/squashfs/",title:"Резервное копирование Squashfs",description:"Mksquashfs # Утилита сжатия.\npacman -S squashfs-tools arch-install-scripts  Смотрим разделы диска.\nlsblk  Монтируем для чтения root,boot(home) и создаем образ, сжатие xz.\nmount /dev/sda5 -o ro /mnt mount /dev/sda2 -o ro /mnt/boot mount /dev/sda7 -o ro /mnt/home  Архивируем.\nmksquashfs /mnt ~/backup/myarch.sfs -comp xz  Исключение: -e /dir/file.\nОтмонтируем по завершению.\numount -R /mnt  Восстановление # Из рабочей системы, или Live-usb. Форматируем и монтируем поврежденный или новый раздел, boot по необходимости и др.",content:"Mksquashfs # Утилита сжатия.\npacman -S squashfs-tools arch-install-scripts  Смотрим разделы диска.\nlsblk  Монтируем для чтения root,boot(home) и создаем образ, сжатие xz.\nmount /dev/sda5 -o ro /mnt mount /dev/sda2 -o ro /mnt/boot mount /dev/sda7 -o ro /mnt/home  Архивируем.\nmksquashfs /mnt ~/backup/myarch.sfs -comp xz  Исключение: -e /dir/file.\nОтмонтируем по завершению.\numount -R /mnt  Восстановление # Из рабочей системы, или Live-usb. Форматируем и монтируем поврежденный или новый раздел, boot по необходимости и др.\nmkfs.ext4 -L \u0026quot;root\u0026quot; -U \u0026quot;$(blkid -o value -s UUID /dev/sda5)\u0026quot; /dev/sda5 mkfs.ext2 -L \u0026quot;boot\u0026quot; -U \u0026quot;$(blkid -o value -s UUID /dev/sda2)\u0026quot; /dev/sda2 mkfs.ext4 -L \u0026quot;home\u0026quot; -U \u0026quot;$(blkid -o value -s UUID /dev/sda7)\u0026quot; /dev/sda7 mkswap /dev/sda3 mount /dev/sda5 /mnt mount /dev/sda2 /mnt/boot mount /dev/sda7 /mnt/home  Распаковываем сжатый образ.\nunsquashfs -d /mnt -f ~/backup/myarch.sfs  Проверим и отмонтируем раздел.\nls /mnt umount /dev/sda2 umount /dev/sda7 umount /dev/sda5  Монтируем раздел root(dev/sda5), boot и др., если нужно.\nmount /dev/sda5 /mnt mount /dev/sda2 /mnt/boot mount /dev/sda7 /mnt/home swapon /dev/sda3  Редактируем/Генерируем если нужно /etc/fstab, /etc/mkinitcpio.conf.\nrm /mnt/etc/fstab genfstab -pU /mnt \u0026gt; /mnt/etc/fstab  Делаем chroot в новую систему.\narch-chroot /mnt /bin/zsh  Или chroot /mnt /bin/bash Debian подобных.\nСоздаем initramfs-образы.\nmkinitcpio -p linux  Настройка ключей pacman.\npacman-key --init pacman-key --populate  Обновляем меню загрузчика груб, os-prober (для поиска других ОС).\npacman -S os-prober grub-install /dev/sda grub-mkconfig -o /boot/grub/grub.cfg  Выходим из chroot, размонтируем разделы и перезагружаемся уже в восстановленную систему!\nexit umount /mnt/boot umount /mnt/home umount /mnt reboot  Монтирование образа # mount ~/backup/myarch.sfs -t squashfs -o loop /mnt  Теперь вы можете скопировать из образа любые нужные файлы cp -p.\nДобавить что-либо таким способом не получится, для этого нужно будет опять воспользоваться mksquashfs.\n"}).add({id:13,href:"/wiki/install/next-install/",title:"Рекомендации после установки",description:"Всегда помните о существовании Arch Wiki, большинство ответов уже существует, не ленитесь читать. Более актуальная информация на англ. языке.\n Обновление ключей # Если возникли проблемы с обновлением, или установкой пакетов выполните данные рекомендации.\nsudo pacman-key --init \u0026amp;\u0026amp; sudo pacman-key --populate \u0026amp;\u0026amp; sudo pacman-key --refresh-keys \u0026amp;\u0026amp; sudo pacman -Syy   Если ошибка с содержанием hkps.pool.sks-keyservers.net, не может достучаться до сервера ключей выполните команды ниже. Указываем другой сервер ключей.",content:" Всегда помните о существовании Arch Wiki, большинство ответов уже существует, не ленитесь читать. Более актуальная информация на англ. языке.\n Обновление ключей # Если возникли проблемы с обновлением, или установкой пакетов выполните данные рекомендации.\nsudo pacman-key --init \u0026amp;\u0026amp; sudo pacman-key --populate \u0026amp;\u0026amp; sudo pacman-key --refresh-keys \u0026amp;\u0026amp; sudo pacman -Syy   Если ошибка с содержанием hkps.pool.sks-keyservers.net, не может достучаться до сервера ключей выполните команды ниже. Указываем другой сервер ключей.\n --keyserver hkp://pool.sks-keyservers.net --keyserver hkp://keyserver.ubuntu.com  sudo pacman-key --init \u0026amp;\u0026amp; sudo pacman-key --populate sudo pacman-key --refresh-keys --keyserver keys.gnupg.net sudo pacman -Syy   Если ошибка с содержанием /var/lib/pacman/sync, выполните команду ниже и повторите пункт с обновлением ключей.\n sudo rm -rf /var/lib/pacman/sync/*   Если ошибка с содержанием /var/lib/pacman/db.lck, выполните команду.\n sudo rm /var/lib/pacman/db.lck  Package signing\nИспользуйте алиасы # Алиасы — сокращение команд, находятся в файле ~/.alias_zsh.\nYay работает, как pacman, т.е. выполняет теже функции, поэтому я в основном использую команды yay для манипуляции с пакетами. Вот данный набор из файла.\n alias y=\u0026quot;yay -S\u0026quot; установка. alias yn=\u0026quot;yay -S --noconfirm\u0026quot; установка без подтверждения. alias ys=\u0026quot;yay\u0026quot; поиск с дальнейшим выбором по цифре. alias ysn=\u0026quot;yay --noconfirm\u0026quot; поиск с дальнейшим выбором по цифре, без подтверждения. alias yc=\u0026quot;yay -Sc\u0026quot; очистка кэша. alias yy=\u0026quot;yay -Syy\u0026quot; синхронизация баз зеркал. alias yu=\u0026quot;yay -Syyu\u0026quot; обновление. alias yun=\u0026quot;yay -Syyu --noconfirm\u0026quot; обновление без подтверждения. alias yr=\u0026quot;yay -R\u0026quot; удаление пакет(а,ов). alias yrn=\u0026quot;yay -R --noconfirm\u0026quot; удаление пакет(а,ов) без подтверждения.  Пример удаления: yrn htop.\nКоманда cache, для очистки кэша пакетов и оптимизация базы pacman. Все исполняемые скрипты лежат в ~/.bin.\nИнформация о системе # Краткая информация о Вашей системе.\nneofetch  Подробней о железе.\nyay -S inxi # inxi -F  Скорость интернета # speed  После перезагрузки в grub должны быть доступны другие дистрибутивы и ос.\nСмена оболочки # Если вас не устраивает zsh, всегда можно переключить.\nДля смены оболочки на BASH введите в терминале следующее: chsh -s /bin/bash.\nДля смены оболочки на ZSH введите в терминале следующее: chsh -s /bin/zsh.\nЗеркала — Reflector # Это ускорит загрузку пакетов. Arch Wiki.\nВ Ctlos установлен скрипт ~/.bin/mirrors, отредактируйте его под ближайшие к Вам страны, а затем запустите от обычного пользователя.\nОпции #  reflector --list посмотреть список доступных для использования стран и кодов. -l 10 выбрать 10 из списка. -f 20 выбрать 20 по скорости. --sort rate сортировато по скорости загрузки. --sort score сортировато по рейтингу, оценки. -a 12 синхронизированы за последние 12 часов. --verbose подробный вывод.  Использование # # несколько стран mirrors -lc # одна страна mirrors -c # не учитывает страны mirrors  Прямой командой.\nsudo reflector -c ru,by,ua,pl -p https,http -l 20 --sort rate --save /etc/pacman.d/mirrorlist  sudo reflector -c ru,by,ua,pl -p https,http --sort rate -a 12 -l 10 --save /etc/pacman.d/mirrorlist  Или по одной.\nsudo reflector --verbose -c ru -p https,http --sort score --save /etc/pacman.d/mirrorlist  Проверим: cat /etc/pacman.d/mirrorlist.\nОбновление всей системы.\nsudo pacman -Syyu  Pacman hook # Создайте файл sudo nano /etc/pacman.d/hooks/mirrorupgrade.hook, содержимое ниже. В ArchWiki немного другой пример.\nВ Exec = Пропишите выполнение reflector с нужными вам опциями.\n[Trigger] Operation = Upgrade Type = Package Target = pacman-mirrorlist [Action] Description = Updating pacman-mirrorlist with reflector When = PostTransaction Depends = reflector Exec = /usr/bin/reflector -c ru,by,ua,pl -p https,http --sort rate -a 12 -l 10 --save /etc/pacman.d/mirrorlist  Данный хук будет выполнен после обновления pacman-mirrorlist.\n"}).add({id:14,href:"/wiki/wm/sway/",title:"Swaywm тайловый менеджер окон",description:"Sway — тайловый оконный менеджер wayland, почти аналог i3 в x11, swaywm.org.\nПредставляю вашему внимаю готовый к употреблению wm с небольшим описание, немного скринов.\nСкачать iso образ #  Данный оконный менеджер доступен в xfce iso, метод online установки.\n  Скачать  Конфигурационные файлы #    Путь Описание     ~/.config/sway/config.d/hotkeys Горячие клавиши.   ~/.config/sway/config.d/app_conf Роли окон.   ~/.config/sway/config.d/theme Внешний вид.   ~/.",content:"  Sway — тайловый оконный менеджер wayland, почти аналог i3 в x11, swaywm.org.\nПредставляю вашему внимаю готовый к употреблению wm с небольшим описание, немного скринов.\nСкачать iso образ #  Данный оконный менеджер доступен в xfce iso, метод online установки.\n  Скачать  Конфигурационные файлы #    Путь Описание     ~/.config/sway/config.d/hotkeys Горячие клавиши.   ~/.config/sway/config.d/app_conf Роли окон.   ~/.config/sway/config.d/theme Внешний вид.   ~/.config/sway/waybar Конфиги и скрипты панели.   ~/.config/sway/swaylock/config Блокировка экрана.   ~/.config/sway/wofi Конфиги, стили лаунчера.   ~/.config/sway/mako Конфиг уведомлений.   ~/.config/sway/kitty Конфиги терминала.    Горячие клавиши # Конфиг ~/.config/sway/config.d/hotkeys.\n MOD4: Super/Windows MOD1: Alt  Опция --to-code, работа вне зависимости от раскладки.\nРежимы и управление окнами #    Ключ Описание     super+space toggle: переключение в активных режимах.   super+shift+space toggle: переключение окна в плавающий и обратно.   super+shift+minus scratchpad: Отправка окна в блокнот.   super+minus Сворачивание, вызов окна в scratchpad-е.   super+b Горизонтальный сплит.   super+v Вертикальный сплит.   super+e Переключение сплита.   super+s Режим стэйкинга.   super+w Режим табов.   super+r И изменение размеров vim(h,j,k,l) или ←,→,↑,↓, выход из режима Esc.   super+{←,→,↑,↓} или super+{h,j,k,l} Перемещение по окнам.   super+shift+{←,→,↑,↓} или super+shift+{h,j,k,l} Меняет позицию окна.   super+{1-9,0} Переход на тег.   super+shift+{1-9,0} Отправка окна на тег.   super+shift+b Показать скрыть панель waybar.    Зажатая Super(win) и клавиши мыши манипулируют окнами: положение(левый клик), размер(правый клик).\nЗапуск утилит #    Ключ Описание     alt+shift Переключение раскладки(us,ru).   super+shift+r Рестарт, перечитать конфиг.   super+Return Терминал kitty.   super+shift+Return Плавающий терминал.   super+z Закрыть окно.   super+d Wofi - меню(лаунчер).   super+alt+Del Меню выхода.   super+Del Блокировка экрана.   alt+Tab Список открытых окон.   Print Скрин всего экрана, падает в изображения.   super+Print Меню скриншотов(grimshot wofi).   alt+w Firefox.   alt+t Менеджер файлов thunar.     Если что-то не устраивает, меняйте под себя и релоад конфига super+shift+r.\n Ссылки #  Wiki sway Arch wiki  Комментарии приветствуются. Вступай в telegram чат: t.me/ctlos, или прокомментируй на форуме(ссылка ниже).\n"}).add({id:15,href:"/wiki/backup/",title:"Резервное копирование",description:"Prologue Doks.",content:""}).add({id:16,href:"/wiki/packages/mpd/",title:"Mpd и ncmpcpp",description:"Настройка mpd сервера и консольного плеера ncmpcpp. Локальное и удаленное управление.\n Digital Ocean Bonus 100$ Проголосуй за следующее видео  Установка локально # Локально, на своей машине установите пакеты.\nyay -S mpd mpc ncmpcpp mpv  Конфигурация mpd # mkdir -p ~/.config/mpd nano ~/.config/mpd/mpd.conf   Важно, указывайте именно 0.0.0.0, а не localhost и не 127.0.0.1.\n bind_to_address \u0026quot;0.0.0.0\u0026quot; port \u0026quot;6600\u0026quot; music_directory \u0026quot;/media/files/mega/music\u0026quot; playlist_directory \u0026quot;~/.config/mpd/playlists\u0026quot; db_file \u0026quot;~/.config/mpd/db\u0026quot; log_file \u0026quot;/tmp/logmpd\u0026quot; pid_file \u0026quot;~/.",content:"Настройка mpd сервера и консольного плеера ncmpcpp. Локальное и удаленное управление.\n Digital Ocean Bonus 100$ Проголосуй за следующее видео  Установка локально # Локально, на своей машине установите пакеты.\nyay -S mpd mpc ncmpcpp mpv  Конфигурация mpd # mkdir -p ~/.config/mpd nano ~/.config/mpd/mpd.conf   Важно, указывайте именно 0.0.0.0, а не localhost и не 127.0.0.1.\n bind_to_address \u0026quot;0.0.0.0\u0026quot; port \u0026quot;6600\u0026quot; music_directory \u0026quot;/media/files/mega/music\u0026quot; playlist_directory \u0026quot;~/.config/mpd/playlists\u0026quot; db_file \u0026quot;~/.config/mpd/db\u0026quot; log_file \u0026quot;/tmp/logmpd\u0026quot; pid_file \u0026quot;~/.config/mpd/pid\u0026quot; state_file \u0026quot;~/.config/mpd/state\u0026quot; auto_update \u0026quot;yes\u0026quot; auto_update_depth \u0026quot;2\u0026quot; audio_output { type \u0026quot;pulse\u0026quot; # or pulse,alsa name \u0026quot;MPD live\u0026quot; } audio_output { type \u0026quot;fifo\u0026quot; name \u0026quot;MPD FIFO\u0026quot; path \u0026quot;/tmp/mpd.fifo\u0026quot; format \u0026quot;44100:16:2\u0026quot; }  Конфигурация ncmpcpp # mkdir ~/.ncmpcpp nano ~/.ncmpcpp/config  {{\u0026lt; mpd_host = localhost mpd_port = 6600 mpd_crossfade_time = 2 visualizer_data_source = /tmp/mpd.fifo visualizer_output_name = \u0026quot;Visualizer feed\u0026quot; visualizer_in_stereo = no visualizer_type = spectrum visualizer_look = ●┃ visualizer_color = cyan, green, yellow, magenta, red song_list_format = \u0026quot;{{%a - %t}|{%f}}{$R%l}\u0026quot; song_status_format = \u0026quot;{{%a{ $2//$9 %b{, %y}} $2//$9 }{%t$/b}}|{$b%f$/b}\u0026quot; song_library_format = {{%a - %t} (%b)}|{%f} now_playing_prefix = \u0026quot;$b$5\u0026quot; now_playing_suffix = \u0026quot;$/b$9\u0026quot; playlist_display_mode = classic autocenter_mode = yes progressbar_look = \u0026quot;▃▃▃\u0026quot; header_visibility = no statusbar_visibility = no titles_visibility = no follow_now_playing_lyrics = no enable_window_title = no external_editor = nano colors_enabled = yes empty_tag_color = red header_window_color = yellow volume_color = yellow state_line_color = red state_flags_color = yellow main_window_color = default color1 = red color2 = red progressbar_color = black progressbar_elapsed_color = red statusbar_color = default alternative_ui_separator_color = magenta window_border_color = yellow active_window_border = magenta execute_on_song_change = notify-send \u0026quot;Now Playing ♫\u0026quot; \u0026quot;$(mpc current)\u0026quot; \u0026gt;}}  Настройка на сервере # Достаточно скопировать данные конфиги на сервер. Замените юзера и ip.\nscp -r ~/.ncmpcpp cretm@134.122.88.241:~/ ssh cretm@134.122.88.241 \u0026quot;mkdir -p ~/.config/mpd\u0026quot; scp -r ~/.config/mpd/mpd.conf cretm@134.122.88.241:~/.config/mpd # login ssh cretm@134.122.88.241  И в конфиг mpd добавить секцию http после pulse.\nnano ~/.config/mpd/mpd.conf  audio_output { type \u0026quot;httpd\u0026quot; name \u0026quot;HTTP mpd\u0026quot; encoder \u0026quot;vorbis\u0026quot; port \u0026quot;8000\u0026quot; bitrate \u0026quot;128\u0026quot; format \u0026quot;44100:16:1\u0026quot; always_on \u0026quot;yes\u0026quot; tags \u0026quot;yes\u0026quot; }  Установка на сервере # ssh cretm@134.122.88.241 yay -S mpd ncmpcpp  Запуск сервиса # Добавление в автозапуск системд сервиса и запуск от юзера. Это нужно выполнить везде.\nsystemctl --user enable --now mpd  Запуск потока # mpv http://cloud.ctlos.ru:8000 # или ip mpv http://134.122.88.241:8000  Управление воспроизведением # ncmpcpp -h cloud.ctlos.ru # или ip и порт ncmpcpp -h 134.122.88.241 -p 6600  Если зашли по ssh, то дополнительные флаги не нужны.\nssh cretm@134.122.88.241 ncmpcpp  Ссылки по теме #  Digital Ocean Bonus 100$ Mpd Mpd Tips ncmpcpp Config dotshare  "}).add({id:17,href:"/wiki/other/gnupg/",title:"Использование GnuPG",description:"Цифровые подписи # wiki.archlinux.org.\nГенерация, создание пары ключей.\ngpg --full-gen-key  Просмотр списка ключей.\ngpg --list-keys gpg --list-secret-keys gpg --list-public-keys  Id ключей.\ngpg --list-public-keys --keyid-format LONG gpg --list-secret-keys --keyid-format LONG  Удалить ключ.\ngpg --delete-secret-keys 98F76D97B786E6A3 gpg --delete-keys 98F76D97B786E6A3  Редактировать ключ.\ngpg --expert --edit-key ctlos@protonmail.com  Экспорт открытого ключа в текстовом виде.\ngpg --armor --output pubkey.txt --export 98F76D97B786E6A3  Экспорт закрытого ключа в текстовом виде.\ngpg --armor --output privkey.",content:"Цифровые подписи # wiki.archlinux.org.\nГенерация, создание пары ключей.\ngpg --full-gen-key  Просмотр списка ключей.\ngpg --list-keys gpg --list-secret-keys gpg --list-public-keys  Id ключей.\ngpg --list-public-keys --keyid-format LONG gpg --list-secret-keys --keyid-format LONG  Удалить ключ.\ngpg --delete-secret-keys 98F76D97B786E6A3 gpg --delete-keys 98F76D97B786E6A3  Редактировать ключ.\ngpg --expert --edit-key ctlos@protonmail.com  Экспорт открытого ключа в текстовом виде.\ngpg --armor --output pubkey.txt --export 98F76D97B786E6A3  Экспорт закрытого ключа в текстовом виде.\ngpg --armor --output privkey.txt --export-secret-keys 98F76D97B786E6A3  Экспорт Certificate.\ngpg -a --gen-revoke 98F76D97B786E6A3 \u0026gt; rev_cert.gpg  Экспорт открытого ключа на keyserver.\ngpg --keyserver keys.gnupg.net --send-keys 8123459  Импорт открытого ключа из файла.\ngpg --import key.txt  Или по номеру.\ngpg --recv-keys 98F76D97B786E6A3  Импорт закрытого ключа.\ngpg --allow-secret-key-import --import privkey.txt  Импорт открытого ключа с keyserver.\ngpg --keyserver keys.gnupg.net --recv-keys 98F76D97B786E6A3  Поиск.\ngpg --keyserver keys.gnupg.net --search-keys mail@example.com  Обновление.\ngpg --keyserver keys.gnupg.net --refresh-keys  Пример подписи и проверки подписи.\ngpg --detach-sign --no-armor ctlos.iso gpg --verify ctlos.iso.sig ctlos.iso  Зашифровать файл.\ngpg --encrypt-files -r 98F76D97B786E6A3 secret.tar  Расшифровать файл.\ngpg -d secret.tar.asc gpg -d secret.tar.asc \u0026gt; secret.tar gpg -o secret.tar --decrypt secret.tar.asc  Шифровать каталог.\ngpgtar --encrypt --output secret.tar -r 98F76D97B786E6A3 dir/ gpgtar -c -o secret.tar dir/  Просмотр.\ngpgtar -t secret.tar  Расшифровать каталог.\ngpgtar -d secret.tar  "}).add({id:18,href:"/wiki/install/pkg-manager/",title:"Пакетные менеджеры",description:"Список некоторых программ Arch Wiki List applications.\nВ Arch принято использовать консольные пакетные менеджеры. Pacman главный и установлен по умолчанию, но существуют и графические менеджеры.\nДля Aur репозитория существует множество консольных пакетных менеджеров, я на текущий момент использую yay и он установлен во всех моих образах. Он берет на себя роль управления не только aur пакетами, но и pacman. У него те же флаги и немного своих https://github.com/Jguer/yay.\nPamac manager # Установка.",content:"Список некоторых программ Arch Wiki List applications.\nВ Arch принято использовать консольные пакетные менеджеры. Pacman главный и установлен по умолчанию, но существуют и графические менеджеры.\nДля Aur репозитория существует множество консольных пакетных менеджеров, я на текущий момент использую yay и он установлен во всех моих образах. Он берет на себя роль управления не только aur пакетами, но и pacman. У него те же флаги и немного своих https://github.com/Jguer/yay.\nPamac manager # Установка.\nyay -S pamac-aur  Навигация по категориям или поиск, в настройках включите поддержку aur.\nGnome software # Менеджер пакетов Gnome, хорошо использовать в связке с flatpak.\nyay -S gnome-software gnome-software-packagekit-plugin  Flatpak # Flatpak – это современный, прогрессивный формат самодостаточных пакетов для GNU/Linux. Он поддерживает рантаймы, изоляцию внутри песочниц, установку без наличия прав супер пользователя и многое другое.\nУстановка.\nsudo pacman -S flatpak  Основной репозиторий flatpak flathub.org/apps.\nДобавление репозитория flathub.\nflatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo  Удаление репозитория flathub.\nflatpak remote-delete flathub  Обновление flatpak.\nflatpak update  Поиск.\nflatpak search libreoffice  Список пакетов в репозитории flathub.\nflatpak remote-ls flathub  Установка пакета в домашнюю директорию.\nflatpak install flathub com.valvesoftware.Steam  Запуск.\nflatpak run com.valvesoftware.Steam  Список установленых пакетов.\nflatpak list  Обновление пакета.\nflatpak update com.valvesoftware.Steam  Обновление пакетов.\nflatpak update  Удаление пакета.\nflatpak uninstall com.valvesoftware.Steam  После удаления приложения могут оставаться неиспользуемые рантаймы, очистим и их.\nflatpak uninstall --unused  "}).add({id:19,href:"/wiki/backup/netcat/",title:"Работа с Netcat, ssh, rsync",description:"Установка nc и pv # sudo pacman -S gnu-netcat pv  Примеры передач.\ncat dump.iso | pv -b | nc -l 3333 dd if=/dev/sdb5 | gzip -9 | nc -l 3333 tar -czf - /etc/ | pv -b | nc -l 3333  Примеры получения.\nnc 187.187.55.18 3333 | pv -b \u0026gt; dump.iso nc 187.187.55.18 3333 | pv -b \u0026gt; ddsdb5dump.img.gz nc 187.187.55.18 3333 | pv -b \u0026gt; dump.tar.gz  Пример ssh туннеля # Это нужно в том случае, если нет доступа к порту 3333.",content:"Установка nc и pv # sudo pacman -S gnu-netcat pv  Примеры передач.\ncat dump.iso | pv -b | nc -l 3333 dd if=/dev/sdb5 | gzip -9 | nc -l 3333 tar -czf - /etc/ | pv -b | nc -l 3333  Примеры получения.\nnc 187.187.55.18 3333 | pv -b \u0026gt; dump.iso nc 187.187.55.18 3333 | pv -b \u0026gt; ddsdb5dump.img.gz nc 187.187.55.18 3333 | pv -b \u0026gt; dump.tar.gz  Пример ssh туннеля # Это нужно в том случае, если нет доступа к порту 3333. Вся передача шифруется, т.к. ssh.\nСоздаем мост(туннель) на ip 127.0.0.1(localhost), на порт 23333. -p 22 Это стандартный ssh порт, обычно его меняют.\nssh -p 22 -f -L 23333:127.0.0.1:3333 name@187.187.55.18 sleep 10; \\ nc 127.0.0.1 23333 | pv -b \u0026gt; ctlos.iso # проброс порта ssh -p 22 -fN -L 23333:127.0.0.1:3333 name@187.187.55.18  scp # С локалки на удаленнку.\nscp -P 2222 file.txt file2.txt name@187.187.55.18:/home/user/dir scp -P 2222 -r dir1 name@187.187.55.18:/home/user/dir2  С удаленки на локалку.\nscp -P 2222 name@187.187.55.18:file.txt /home/user/dir scp -P 2222 name@187.187.55.18:~/\\{file1,file2,file3\\} . scp -P 2222 -r name@187.187.55.18:/home/dir/ /home/user/dir/  С одного сервака на другой.\nscp name@187.187.55.18:/dir/file.txt name@198.198.188.18:/name/dir/  Синхронизация rsync # Установка rsync.\nsudo pacman -S rsync  На сервере нужно создать диреторию /dump, запустить сервис(daemon), настроить конфиг и открыть 873 порт(tcp).\nsudo systemctl start rsyncd.service  uid - пользователь на сервере, gid - группа в которой он состоит(обычно users). Создаем на сервере /dump и даём ему права.\nsudo mkdir /dump sudo chown username:users /dump  Конфиг: /etc/rsyncd.conf. Укажите ip в hosts deny с которого вы подключаетесь.\nsyslog facility=daemon pid file=/var/run/rsyncd.pid transfer logging = yes log file = /var/log/rsyncd.log max connections = 10 exclude = lost+found/ dont compress = *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz [dump] comment = rsync open for dump uid = username gid = users #auth users = st #secrets file = /etc/rsyncd.scrt path = /dump/ list = yes read only = no hosts allow = 188.128.110.170 hosts deny = *  После изменения конфига сделать рестарт. Авторизацию по паролю я не использую, поэтому две строки закомментил(#).\nsudo systemctl restart rsyncd.service  По моим тестам лучше передавать не сжатые данные(Синхронизацция).\nОтправка файла и пример директории.\nrsync -auvz -L -P ~/test.sfs rsync://187.187.55.18/dump rsync -auvz -L -P ~/dir/* rsync://187.187.55.18/dump  Получение.\nrsync -auvz -L -P rsync://187.187.55.18/dump ~/.dump/  Ssh.\nrsync -auvz -L -P -e \u0026quot;ssh -p 2222\u0026quot; name@187.187.55.18:/path/to/copy /local/path rsync -auvz -L -P -e \u0026quot;ssh -p 2222\u0026quot; /local/path name@187.187.55.18:/path/to/copy  "}).add({id:20,href:"/wiki/config/grub-uefi/",title:"Установка Grub UEFI",description:"Подготовка # Информация о диске.\nparted /dev/sda print  Создать таблицу GPT. Создать boot раздел 512M, выбрать тип EFI.\ncfdisk  parted /dev/sda print  Форматируем.\nmkfs.fat -F32 /dev/sda1  Монтируем корень и другие, если надо.\nmount /dev/sda2 /mnt  Создаем efi дерикторию и др., если надо.\nmkdir -p /mnt/boot/efi  Монтируем boot EFI.\nmount /dev/sda1 /mnt/boot/efi  Установка # Выполняем chroot.\narch-chroot /mnt  Установим Grub.\npacman -S grub efibootmgr dosfstools os-prober  Установим grub в /boot/efi.",content:"Подготовка # Информация о диске.\nparted /dev/sda print  Создать таблицу GPT. Создать boot раздел 512M, выбрать тип EFI.\ncfdisk  parted /dev/sda print  Форматируем.\nmkfs.fat -F32 /dev/sda1  Монтируем корень и другие, если надо.\nmount /dev/sda2 /mnt  Создаем efi дерикторию и др., если надо.\nmkdir -p /mnt/boot/efi  Монтируем boot EFI.\nmount /dev/sda1 /mnt/boot/efi  Установка # Выполняем chroot.\narch-chroot /mnt  Установим Grub.\npacman -S grub efibootmgr dosfstools os-prober  Установим grub в /boot/efi.\ngrub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=Arch --force  Сконфигурируем Grub.\ngrub-mkconfig -o /boot/grub/grub.cfg  "}).add({id:21,href:"/wiki/packages/",title:"Программы",description:"Prologue Doks.",content:""}).add({id:22,href:"/wiki/packages/ffmpeg-stream/",title:"Запуск трансляции на youtube и livepeer",description:"Стриминг с помощью проекта live-stream-radio. Потребуется nodejs lts и ffmpeg.\nFfmpeg — мощный инструмент конвертирования, кодирования и записи чего угодно.\nyay -S ffmpeg   Результат с live-stream-radio youtu.be/Glu60hqtptc. Результат на чистом ffmpeg youtu.be/LC640rkEs3Y.  Устновка nvm # Скопируйте команду curl в репо nvm, так как версия может изменится.\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash  И добавьте в конце ~/.zshrc или ~/.bashrc переменные среды.\nexport NVM_DIR=\u0026quot;$HOME/.config/nvm\u0026quot; # Lazy load if [[ -s \u0026quot;$NVM_DIR/nvm.",content:"Стриминг с помощью проекта live-stream-radio. Потребуется nodejs lts и ffmpeg.\nFfmpeg — мощный инструмент конвертирования, кодирования и записи чего угодно.\nyay -S ffmpeg   Результат с live-stream-radio youtu.be/Glu60hqtptc. Результат на чистом ffmpeg youtu.be/LC640rkEs3Y.  Устновка nvm # Скопируйте команду curl в репо nvm, так как версия может изменится.\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash  И добавьте в конце ~/.zshrc или ~/.bashrc переменные среды.\nexport NVM_DIR=\u0026quot;$HOME/.config/nvm\u0026quot; # Lazy load if [[ -s \u0026quot;$NVM_DIR/nvm.sh\u0026quot; ]]; then NODE_GLOBALS=(`find $NVM_DIR/versions/node -maxdepth 3 -type l -wholename '*/bin/*' | xargs -n1 basename | sort | uniq`) NODE_GLOBALS+=(\u0026quot;node\u0026quot;) NODE_GLOBALS+=(\u0026quot;nvm\u0026quot;) # Lazy-loading nvm + npm on node globals load_nvm () { [ -s \u0026quot;$NVM_DIR/nvm.sh\u0026quot; ] \u0026amp;\u0026amp; \\. \u0026quot;$NVM_DIR/nvm.sh\u0026quot; } # Making node global trigger the lazy loading for cmd in \u0026quot;${NODE_GLOBALS[@]}\u0026quot;; do eval \u0026quot;${cmd}(){ unset -f ${NODE_GLOBALS}; load_nvm; ${cmd} \\$@ }\u0026quot; done fi  Установка npm # Установите nodejs lts версию, npm идет в комплекте.\nnvm install --lts  Проверить версии.\n node -v npm -v  Live stream radio # Исходники проекта live-stream-radio. Установить глобально -g.\nnpm install -g live-stream-radio  Создание проекта # live-stream-radio --generate stream  Конфигурация # Замените значение stream_key на свой ключ youtube трансляции.\nnano ~/stream/config.json  Запуск стрима # Перед запуском закиньте mp3 файлы в ~/stream/audio.\nlive-stream-radio --start stream  Чистый ffmpeg # Создайте дерево директорий и скрипт msrt.sh. В скрипте замените значения KEY.\nmkdir ~/stream/{out,music,audio}   music тут храним всю музыку. audio сюда копируем нужное для стрима. out сюда упадут переименованные файлы 1.mp3,2mp3....  Такой костыль с переименованием, так как ffmpeg сыпет ошибки из-за содержания в именах пробелов и скобок.\nnano ~/stream/msrt.sh  #! /bin/bash STREAM_URL=\u0026quot;rtmp://a.rtmp.youtube.com/live2\u0026quot; KEY=\u0026quot;bla-bla-bla\u0026quot; # STREAM_URL=\u0026quot;rtmp://fra-rtmp.livepeer.com/live\u0026quot; # KEY=\u0026quot;bla-bla-bla\u0026quot; FOLDER=\u0026quot;audio\u0026quot; out=\u0026quot;out\u0026quot; rm -rf $out/* j=0; for i in $FOLDER/*.mp3; do let j+=1; cp -r \u0026quot;${i}\u0026quot; $out/$j.mp3; done rm music.txt for i in $out/*.mp3 do printf \u0026quot;file '%s'\\n\u0026quot; $i \u0026gt;\u0026gt; music.txt done ffmpeg -f concat -i music.txt -c copy -f mpegts -y transport.ts 2\u0026gt; /dev/null \u0026amp; # -bsf:v h264_mp4toannexb if [ \u0026quot;$1\u0026quot; = \u0026quot;-s\u0026quot; ]; then ffmpeg \\ -re -fflags +genpts -stream_loop -1 -i transport.ts \\ -filter_complex \u0026quot;[0:a]avectorscope=s=854x480:zoom=1.2:rc=40:gc=160:bc=80:rf=15:gf=10:bf=5,format=yuv420p[v]\u0026quot; \\ -map \u0026quot;[v]\u0026quot; -map 0:a -r 20 -g 40 \\ -pix_fmt yuv420p -x264-params keyint=40:min-keyint=40:scenecut=-1 \\ -s 854x480 -b:v 1000k -b:a 128k -ar 44100 -acodec aac \\ -vcodec libx264 -preset superfast -bufsize 512k -crf 18 -threads 2 \\ -f flv -flvflags no_duration_filesize \u0026quot;$STREAM_URL/$KEY\u0026quot; fi  Сделайте его исполняемым.\ncd ~/stream chmod +x msrt.sh  Закиньте нужные mp3 файлы в директорию ~/stream/audio.\nЗапуск скрипта ./msrt.sh без аргумента, скопирует содержимое ~/stream/audio с переименованием в ~/stream/out, создаст файл ~/stream/transport.ts и список ~/stream/music.txt.\nЗапуск скрипта ./msrt.sh -s с аргументом повторит первое действие и запустит стрим в бесконечном цикле. Запустить лучше в tmux вкладке и пусть работает, остановить как обычно ctrl+c. В другой вкладке можно манипулировать файлами и выполнять перестроение ~/stream/transport.ts, запустив без аргумента ./msrt.sh, не останавливая поток.\nДлительность ffmpeg -i transport.ts, смотри Duration: 00:16:50.86 длительность в сумме.\nLivepeer # Создайте бесплатный аккаунт в livepeer.com, создайте stream.\nСсылка стрима, публичный адрес, запустить в проигрывателе или на веб странице, ей следует делиться.\nhttps://fra-cdn.livepeer.com/hls/11af93cghjfgjpqz6a/index.m3u8  RTMP ingest URL 1 подставьте в STREAM_URL и Stream key в KEY, как вы уже наверняка поняли это скрытые данные, имея доступ к ним любой может вещать на адрес выше.\nSTREAM_URL=\u0026quot;rtmp://fra-rtmp.livepeer.com/live\u0026quot; KEY=\u0026quot;bla-bla-bla\u0026quot;  Скопируйте и сохраните код ниже в файл index.html, отредактируйте в нем строку с url стрима, замените на свой.\nvar videoSrc = 'https://fra-cdn.livepeer.com/hls/z8kdh258fwnopq14/index.m3u8';  Исходник.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;meta name=\u0026quot;viewport\u0026quot; content=\u0026quot;width=device-width, initial-scale=1.0\u0026quot;\u0026gt; \u0026lt;title\u0026gt;live stream\u0026lt;/title\u0026gt; \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; href=\u0026quot;https://cdnjs.cloudflare.com/ajax/libs/mini.css/3.0.1/mini-default.min.css\u0026quot;\u0026gt; \u0026lt;script src=\u0026quot;https://cdn.jsdelivr.net/npm/hls.js@latest\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026quot;container\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;row\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;col-sm-8\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;card fluid\u0026quot;\u0026gt; \u0026lt;h1\u0026gt;Stream music\u0026lt;/h1\u0026gt; \u0026lt;video id=\u0026quot;video\u0026quot; class=\u0026quot;\u0026quot; controls\u0026gt;\u0026lt;/video\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;col-sm-8\u0026quot;\u0026gt; \u0026lt;p\u0026gt;Hls live stream.\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; var video = document.getElementById('video'); var videoSrc = 'https://fra-cdn.livepeer.com/hls/z8kdh258fwnopq14/index.m3u8'; if (video.canPlayType('application/vnd.apple.mpegurl')) { video.src = videoSrc; } else if (Hls.isSupported()) { var hls = new Hls(); hls.loadSource(videoSrc); hls.attachMedia(video); } \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Вот и все. Этот файл можно открыть с помощью браузера локально, или закинуть на какой-либо сервер, хостинг. Тем самым получить независимую трансляцию от youtube и стримить туда домашнее порно :). Скрипт можно легко адаптировать и под видео файлы, но это уже другая история.\n Если Вы знаете более изящные способы, или имеете какие-либо идеи, дайте мне знать в telegram, там же можно обсудить, задать вопрос по этой теме.\n Всем добра, любви и процветания! До свидания.\nСсылки #  live-stream-radio creating-music-videos visualization-tricks ffmpeg_audio_visualisation Repeat Video ffmpeg Music  "}).add({id:23,href:"/wiki/other/git-start/",title:"Настройка git и использование",description:"Настройка git # Конфигурация.\ngit config --global user.name \u0026quot;ctlos\u0026quot; git config --global user.email \u0026quot;ctlos@protonmail.com\u0026quot;  Генерация ssh-ключей.\nssh-keygen -t rsa -b 4096 -C \u0026quot;ctlos@protonmail.com\u0026quot;  Забрать ключ в ~/.ssh имя id_rsa.pub.\nИспользование # Инициализация.\ngit init  Статус.\ngit status  Игнорирование файлов и каталогов .gitignore.\nДобавление изменений.\ngit add . git commit -m \u0026quot;test\u0026quot;  Работа с github # Создание репозитория на github.com.\ngit remote add origin https://github.com/ctlos/ctlosiso git remote add origin git@github.",content:"Настройка git # Конфигурация.\ngit config --global user.name \u0026quot;ctlos\u0026quot; git config --global user.email \u0026quot;ctlos@protonmail.com\u0026quot;  Генерация ssh-ключей.\nssh-keygen -t rsa -b 4096 -C \u0026quot;ctlos@protonmail.com\u0026quot;  Забрать ключ в ~/.ssh имя id_rsa.pub.\nИспользование # Инициализация.\ngit init  Статус.\ngit status  Игнорирование файлов и каталогов .gitignore.\nДобавление изменений.\ngit add . git commit -m \u0026quot;test\u0026quot;  Работа с github # Создание репозитория на github.com.\ngit remote add origin https://github.com/ctlos/ctlosiso git remote add origin git@github.com:ctlos/ctlosiso.git  Отменить регистрацию удаленного репозитария.\ngit remote rm origin  Отправка на github.com.\ngit push -u origin master git push --set-upstream origin master  Клонирование.\ngit clone https://github.com/ctlos/ctlosiso  Ssh.\ngit clone git@github.com:ctlos/ctlosiso.git  Или ветку.\ngit clone -b openbox git@github.com:ctlos/ctlosiso.git  Список репозиториев.\ngit remote  Отправка на github.\ngit push ctlosiso master  Версия проекта tag.\ngit tag -f v1.0.0 git push origin v1.0.0 git tag -a v1.0.0 -m \u0026quot;Release of version 1.0.0\u0026quot; git push --tags # удалить tag ветку локально git tag -d v1.0.0 # удаленно git push --delete origin v1.0.0  Релиз с созданием тега.\npacman -S hub # черновик hub release create -d -a ctlos.iso -m \u0026quot;release test\u0026quot; -t \u0026quot;openbox\u0026quot; tag-test # публикация с привязкой к ветки и создание тега hub release create -a out/ctlos.iso -m \u0026quot;ctlos openbox 1.3.0\u0026quot; -t \u0026quot;openbox\u0026quot; v1.3.0-ob # script ~/.bin/grel.sh grel.sh v1.3.0-ob openbox  Новая ветка.\ngit branch work  Просмотр веток локально.\ngit branch  Просмотр веток и удаленных.\ngit branch -a  Создание локальных веток из удаленных.\ngit branch openbox origin/openbox git branch xfce origin/xfce git branch budgie origin/budgie  Отправка ветки на github.\ngit push origin dev  Перемещение по веткам.\ngit checkout work  Получить удаленную ветку.\ngit checkout -b bspwm origin/bspwm  Слияние веток. Перед этим переключить на ветку в которую сливаем.\ngit merge work  Удаление веток.\ngit branch -D work git push origin -d work  Просмотр изменений.\ngit log  Откат # Предварительно, получить хэш.\ngit reset --hard a3775a5485af0af20375cedf46112db5f813322a git push --force  Для контрибьюторов # 1.Форкаем оригинальный репозиторий https://github.com/ctlos/ctlosiso кнопкой Fork\n2.Клонируем форкнутый репозиторий\ngit clone https://github.com/user_login/ctlosiso cd ctlosiso  3.Создаем новую ветку\ngit checkout -b new_fix  4.Создаем upstream на оригинальный репозиторий\ngit remote add upstream https://github.com/ctlos/ctlosiso  5.Меняем файлы\n6.Делаем коммит и отправляем правки\ngit add . git commit -am \u0026quot;Fixes bla-bla\u0026quot; git push -u origin new_fix  7.Переходим в свой репозиторий https://github.com/user_login/ctlosiso и жмем кнопку Compare \u0026amp; pull\n8.Описываем какую проблему решает Пул Реквест с кратким описанием, зачем сделано изменение\n"}).add({id:24,href:"/wiki/install/ctlos-repo/",title:"Установка и настройка репозиториев ctlos",description:"Добавление ключа 1 #  Удалить все упомянания ctlos_repo из /etc/pacman.conf.\n sudo nano /etc/pacman.conf [ctlos_repo] Server = https://github.com/ctlos/$repo/raw/master/$arch ...  Установка #  Скачать и запустить скрипт. Автоматически установит запись в /etc/pacman.conf. Установит необходимые ключи.  curl -LO git.io/strap.sh sudo sh strap.sh  Добавление ключа 2 # Данный способ немного сложнее.\n# инициализация gpg pacman-key --init pacman -Sy wget \u0026amp;\u0026amp; wget git.io/ctlos.gpg pacman-key --add ctlos.gpg # или с key сервера pacman-key --recv-keys 98F76D97B786E6A3  Проверить отпечаток # pacman-key --finger 98F76D97B786E6A3  Подписываем ключ # pacman-key --lsign-key 98F76D97B786E6A3 # список pacman-key --list-keys  Обновляем ключи # pacman-key --populate # up key server pacman-key --refresh-keys  Устанавливаем зеркала # nano /etc/pacman.",content:"Добавление ключа 1 #  Удалить все упомянания ctlos_repo из /etc/pacman.conf.\n sudo nano /etc/pacman.conf [ctlos_repo] Server = https://github.com/ctlos/$repo/raw/master/$arch ...  Установка #  Скачать и запустить скрипт. Автоматически установит запись в /etc/pacman.conf. Установит необходимые ключи.  curl -LO git.io/strap.sh sudo sh strap.sh  Добавление ключа 2 # Данный способ немного сложнее.\n# инициализация gpg pacman-key --init pacman -Sy wget \u0026amp;\u0026amp; wget git.io/ctlos.gpg pacman-key --add ctlos.gpg # или с key сервера pacman-key --recv-keys 98F76D97B786E6A3  Проверить отпечаток # pacman-key --finger 98F76D97B786E6A3  Подписываем ключ # pacman-key --lsign-key 98F76D97B786E6A3 # список pacman-key --list-keys  Обновляем ключи # pacman-key --populate # up key server pacman-key --refresh-keys  Устанавливаем зеркала # nano /etc/pacman.conf [ctlos_repo] Server = https://github.com/ctlos/$repo/raw/master/$arch Server = https://osdn.net/projects/ctlos/storage/$repo/$arch Server = https://cvc.keybase.pub/$repo  Ctlos aur # Можете воспользоваться Ctlos aur репозиторием, пакетов не так много, но он содержит последнии версии пакетов.\nnano /etc/pacman.conf [ctlos-aur] SigLevel = Optional TrustAll Server = https://cloud.ctlos.ru/ctlos-aur  Зеркала #  https://ctlos.fission.app/   Если Вы заметите какие-либо проблемы в репозиториях, сообщите в Telegram Chat.\n "}).add({id:25,href:"/wiki/config/",title:"Конфигурирование",description:"Prologue Doks.",content:""}).add({id:26,href:"/wiki/other/screencast/",title:"Screencast",description:"Screencast, работа с видео/аудио. Скрипт в ~/.bin/cast.\nПараметры записи #  Pavucontrol, 32% микрофон. Запись simplescreenrecorder: MKV, H.264, rate 20, superfast, vorbis 128. Audacity: удаляем шумы(дважды), улучшаем звук. ffmpeg: заменяем аудио дорожку. ffmpeg: перекодируем в mp4, 1080p, 30 кадров, bit rate 128k, если нужно ускоряем на 20%. ffmpeg: накладываем 2 аудио дорожку, зацикливаем и понижаем звук. Обрезаем, если нужно.  Audacity #  Выделить фрагмент без звука, Эффекты-Noise Reduction-создать модель шума.",content:"Screencast, работа с видео/аудио. Скрипт в ~/.bin/cast.\nПараметры записи #  Pavucontrol, 32% микрофон. Запись simplescreenrecorder: MKV, H.264, rate 20, superfast, vorbis 128. Audacity: удаляем шумы(дважды), улучшаем звук. ffmpeg: заменяем аудио дорожку. ffmpeg: перекодируем в mp4, 1080p, 30 кадров, bit rate 128k, если нужно ускоряем на 20%. ffmpeg: накладываем 2 аудио дорожку, зацикливаем и понижаем звук. Обрезаем, если нужно.  Audacity #  Выделить фрагмент без звука, Эффекты-Noise Reduction-создать модель шума. Двойной клик на дорожке(выделить всю), Эффекты-Noise Reduction-ок(в 2 этапа). Нормализация. Если необходимо усиливаем звук Дб.  Изменяем голос #  Двойной клик на дорожке(выделить всю), Эффекты-Смена высоты тона. -5, ок. Файл-экспорт-как wav.  Замена аудио ffmpeg # ffmpeg -i input.mp4 -i good.wav -map 0:0 -map 1:0 -c copy output.mp4 ffmpeg -i input.mp4 -i input.wav -c:a aac -vcodec copy -map 0:0 -map 1:0 output.mp4  Ffmpeg # Обрезка. Нужно высчитать -t.\nВырезать 5 мин.\nffmpeg -ss 01:09:00 -t 00:05:00 -i arch.mkv -c:v copy -c:a copy out.mkv  Обрезаем последние 2 сек. из исходника в 8 сек.(00:00:08).\nffmpeg -ss 00:00:00 -i test.mkv -c copy -t 00:00:06 test2.mkv  С первой минуты по вторую(фрагмент с середины).\nffmpeg -ss 00:01:00 -i video.mp4 -to 00:02:00 -c copy -copyts out.mp4  Удалить первые 1.30 секунды.\nffmpeg -ss 00:00:01.30 -i video.mp4 -c copy out.mp4  Замедление, множитель больше 1.\n Замедление в 2 раза: ffmpeg -i arch.mp4 -vf \u0026quot;setpts=2.0*PTS\u0026quot; speed_down.mp4  Ускорение #   Ускорение в 2 раза: ffmpeg -i arch.mp4 -vf \u0026quot;setpts=0.5*PTS\u0026quot; speed.mp4\n  Ускорение в 3 раза: ffmpeg -i arch.mp4 -vf \u0026quot;setpts=1/3*PTS\u0026quot; speed.mp4\n  Ускорение в 5 раз: ffmpeg -i arch.mp4 -vf \u0026quot;setpts=1/5*PTS\u0026quot; speed.mp4\n  Замедление в 5 раз: ffmpeg -i arch.mp4 -vf \u0026quot;setpts=1*5*PTS\u0026quot; out.mp4\n  Убрать аудио: -an\n  Убрать видео: -vn\n  Сохранить оригинальные кодеки: -c copy\n  Битрейт аудио: -b:a (-b:a 320k)\n  Битрейт видео: -b:v (-b:v 16M)\n  Количество кадров fps: -r (-r 25)\n  Разрешение видео: -s (-s 1280x720)\n  Перед ускорением нужно убрать аудио -an.\nffmpeg -i arch.mkv -r 30 -s 1920x1080 out.mp4 ffmpeg -i out.mp4 -vf \u0026quot;setpts=0.8*PTS\u0026quot; speed.mp4  Или комплексное, примерно на 20% atempo=1/setpts.\nffmpeg -i arch.mkv -filter_complex \u0026quot;[0:v]setpts=0.8*PTS[v];[0:a]atempo=1.25[a]\u0026quot; -map \u0026quot;[v]\u0026quot; -map \u0026quot;[a]\u0026quot; -b:a 128k -r 30 -s 1920x1080 speed.mp4  Мозайка.\nffmpeg -i 1.avi -i 2.avi -i 3.avi -i 4.avi -filter_complex \u0026quot; nullsrc=size=640x480 [base]; [0:v] setpts=PTS-STARTPTS, scale=320x240 [upperleft]; [1:v] setpts=PTS-STARTPTS, scale=320x240 [upperright]; [2:v] setpts=PTS-STARTPTS, scale=320x240 [lowerleft]; [3:v] setpts=PTS-STARTPTS, scale=320x240 [lowerright]; [base][upperleft] overlay=shortest=1 [tmp1]; [tmp1][upperright] overlay=shortest=1:x=320 [tmp2]; [tmp2][lowerleft] overlay=shortest=1:y=240 [tmp3]; [tmp3][lowerright] overlay=shortest=1:x=320:y=240 \u0026quot; -c:v libx264 output.mkv ffmpeg -i 1.avi -i 2.avi -i 3.avi -i 4.avi -filter_complex \u0026quot;nullsrc=size=640x480 [base]; [0:v] setpts=PTS-STARTPTS, scale=320x240 [upperleft]; [1:v] setpts=PTS-STARTPTS, scale=320x240 [upperright]; [2:v] setpts=PTS-STARTPTS, scale=320x240 [lowerleft]; [3:v] setpts=PTS-STARTPTS, scale=320x240 [lowerright]; [base][upperleft] overlay=shortest=1 [tmp1]; [tmp1][upperright] overlay=shortest=1:x=320 [tmp2]; [tmp2][lowerleft] overlay=shortest=1:y=240 [tmp3]; [tmp3][lowerright] overlay=shortest=1:x=320:y=240\u0026quot; -c:v libx264 output.mkv  Наложение аудио # Опция shortest — если аудио и видео на входе имеют разную длительность по времени, то результат будет иметь длительность наименьшего компонента.\nffmpeg -i видео.mp4 -i аудио.wav -c:v copy -c:a copy -shortest результат.mkv mencoder -audiofile аудио.wav видео.mp4 -o результат.mp4 -ovc copy -oac copy  Наложение второй аудио дорожки и понижениие громкости.\nffmpeg -i video4.mp4 -i wave.mp3 -filter_complex \u0026quot;[0:a]volume=1[a1];[1:a]volume=0.2[a2];[a1][a2]amerge=inputs=2\u0026quot; -c:v copy -c:a libmp3lame -shortest out_mp3.mp4  Зацикливаем 2 аудио дорожку и понижаем звук, т.к. применили -stream_loop, то и -shortest нужен.\nffmpeg -i video4.mp4 -stream_loop -1 -i bla.mp3 -filter_complex \u0026quot;[0:a]volume=1[a1];[1:a]volume=0.04[a2];[a1][a2]amerge=inputs=2\u0026quot; -c:v copy -c:a libmp3lame -shortest out_mp3.mp4  Если видео без звука.\nffmpeg -i video4.mp4 -stream_loop -1 -i bla.mp3 -filter_complex \u0026quot;[1:a]volume=0.8[a]\u0026quot; -map 0:v -map \u0026quot;[a]\u0026quot; -c:v copy -c:a aac -shortest out.mp4  Понижаем звук аудио.\nffmpeg -i video.mp4 -stream_loop -1 -i bla.mp3 -filter:a \u0026quot;volume=0.8\u0026quot; -shortest res.mp4  Конвертировать видео в gif # С 5 сек. на 2 сек.\nffmpeg -y -ss 5 -t 2 -i ~/.wall/bg.mp4 -filter_complex \u0026quot;fps=10,scale=1366👎flags=lanczos[x];[x]split[x1][x2]; [x1]palettegen[p];[x2][p]paletteuse\u0026quot; ~/.wall/out.gif  Изменить размер gif.\nconvert -resize 1366 -quality 10 .wall/wall.gif .wall/out.gif  Stream # Live Stream (3000kbps) rtmp://live.restream.io/live/key flv, libx264, b/rate 3000, mp3 128  Kdenlive #  Настроить-Параметры проекта по умолчанию-HD 1080i 30fps.  Или.\n Настроить-Параметры проекта по умолчанию-HD 1080p 60fps. Настроить-Окружение-Потоков обработки - 2. Сборка. Generic, MP4 (H264/AAC).  Ускоряем сборку на MP4 (H264/AAC). Сборка-создать сценарий. Отредактировать скрипт. Изменить preset=faster на preset=ultrafast. Проверить скорость работы скрипта до и после.\ntime ./script001.sh  Размер выходного файла.\ndu -h video.mp4  Результат теста. (исходник video.mkv 1:21 2,5Mb).\n HD 1080i 30fps MP4 (H264/AAC) - 7:46 4,2 Mb HD 1080p 60fps MP4 (H264/AAC) faster - 14:22 5,6Mb HD 1080p 30fps MP4 (H264/AAC) faster - 8:24 4,1Mb +HD 1080p 30fps MP4 (H264/AAC) ultrafast - 6:34 8.2Mb HD 1080p 30fps webm - 7:58 9.9Mb  "}).add({id:27,href:"/wiki/install/trouble/",title:"Решение проблем",description:"Некоторые решенные проблемы описаны на форуме forum.ctlos.ru. Нашли проблему, или есть идеи, как что-то улучшить, создайте тему на форуме(ссылка выше), либо запрос на github.\nGrub #  Как добавить в загрузчик grub другие os?\n sudo pacman -S os-prober sudo sed -i '/GRUB_DISABLE_OS_PROBER/s/^#//g' /etc/default/grub # или раскомментить строку GRUB_DISABLE_OS_PROBER sudo nano /etc/default/grub sudo grub-mkconfig -o /boot/grub/grub.cfg  Grub efi.\nСброс root пароля # Reset_root_password.\nThunar # Генерация пунктов в левом меню.",content:"Некоторые решенные проблемы описаны на форуме forum.ctlos.ru. Нашли проблему, или есть идеи, как что-то улучшить, создайте тему на форуме(ссылка выше), либо запрос на github.\nGrub #  Как добавить в загрузчик grub другие os?\n sudo pacman -S os-prober sudo sed -i '/GRUB_DISABLE_OS_PROBER/s/^#//g' /etc/default/grub # или раскомментить строку GRUB_DISABLE_OS_PROBER sudo nano /etc/default/grub sudo grub-mkconfig -o /boot/grub/grub.cfg  Grub efi.\nСброс root пароля # Reset_root_password.\nThunar # Генерация пунктов в левом меню.\nxdg-user-dirs-gtk-update  Контекстное меню thunar # Добавляем дополнительные пункты для создания файлов.\nXDG_TEMPLATES_DIR=$(xdg-user-dir TEMPLATES) cd \u0026quot;$XDG_TEMPLATES_DIR\u0026quot; touch 'New Text File.txt' \u0026amp;\u0026amp; touch 'New Word File.doc' \u0026amp;\u0026amp; touch 'New Excel Spreadsheet.xls'  Размер tmp # Иногда при установки больших прог. из Aur возникает ошибка (Недостаточно места). Смотрим, сколько места.\ndf -h /tmp  Изменяем размер.\nmount -o remount,size=4G /tmp  Теперь стало 4G.\ndf -h /tmp  Ассоциации файлов # Это нужно, если у вас открывается файл, или каталог не в той программе. Например, директория в музыкальном плеере.\nРаспознаем файл.\nxdg-mime query filetype wallpaper.jpg  Проверяем дефолтные настройки.\nxdg-mime query default inode/directory  Переопределяем.\nxdg-mime default org.gnome.Nautilus.desktop inode/directory # или thunar xdg-mime default thunar.desktop inode/directory  Еще пример.\nxdg-mime default vlc.desktop video/mp4  Win кодировка # Установить gedit, выполнить в терминале команду ниже, радуемся.\ngsettings set org.gnome.gedit.preferences.encodings candidate-encodings \u0026quot;['UTF-8', 'WINDOWS-1251', 'KOI8-R', 'CURRENT', 'ISO-8859-15', 'UTF-16']\u0026quot;  Сброс времени # Создать и применить рег.файл с таким содержанием.\nWindows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation] \u0026quot;RealTimeIsUniversal\u0026quot;=dword:00000001  "}).add({id:28,href:"/wiki/packages/ssh/",title:"Установка и настройка ssh",description:"Мануал по настройке ssh в Linux.",content:"Установка # Пакет должен быть установлен как на клиенте, так и сервере.\nsudo pacman -S openssh  На сервере запустить и включить сервис в автостарт.\nsudo systemctl start sshd sudo systemctl enable sshd  Настройка на клиенте # Генерация ключей # ssh-keygen -t rsa -b 4096 -C \u0026quot;ctlos@protonmail.com\u0026quot; # или так ssh-keygen -t rsa -q -N '' -f ~/.ssh/id_rsa  Ключи упадут в ~/.ssh.\nОтправка ключа на сервер # ssh-copy-id username@remote_host  Или так. Копируем ключ на сервер.\ncat .ssh/id_rsa.pub | ssh bibo@192.168.1.35 'mkdir -p ~/.ssh \u0026amp;\u0026amp; cat \u0026gt;\u0026gt; .ssh/authorized_keys'  Настройка конфига # nano ~/.ssh/config  Подгоняем конфиг под конкретный сервер. Комментарии не учитываются #. Хостов может быть сколько угодно, какждый - сервер.\nHost * #ForwardAgent yes #ForwardX11 yes #ForwardX11Trusted yes Host bibo ForwardAgent yes ForwardX11 yes ForwardX11Trusted yes HostName 198.157.18.18 Port 223 User bibo  Блок с Host * задает глобальные настройки для всех серверов.\nДанный блок с Host bibo конкретно под сервер.\n Host: может быть любой, для вашего удобства. Строки c Forward: включаем X11Forwarding. Дальше ip, port, user (понятно).  Настройка на сервере # Файл конфигурации тут: /etc/ssh/sshd_config.\nЗапрещаем авторизацию от root, можно не править, по умолчанию так.\nPermitRootLogin no  Если правим, то укажем кому можно.\nAllowUsers bibo boba  Отключение авторизации по паролю.\nPasswordAuthentication no  Укажем в конфиге файл авторизации.\nAuthorizedKeysFile .ssh/authorized_keys  Права как на клиенте так и на сервере.\nchmod 700 ~/.ssh chmod 600 ~/.ssh/* chown -R $USER ~/.ssh  Перезапустить сервис.\nsudo systemctl restart sshd  X11Forwarding на сервере # Снять комментарии и привести строки в вид, в файле /etc/ssh/sshd_config.\nX11Forwarding yes X11DisplayOffset 10 X11UseLocalhost no  Перезапустить сервис.\nsudo systemctl restart sshd  При запуске через sudo, если ошибка cannot open display: xxx-xx:10.0, то скопировать файл авторизации в /root.\nsudo cp -r ~/user_name/.Xauthority /root  Проброс портов # Через ssh можно пробрасывать порты в обе стороны и даже строить связки, мосты. См. https://unix.stackexchange.com/a/118650.\nNpm пакет для проброса портов localtunnel.\n 199.199.199.199 IP адрес сервера в интернете 127.0.0.1 IP локальной машины, localhost  Просмотр активных портов, утилита ss в пакете yay -S iproute2.\nss -tulpn ss -h  Проброс с сервера # ssh -N -L 5001:127.0.0.1:5000 root@199.199.199.199   5000: порт на сервере который мы хотим видеть в локальной сети. 5001: локальный порт который пришел с сервера. -N говорит повесить в фоновом режиме, завершение соединения по ctrl+c.  Проброс с локалки # Сначала пробрасываем на сервер.\nssh -f -N -R 2222:127.0.0.1:22 root@199.199.199.199   22: локальный порт который пришел на сервер. 2222: порт на сервере который можно использовать для подключения к машине, которая может быть за NAT. -N говорит повесить в фоновом режиме, завершение соединения по ctrl+c. -f создает стабильное соединение и завершает комманду, опустите этот флаг, если хотите держать в фоне это соединение.  Теперь подключаемся к серверу.\nssh root@199.199.199.199  И с сервера уже идем на машину порт которой пробросили. В данном примере 22 порт, соответственно на машине к которой хочем подключиться должен быть включен sshd с разрешением к подключению.\nssh -p 2222 username@127.0.0.1   Если вы собираетесь пробросить на сервер отличный от ssh порт, например 8080, то обязательно пропишите в конфиге sshd GatewayPorts yes.\n sudo nano /etc/ssh/sshd_config GatewayPorts yes sudo systemctl restart sshd  "}).add({id:29,href:"/wiki/btrfs/",title:"Btrfs",description:"Prologue Doks.",content:""}).add({id:30,href:"/wiki/other/notes/",title:"Заметки",description:"Загрузка и запись iso # https://github.com/ctlos/ctlosiso/releases\nПрописать полную ссылку к файлу.\nWget # sudo wget -O - https://github.com/ctlos/ctlosiso/releases/download/v1.0.0/*.iso \u0026gt; /dev/sdX \u0026amp;\u0026amp; sync  Curl # sudo curl -L https://github.com/ctlos/ctlosiso/releases/download/v1.0.0/*.iso \u0026gt; /dev/sdX \u0026amp;\u0026amp; sync  Curl и dd # sudo curl -L https://github.com/ctlos/ctlosiso/releases/download/v1.0.0/*.iso | dd bs=4M of=/dev/sdX status=progress \u0026amp;\u0026amp; sync  Установка без носителя #  wiki.archlinux.org/index.php/Install_from_existing_Linux. Video.  Настройка sudo # EDITOR=nano visudo  Дать пользователю привилегии суперпользователя, когда он вводит sudo.",content:"Загрузка и запись iso # https://github.com/ctlos/ctlosiso/releases\nПрописать полную ссылку к файлу.\nWget # sudo wget -O - https://github.com/ctlos/ctlosiso/releases/download/v1.0.0/*.iso \u0026gt; /dev/sdX \u0026amp;\u0026amp; sync  Curl # sudo curl -L https://github.com/ctlos/ctlosiso/releases/download/v1.0.0/*.iso \u0026gt; /dev/sdX \u0026amp;\u0026amp; sync  Curl и dd # sudo curl -L https://github.com/ctlos/ctlosiso/releases/download/v1.0.0/*.iso | dd bs=4M of=/dev/sdX status=progress \u0026amp;\u0026amp; sync  Установка без носителя #  wiki.archlinux.org/index.php/Install_from_existing_Linux. Video.  Настройка sudo # EDITOR=nano visudo  Дать пользователю привилегии суперпользователя, когда он вводит sudo.\nmalody ALL=(ALL) ALL  Или группе.\n%wheel ALL=(ALL) ALL  Не спрашивать пароль у пользователя.\nDefaults:malody !authenticate  "}).add({id:31,href:"/wiki/install/recomend/",title:"Рекомендации",description:"Linux-zen # Установка другого ядра, Kernels.\nЕсли у вас карта nvidia, то драйвер нужно заменить.\nsudo pacman -S linux-zen linux-zen-headers sudo mkinitcpio -p linux-zen sudo grub-mkconfig -o /boot/grub/grub.cfg  Журнал systemd # Уменьшение размера журнала логов Systemd.\nsudo nano /etc/systemd/journald.conf  Раскомментировать и изменить строку.\nSystemMaxUse=50M  Перезапустите сервис.\nsudo systemctl restart systemd-journald.service  Disable man-db # Отключаем переодическое увеличение загрузки из-за man-db.service.\nsudo systemctl disable man-db.service sudo systemctl disable man-db.",content:"Linux-zen # Установка другого ядра, Kernels.\nЕсли у вас карта nvidia, то драйвер нужно заменить.\nsudo pacman -S linux-zen linux-zen-headers sudo mkinitcpio -p linux-zen sudo grub-mkconfig -o /boot/grub/grub.cfg  Журнал systemd # Уменьшение размера журнала логов Systemd.\nsudo nano /etc/systemd/journald.conf  Раскомментировать и изменить строку.\nSystemMaxUse=50M  Перезапустите сервис.\nsudo systemctl restart systemd-journald.service  Disable man-db # Отключаем переодическое увеличение загрузки из-за man-db.service.\nsudo systemctl disable man-db.service sudo systemctl disable man-db.timer  "}).add({id:32,href:"/wiki/other/",title:"Прочее",description:"Prologue Doks.",content:""}).add({id:33,href:"/wiki/",title:"Ctlos Linux Wiki",description:"Рекомендации, руководства, заметки.",content:" Благодарим за интерес к Ctlos Linux, надеемся вас все устроит.\n Ctlos Linux — базируется на Arch Linux, iso образ собран с помощью archiso скриптов, полностью совместим с Arch Linux.\nСобиралась данная система изначально исключительно для себя. Стандартное ПО, как и в большинстве дистрибутивов Linux.\n\n Скачать Ctlos История изменений Поддержать Исходный код   Доступен только для x86–64(64-bit) архитектуры процессора.\n Будьте добры, поставьте звезду на GitHub ctlosiso repo.\n\nПройдите небольшой опрос.\nСтатьи о Ctlos #  Русский Arch Linux Русский Arch Linux: интервью с создателем CtlOS  В чем особенность Ctlos #  Поддержка русского языка. Графический инсталлятор — calamares. Менеджер программ — pamac-aur. Набор необходимых драйверов — видео, звук, сеть. Настроенный внешний вид. Включена поддержка Aur, пакетный менеджер yay. Не перегружен софтом.  В чем смысл всех этих дистрибутивов?\n Смысла нет, и в этом смысл. Люди могут делать с Gnu/Linux всё, что хотят и они это делают, в этом вся суть.\nRichard Matthew Stallman\n Не все должно иметь смысл, чтобы люди захотели это сделать.\nРесурсы Ctlos #  Если вы обнаружите какие-либо проблемы, пожалуйста, не стесняйтесь обращаться. Любые отзывы приветствуются.\n  Telegram Chat Matrix Chat Discord Паблик VK Forum Ctlos Uptime Дорожная карта Баг трекер Исходный код сайта YouTube канал автора  Контакты #  Telegram Keybase Proof admin@ctlos.ru  Автор # @creio — улыбок тебе, деривативный топор.\n Noname которого не будет на дистроватч.\n "}).add({id:34,href:"/wiki/btrfs/btrfs-part2/",title:"Btrfs перенос, восстановление",description:"Перенос на раздел # pacman -S rsync btrfs-progs arch-install-scripts  lsblk - подсветить все разделы что бы определиться что монтировать.\nПри необходимости разбить диск, флаг -z обнулить таблицу разделов.\ncfdisk -z /dev/sda  Монтируем.\nmount /dev/sda6 /mnt  Создадим три подтома root, домашний каталог пользователя и подтом для хранения.\nbtrfs subvolume create /mnt/@_root btrfs subvolume create /mnt/@_home btrfs subvolume create /mnt/@_snapshots btrfs subvolume list /mnt  Для переноса смонтируйте резервную систему и перенесите ее.",content:"Перенос на раздел # pacman -S rsync btrfs-progs arch-install-scripts  lsblk - подсветить все разделы что бы определиться что монтировать.\nПри необходимости разбить диск, флаг -z обнулить таблицу разделов.\ncfdisk -z /dev/sda  Монтируем.\nmount /dev/sda6 /mnt  Создадим три подтома root, домашний каталог пользователя и подтом для хранения.\nbtrfs subvolume create /mnt/@_root btrfs subvolume create /mnt/@_home btrfs subvolume create /mnt/@_snapshots btrfs subvolume list /mnt  Для переноса смонтируйте резервную систему и перенесите ее.\nmkdir /mnt/dump mount /dev/sdb1 /mnt/dump  rsync -cauvP --delete --delete-excluded --exclude={\u0026quot;/dev/*\u0026quot;,\u0026quot;/proc/*\u0026quot;,\u0026quot;/sys/*\u0026quot;,\u0026quot;/tmp/*\u0026quot;,\u0026quot;/run/*\u0026quot;,\u0026quot;/mnt/*\u0026quot;,\u0026quot;/media/*\u0026quot;,\u0026quot;/lost+found\u0026quot;,\u0026quot;/var/lib/pacman/sync/*\u0026quot;,\u0026quot;/var/cache/*\u0026quot;,\u0026quot;/var/tmp/*\u0026quot;,\u0026quot;/boot/*\u0026quot;,\u0026quot;/home/*\u0026quot;} /mnt/dump/@/* /mnt/@_root/  rsync -cauvP --delete --delete-excluded --exclude={\u0026quot;/dev/*\u0026quot;,\u0026quot;/proc/*\u0026quot;,\u0026quot;/sys/*\u0026quot;,\u0026quot;/tmp/*\u0026quot;,\u0026quot;/run/*\u0026quot;,\u0026quot;/mnt/*\u0026quot;,\u0026quot;/media/*\u0026quot;,\u0026quot;/lost+found\u0026quot;,\u0026quot;/var/lib/pacman/sync/*\u0026quot;,\u0026quot;/var/cache/*\u0026quot;,\u0026quot;/var/tmp/*\u0026quot;,\u0026quot;/boot/*\u0026quot;,\u0026quot;/home/*\u0026quot;} /mnt/dump/@home/* /mnt/@_home/  И отмонтируем корень ФС.\numount /mnt rm -rf /mnt/dump  Чтобы монтировать подтом подобно обычному разделу диска, команде mount нужно указывать опцию subvol=PATH. PATH - путь относительно корня ФС. Монтируем корень. Сжатие zstd, или lzo.\nmount -o subvol=@,compress=zstd /dev/sda6 /mnt  Какие рекомендуемые варианты для установки на SD-карту, или медленный SSD-накопитель? В /etc/fstab См. https://wiki.debian.org/Btrfs.\n/dev/sdaX / btrfs x-systemd.device-timeout=0,noatime,compress=lzo,commit=0,ssd_spread,autodefrag 0 0 UUID=\u0026lt;the_device_uuid\u0026gt; /mount/point/ btrfs noauto,compress=lzo,noatime,autodefrag 0 0  Создаём директорию и монтируем в неё наш будущий каталог пользователей, если boot раздел отдеольно, нужно его тоже смонтироват в /mnt/boot.\nЕсли нужно mkdir /mnt/home.\nmount -o subvol=@home,compress=zstd /dev/sda6 /mnt/home  Если нужно mkdir /mnt/snapshots.\nmount -o subvol=@snapshots,compress=zstd /dev/sda6 /mnt/snapshots mount -t proc none /mnt/proc mount -t sysfs none /mnt/sys mount -o bind /dev /mnt/dev cp -L /etc/resolv.conf /mnt/etc swapon /dev/sda3  Начиная с ядра 5.0 можно создать swap-файл, swap-файл должен располагаться целиком на одном устройстве, создаваться с отключенным COW и сжатием.\ntruncate -s 0 /swapfile chattr +C /swapfile btrfs property set /swapfile compression none fallocate /swapfile -l4g chmod 600 /swapfile mkswap /swapfile lsattr /swapfile swapon /swapfile  Теперь нужно проинициализировать систему. Редактируем FSTAB, или запускаем genfstab.\nrm /mnt/etc/fstab genfstab -pU /mnt \u0026gt; /mnt/etc/fstab  Переходим в нашу новую систему.\nchroot /mnt /bin/bash  Генерация initramfs с помощью mkinicpio.\nmkinitcpio -p linux  Установить загрузчик GRUB2 и сконфигурировать его.\ngrub-install /dev/sdХ grub-mkconfig -o /boot/grub/grub.cfg  exit или \u0026ldquo;Ctrl + D\u0026rdquo; выйти из chroot.\nТеперь нужно все размонтировать.\numount /mnt/home umount /mnt/snapshots umount /mnt reeboot  Снапшот на другой раздел #  Incremental_Backup btrfs-sxbackup btrfs-snapshot  Монтируем основной раздел.\nmkdir /mnt/arch mount /dev/sda6 /mnt/arch  Монтируем раздел/диск для сброса снапшота.\nmkdir /mnt/dump mount /dev/sda8 /mnt/dump  Нужно создавать снапшоты, только для чтения(readonly), требует send. Для отправки на другие узлы.\n Сбрасываем все из кэша на диск sync, ВАЖНО.\n btrfs subvolume snapshot -r /mnt/arch/@ /mnt/arch/@_BACKUP sync btrfs subvolume snapshot -r /mnt/arch/@home /mnt/arch/@home_BACKUP sync  Переносим снапшоты. Можно send в файл btrfs send /mnt/arch/@_BACKUP -f /dump.sn, receive из файла btrfs receive /mnt/dump/ -f /dump.sn.\nbtrfs send /mnt/arch/@_BACKUP | btrfs receive /mnt/dump/ btrfs send /mnt/arch/@home_BACKUP | btrfs receive /mnt/dump/  Инкрементальные readonly снимки.\nbtrfs subvolume snapshot -r /mnt/arch/@ /mnt/arch/@_BACKUP_new sync btrfs subvolume snapshot -r /mnt/arch/@home /mnt/arch/@home_BACKUP_new sync  Создаём разность между снимками.\nbtrfs send -p /mnt/arch/@_BACKUP /mnt/arch/@_BACKUP_new | btrfs receive /mnt/dump/ btrfs send -p /mnt/arch/@home_BACKUP /mnt/arch/@home_BACKUP_new | btrfs receive /mnt/dump/  Просмотрим листинг.\nbtrfs subvolume list /mnt/dump  Отправка по ssh # Локально: генерируем ключи, создаём ~/.ssh/config.\n# генерация пары ключий, публичный(отправляем на сервер) # id_rsa.pub ssh-keygen -t rsa -b 4096 -C \u0026quot;lol@gmail.com\u0026quot; # nano ~/.ssh/config Host office HostName 192.168.100.51 Port 22 User test  PasswordAuthentication yes # на сервере /etc/ssh/sshd_config systemctl restart sshd ssh-copy-id -i ~/.ssh/id_rsa.pub office # отправка ключа на сервер # на сервере /etc/ssh/sshd_config PermitRootLogin no PasswordAuthentication no # отключим доступ по паролю, всем. PubkeyAuthentication yes AuthorizedKeysFile .ssh/authorized_keys systemctl restart sshd systemctl enable sshd btrfs send /mnt/arch/@_BACKUP | ssh office \u0026quot;btrfs receive /mnt/backups\u0026quot; # или btrfs send /mnt/arch/@_BACKUP | ssh -p 22 test@192.168.100.51 \u0026quot;btrfs receive /mnt/backups\u0026quot;  Пример скрипта - инкрементальный, взято с (ubuntu.ru/wiki).\n#!/bin/bash # точки монтирования src=$(mktemp -d \u0026quot;${TMPDIR:-/tmp/}$(basename 0).XXXXXXXXXXXX\u0026quot;) dst=$(mktemp -d \u0026quot;${TMPDIR:-/tmp/}$(basename 0).XXXXXXXXXXXX\u0026quot;) #монтируем mount /dev/sda2 $src mount /dev/sdb2 $dst if [ -e $src/root_BCKP ] then # первый запуск полный бекап # Создаем снимок read-only btrfs subvolume snapshot -r $src/@ $src/root_BCKP sync # переносим btrfs send $src/root_BCKP | btrfs receive $dst/ else # повторный запуск, инкрементальный # Переименовываем mv $src/root_BCKP $src/root_BCKP_prev mv $dst/root_BCKP $dst/root_BCKP_prev # Создаем текущий btrfs subvolume snapshot -r $src/@ $src/root_BACKUP sync # инкрементальный бекап btrfs send -p $src/root_BCKP_prev $src/root_BACKUP | btrfs receive $dst/ fi # В $dst/root_BACKUP копия корня. umount $src umount $dst # Удаляем точки монтирования rmdir $src rmdir $dst   Всё это работает и в обратном порядке.\n Удаляем или переименовываем mv.\nbtrfs subvolume delete /mnt/dump/@_BACKUP btrfs subvolume delete /mnt/dump/@home_BACKUP  Переименовываем новые snapshot(ы).\nmv /mnt/dump/@_BACKUP_new /mnt/dump/@ mv /mnt/dump/@home_BACKUP_new /mnt/dump/@home   Свойства. Сейчас они в ro - read-only(только чтение), изменим на rw - read-write(чтение-завись). Значения изменяются так: ro true, ro false.\n btrfs property get /mnt/dump/@ # посмотр свойств btrfs property set /mnt/dump/@ ro false btrfs property set /mnt/dump/@home ro false btrfs subvolume show /mnt/dump/@ # информация  Удаляем, если нужно.\nbtrfs subvolume delete /mnt/arch/@_BACKUP btrfs subvolume delete /mnt/arch/@home_BACKUP  Отмонтируем.\numount /mnt/arch umount /mnt/dump rmdir /mnt/{arch,dump}  Восстановление #  Восстановление, как и выше, грузимся с live-usb, или с другой системы. Монтируем раздел для восстановления, поврежденный и раздел с backup, восстанавливаем снапшоты.\n Монтируем файловую систему, для пересоздания fstab и инициализации.\nmount -o subvol=@,compress=zstd /dev/sda8 /mnt ls /mnt mount -o subvol=@home,compress=zstd /dev/sda8 /mnt/home  Если boot раздел отдеольно, то нужно его тоже смонтироват в /mnt/boot и все другие subvolume.\nmount /dev/sda2 /mnt/boot mount -t proc none /mnt/proc mount -t sysfs none /mnt/sys mount -o bind /dev /mnt/dev cp -L /etc/resolv.conf /mnt/etc swapon /dev/sda3  Редактируем FSTAB, или запускаем genfstab.\nrm /mnt/etc/fstab genfstab -pU /mnt \u0026gt; /mnt/etc/fstab nano /mnt/etc/fstab  Переходим в нашу новую систему.\nchroot /mnt  Или zsh.\nchroot /mnt /bin/zsh  Перегенерироваь.\nmkinitcpio -p linux  Установить загрузчик GRUB2 и сконфигурировать его.\ngrub-install /dev/sdХ grub-mkconfig -o /boot/grub/grub.cfg  Инициализируем ключи и обновим, если требуется.\npacman-key --init \u0026amp;\u0026amp; pacman-key --populate \u0026amp;\u0026amp; pacman-key --refresh-keys \u0026amp;\u0026amp; pacman -Syy  exit или \u0026ldquo;Ctrl + D\u0026rdquo; выйти из chroot.\nТеперь нужно все размонтировать.\numount -R /mnt reeboot   Больше разжёвано на ubuntu.ru/wiki.\n "}),search.addEventListener('input',b,!0),suggestions.addEventListener('click',c,!0);function b(){var d,e;const c=7;d=this.value,e=a.search(d,{limit:c,enrich:!0}),suggestions.classList.remove('d-none'),suggestions.innerHTML="";const b={};for(const a of e.flatMap(a=>a.result))b[a.doc.href]=a.doc;for(const d in b){const e=b[d],a=document.createElement('div');if(a.innerHTML='<a href><span></span><span></span></a>',a.querySelector('a').href=d,a.querySelector('span:first-child').textContent=e.title,a.querySelector('span:nth-child(2)').textContent=e.description.slice(0,100),suggestions.appendChild(a),suggestions.childElementCount==c)break}}function c(){while(suggestions.lastChild)suggestions.removeChild(suggestions.lastChild);return!1}})()